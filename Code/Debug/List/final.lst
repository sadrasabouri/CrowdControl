
AVRASM ver. 2.1.30  E:\EE.SUT\Computer Arch (Bagheri)\Project\CrowdControl\Code\Debug\List\final.asm Wed Dec 30 13:25:18 2020

E:\EE.SUT\Computer Arch (Bagheri)\Project\CrowdControl\Code\Debug\List\final.asm(1088): warning: Register r4 already defined by the .DEF directive
E:\EE.SUT\Computer Arch (Bagheri)\Project\CrowdControl\Code\Debug\List\final.asm(1089): warning: Register r5 already defined by the .DEF directive
E:\EE.SUT\Computer Arch (Bagheri)\Project\CrowdControl\Code\Debug\List\final.asm(1090): warning: Register r6 already defined by the .DEF directive
E:\EE.SUT\Computer Arch (Bagheri)\Project\CrowdControl\Code\Debug\List\final.asm(1091): warning: Register r7 already defined by the .DEF directive
E:\EE.SUT\Computer Arch (Bagheri)\Project\CrowdControl\Code\Debug\List\final.asm(1092): warning: Register r8 already defined by the .DEF directive
E:\EE.SUT\Computer Arch (Bagheri)\Project\CrowdControl\Code\Debug\List\final.asm(1093): warning: Register r9 already defined by the .DEF directive
E:\EE.SUT\Computer Arch (Bagheri)\Project\CrowdControl\Code\Debug\List\final.asm(1094): warning: Register r10 already defined by the .DEF directive
E:\EE.SUT\Computer Arch (Bagheri)\Project\CrowdControl\Code\Debug\List\final.asm(1095): warning: Register r11 already defined by the .DEF directive
E:\EE.SUT\Computer Arch (Bagheri)\Project\CrowdControl\Code\Debug\List\final.asm(1096): warning: Register r12 already defined by the .DEF directive
E:\EE.SUT\Computer Arch (Bagheri)\Project\CrowdControl\Code\Debug\List\final.asm(1097): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _second=R4
                 	.DEF _second_msb=R5
                 	.DEF _minute=R6
                 	.DEF _minute_msb=R7
                 	.DEF _hour=R8
                 	.DEF _hour_msb=R9
                 	.DEF _totalcount1_5=R10
                 	.DEF _totalcount1_5_msb=R11
                 	.DEF _nobat1_5=R12
                 	.DEF _nobat1_5_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0072 	JMP  __RESET
000002 940c 00cb 	JMP  _ext_int0_isr
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 009f 	JMP  _timer1_ovf_isr
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000033 001e
000034 0007      	.DB  0x1E,0x0,0x7,0x0
                 
                 _0x0:
000035 2020
000036 2520
000037 3230
000038 3a64      	.DB  0x20,0x20,0x20,0x25,0x30,0x32,0x64,0x3A
000039 3025
00003a 6432
00003b 253a
00003c 3230      	.DB  0x25,0x30,0x32,0x64,0x3A,0x25,0x30,0x32
00003d 2064
00003e 5020
00003f 004d
000040 2020      	.DB  0x64,0x20,0x20,0x50,0x4D,0x0,0x20,0x20
000041 2520
000042 3230
000043 3a64
000044 3025      	.DB  0x20,0x25,0x30,0x32,0x64,0x3A,0x25,0x30
000045 6432
000046 253a
000047 3230
000048 2064      	.DB  0x32,0x64,0x3A,0x25,0x30,0x32,0x64,0x20
000049 4120
00004a 004d
00004b 6f67
00004c 7420      	.DB  0x20,0x41,0x4D,0x0,0x67,0x6F,0x20,0x74
00004d 206f
00004e 6162
00004f 6a64
000050 2065      	.DB  0x6F,0x20,0x62,0x61,0x64,0x6A,0x65,0x20
000051 203a
000052 2000
000053 616e
000054 6166      	.DB  0x3A,0x20,0x0,0x20,0x6E,0x61,0x66,0x61
000055 2072
000056 6f6a
000057 6f6c
000058 6579      	.DB  0x72,0x20,0x6A,0x6F,0x6C,0x6F,0x79,0x65
000059 7320
00005a 6f68
00005b 616d
00005c 6820      	.DB  0x20,0x73,0x68,0x6F,0x6D,0x61,0x20,0x68
00005d 7361
00005e 6174
00005f 646e
E:\EE.SUT\Computer Arch (Bagheri)\Project\CrowdControl\Code\Debug\List\final.asm(1149): warning: .cseg .db misalignment - padding zero byte
000060 0000      	.DB  0x61,0x73,0x74,0x61,0x6E,0x64,0x0
                 _0x2040060:
E:\EE.SUT\Computer Arch (Bagheri)\Project\CrowdControl\Code\Debug\List\final.asm(1151): warning: .cseg .db misalignment - padding zero byte
000061 0001      	.DB  0x1
                 _0x2040000:
000062 4e2d
000063 4e41
000064 4900
000065 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
E:\EE.SUT\Computer Arch (Bagheri)\Project\CrowdControl\Code\Debug\List\final.asm(1154): warning: .cseg .db misalignment - padding zero byte
000066 0000      	.DB  0x0
                 _0x2060003:
000067 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000068 0004      	.DW  0x04
000069 0006      	.DW  0x06
00006a 0066      	.DW  __REG_VARS*2
                 
00006b 0001      	.DW  0x01
00006c 02c4      	.DW  __seed_G102
00006d 00c2      	.DW  _0x2040060*2
                 
00006e 0002      	.DW  0x02
00006f 02c8      	.DW  __base_y_G103
000070 00ce      	.DW  _0x2060003*2
                 
                 _0xFFFFFFFF:
000071 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000072 94f8      	CLI
000073 27ee      	CLR  R30
000074 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000075 e0f1      	LDI  R31,1
000076 bffb      	OUT  GICR,R31
000077 bfeb      	OUT  GICR,R30
000078 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000079 e08d      	LDI  R24,(14-2)+1
00007a e0a2      	LDI  R26,2
00007b 27bb      	CLR  R27
                 __CLEAR_REG:
00007c 93ed      	ST   X+,R30
00007d 958a      	DEC  R24
00007e f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00007f e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000080 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000081 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000082 93ed      	ST   X+,R30
000083 9701      	SBIW R24,1
000084 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000085 ede0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000086 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000087 9185      	LPM  R24,Z+
000088 9195      	LPM  R25,Z+
000089 9700      	SBIW R24,0
00008a f061      	BREQ __GLOBAL_INI_END
00008b 91a5      	LPM  R26,Z+
00008c 91b5      	LPM  R27,Z+
00008d 9005      	LPM  R0,Z+
00008e 9015      	LPM  R1,Z+
00008f 01bf      	MOVW R22,R30
000090 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000091 9005      	LPM  R0,Z+
000092 920d      	ST   X+,R0
000093 9701      	SBIW R24,1
000094 f7e1      	BRNE __GLOBAL_INI_LOOP
000095 01fb      	MOVW R30,R22
000096 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000097 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000098 bfed      	OUT  SPL,R30
000099 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00009a bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00009b e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00009c e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00009d 940c 02b4 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include <stdlib.h>
                 ;#include <alcd.h>
                 ;#include <mega32.h>
                 ;
                 ;int second;
                 ;int minute = 30;
                 ;int hour = 7;
                 ;
                 ;int totalcount1_5, nobat1_5;
                 ;int totalcount6, nobat6;
                 ;int totalcount7, nobat7;
                 ;int TotalCount;
                 ;
                 ;int badje1, badje2, badje3, badje4, badje5, badje6, badje7;
                 ;int namayesh = 0;
                 ;
                 ;void LCD_namayesh_go_to_badje (int a, int b);
                 ;char GetKey();
                 ;
                 ;int d1,d2,d3 ,d4,d5,d6 ,d7;
                 ;int entezar;
                 ;void LCD_namayesh_go_to_badje (int a, int b);
                 ;void LCD_namayesh_entezar (int a);
                 ;
                 ;char str2[10];
                 ;char str3[17];
                 ;int reset = 0;
                 ;int saat_yekonim;
                 ;char str1[10];
                 ;int namayesh;
                 ;char lcd_buffer[17];
                 ;
                 ;// Timer Interrupt
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0000 0027 {
                 
                 	.CSEG
                 _timer1_ovf_isr:
                 ; .FSTART _timer1_ovf_isr
00009f 93ea      	ST   -Y,R30
0000a0 93fa      	ST   -Y,R31
0000a1 b7ef      	IN   R30,SREG
0000a2 93ea      	ST   -Y,R30
                 ; 0000 0028     // Reinitialize Timer1 value
                 ; 0000 0029     TCNT1H = 0x85EE >> 8;
0000a3 e8e5      	LDI  R30,LOW(133)
0000a4 bded      	OUT  0x2D,R30
                 ; 0000 002A     TCNT1L = 0x85EE & 0xff;
0000a5 eeee      	LDI  R30,LOW(238)
0000a6 bdec      	OUT  0x2C,R30
                 ; 0000 002B 
                 ; 0000 002C     if(second==59){
0000a7 e3eb      	LDI  R30,LOW(59)
0000a8 e0f0      	LDI  R31,HIGH(59)
0000a9 15e4      	CP   R30,R4
0000aa 05f5      	CPC  R31,R5
0000ab f4b9      	BRNE _0x3
                 ; 0000 002D         second=0;
0000ac 2444      	CLR  R4
0000ad 2455      	CLR  R5
                 ; 0000 002E         if(minute==59){
0000ae 15e6      	CP   R30,R6
0000af 05f7      	CPC  R31,R7
0000b0 f471      	BRNE _0x4
                 ; 0000 002F             minute=0;
0000b1 2466      	CLR  R6
0000b2 2477      	CLR  R7
                 ; 0000 0030             if(hour==23)
0000b3 e1e7      	LDI  R30,LOW(23)
0000b4 e0f0      	LDI  R31,HIGH(23)
0000b5 15e8      	CP   R30,R8
0000b6 05f9      	CPC  R31,R9
0000b7 f419      	BRNE _0x5
                 ; 0000 0031                 hour=0;
0000b8 2488      	CLR  R8
0000b9 2499      	CLR  R9
                 ; 0000 0032             else
0000ba c003      	RJMP _0x6
                 _0x5:
                 ; 0000 0033                 hour++;
0000bb 01f4      	MOVW R30,R8
0000bc 9631      	ADIW R30,1
0000bd 014f      	MOVW R8,R30
                 ; 0000 0034         }
                 _0x6:
                 ; 0000 0035         else
0000be c003      	RJMP _0x7
                 _0x4:
                 ; 0000 0036             minute++;
0000bf 01f3      	MOVW R30,R6
0000c0 9631      	ADIW R30,1
0000c1 013f      	MOVW R6,R30
                 ; 0000 0037     }
                 _0x7:
                 ; 0000 0038     else
0000c2 c003      	RJMP _0x8
                 _0x3:
                 ; 0000 0039         second++;
0000c3 01f2      	MOVW R30,R4
0000c4 9631      	ADIW R30,1
0000c5 012f      	MOVW R4,R30
                 ; 0000 003A }
                 _0x8:
0000c6 91e9      	LD   R30,Y+
0000c7 bfef      	OUT  SREG,R30
0000c8 91f9      	LD   R31,Y+
0000c9 91e9      	LD   R30,Y+
0000ca 9518      	RETI
                 ; .FEND
                 ;
                 ;// External Interrupt 0
                 ;interrupt [EXT_INT0] void ext_int0_isr(void)
                 ; 0000 003E {
                 _ext_int0_isr:
                 ; .FSTART _ext_int0_isr
0000cb 920a      	ST   -Y,R0
0000cc 921a      	ST   -Y,R1
0000cd 92fa      	ST   -Y,R15
0000ce 936a      	ST   -Y,R22
0000cf 937a      	ST   -Y,R23
0000d0 938a      	ST   -Y,R24
0000d1 939a      	ST   -Y,R25
0000d2 93aa      	ST   -Y,R26
0000d3 93ba      	ST   -Y,R27
0000d4 93ea      	ST   -Y,R30
0000d5 93fa      	ST   -Y,R31
0000d6 b7ef      	IN   R30,SREG
0000d7 93ea      	ST   -Y,R30
                 ; 0000 003F char k;
                 ; 0000 0040 k = GetKey();
0000d8 931a      	ST   -Y,R17
                 ;	k -> R17
0000d9 d293      	RCALL _GetKey
0000da 2f1e      	MOV  R17,R30
                 ; 0000 0041 GICR |= (1 << INTF0);
0000db b7eb      	IN   R30,0x3B
0000dc 64e0      	ORI  R30,0x40
0000dd bfeb      	OUT  0x3B,R30
                 ; 0000 0042 if(!reset){
0000de 91e0 02a5 	LDS  R30,_reset
0000e0 91f0 02a6 	LDS  R31,_reset+1
0000e2 9730      	SBIW R30,0
0000e3 f009      	BREQ PC+2
0000e4 c1af      	RJMP _0x9
                 ; 0000 0043         if(k != 0xFF) // dokme feshorde shod
0000e5 3f1f      	CPI  R17,255
0000e6 f409      	BRNE PC+2
0000e7 c1ab      	RJMP _0xA
                 ; 0000 0044       {
                 ; 0000 0045         if (hour < 13 || (hour ==13 && minute<=30 )){
0000e8 e0ed      	LDI  R30,LOW(13)
0000e9 e0f0      	LDI  R31,HIGH(13)
0000ea 168e      	CP   R8,R30
0000eb 069f      	CPC  R9,R31
0000ec f04c      	BRLT _0xC
0000ed 15e8      	CP   R30,R8
0000ee 05f9      	CPC  R31,R9
0000ef f429      	BRNE _0xD
0000f0 e1ee      	LDI  R30,LOW(30)
0000f1 e0f0      	LDI  R31,HIGH(30)
0000f2 15e6      	CP   R30,R6
0000f3 05f7      	CPC  R31,R7
0000f4 f40c      	BRGE _0xC
                 _0xD:
0000f5 c007      	RJMP _0xB
                 _0xC:
                 ; 0000 0046             saat_yekonim = 1;
0000f6 e0e1      	LDI  R30,LOW(1)
0000f7 e0f0      	LDI  R31,HIGH(1)
0000f8 93e0 02a7 	STS  _saat_yekonim,R30
0000fa 93f0 02a8 	STS  _saat_yekonim+1,R31
                 ; 0000 0047         }else{
0000fc c005      	RJMP _0x10
                 _0xB:
                 ; 0000 0048             saat_yekonim = 0 ;
0000fd e0e0      	LDI  R30,LOW(0)
0000fe 93e0 02a7 	STS  _saat_yekonim,R30
000100 93e0 02a8 	STS  _saat_yekonim+1,R30
                 ; 0000 0049         }
                 _0x10:
                 ; 0000 004A       switch(k)
000102 2fe1      	MOV  R30,R17
000103 e0f0      	LDI  R31,0
                 ; 0000 004B         {
                 ; 0000 004C         case 1 :
000104 30e1      	CPI  R30,LOW(0x1)
000105 e0a0      	LDI  R26,HIGH(0x1)
000106 07fa      	CPC  R31,R26
000107 f009      	BREQ PC+2
000108 c061      	RJMP _0x14
                 ; 0000 004D             if (saat_yekonim) {
000109 940e 065a 	CALL SUBOPT_0x0
00010b f409      	BRNE PC+2
00010c c05c      	RJMP _0x15
                 ; 0000 004E                 TotalCount += 1;
00010d 940e 0660 	CALL SUBOPT_0x1
                 ; 0000 004F                 totalcount1_5 += 1;
00010f 01f5      	MOVW R30,R10
000110 9631      	ADIW R30,1
000111 015f      	MOVW R10,R30
                 ; 0000 0050                 if(badje1 == 0){
000112 91e0 026a 	LDS  R30,_badje1
000114 91f0 026b 	LDS  R31,_badje1+1
000116 9730      	SBIW R30,0
000117 f441      	BRNE _0x16
                 ; 0000 0051                     badje1 = 1;
000118 940e 066a 	CALL SUBOPT_0x2
                 ; 0000 0052                     nobat1_5 += 1;
                 ; 0000 0053                     namayesh = 1;
00011a 940e 0674 	CALL SUBOPT_0x3
                 ; 0000 0054                     LCD_namayesh_go_to_badje(nobat1_5, 1);
00011c e0a1      	LDI  R26,LOW(1)
00011d e0b0      	LDI  R27,0
00011e d1ff      	RCALL _LCD_namayesh_go_to_badje
                 ; 0000 0055                     namayesh = 0;
00011f c046      	RJMP _0x65
                 ; 0000 0056 
                 ; 0000 0057                 }
                 ; 0000 0058                 else if (badje2 == 0){
                 _0x16:
000120 91e0 026c 	LDS  R30,_badje2
000122 91f0 026d 	LDS  R31,_badje2+1
000124 9730      	SBIW R30,0
000125 f441      	BRNE _0x18
                 ; 0000 0059                     badje2 = 1;
000126 940e 067d 	CALL SUBOPT_0x4
                 ; 0000 005A                     nobat1_5 += 1;
                 ; 0000 005B                     namayesh = 1;
000128 940e 0674 	CALL SUBOPT_0x3
                 ; 0000 005C                     LCD_namayesh_go_to_badje(nobat1_5, 2);
00012a e0a2      	LDI  R26,LOW(2)
00012b e0b0      	LDI  R27,0
00012c d1f1      	RCALL _LCD_namayesh_go_to_badje
                 ; 0000 005D                     namayesh = 0;
00012d c038      	RJMP _0x65
                 ; 0000 005E                 }
                 ; 0000 005F                 else if (badje3 == 0){
                 _0x18:
00012e 91e0 026e 	LDS  R30,_badje3
000130 91f0 026f 	LDS  R31,_badje3+1
000132 9730      	SBIW R30,0
000133 f441      	BRNE _0x1A
                 ; 0000 0060                     badje3 = 1;
000134 940e 0687 	CALL SUBOPT_0x5
                 ; 0000 0061                     nobat1_5 += 1;
                 ; 0000 0062                     namayesh = 1;
000136 940e 0674 	CALL SUBOPT_0x3
                 ; 0000 0063                     LCD_namayesh_go_to_badje(nobat1_5, 3);
000138 e0a3      	LDI  R26,LOW(3)
000139 e0b0      	LDI  R27,0
00013a d1e3      	RCALL _LCD_namayesh_go_to_badje
                 ; 0000 0064                     namayesh = 0;
00013b c02a      	RJMP _0x65
                 ; 0000 0065                 }
                 ; 0000 0066                 else if (badje4 == 0){
                 _0x1A:
00013c 91e0 0270 	LDS  R30,_badje4
00013e 91f0 0271 	LDS  R31,_badje4+1
000140 9730      	SBIW R30,0
000141 f441      	BRNE _0x1C
                 ; 0000 0067                     badje4 = 1;
000142 940e 0691 	CALL SUBOPT_0x6
                 ; 0000 0068                     nobat1_5 += 1;
                 ; 0000 0069                     namayesh = 1;
000144 940e 0674 	CALL SUBOPT_0x3
                 ; 0000 006A                     LCD_namayesh_go_to_badje(nobat1_5, 4) ;
000146 e0a4      	LDI  R26,LOW(4)
000147 e0b0      	LDI  R27,0
000148 d1d5      	RCALL _LCD_namayesh_go_to_badje
                 ; 0000 006B                     namayesh = 0;
000149 c01c      	RJMP _0x65
                 ; 0000 006C                 }
                 ; 0000 006D                 else if (badje5 == 0){
                 _0x1C:
00014a 91e0 0272 	LDS  R30,_badje5
00014c 91f0 0273 	LDS  R31,_badje5+1
00014e 9730      	SBIW R30,0
00014f f441      	BRNE _0x1E
                 ; 0000 006E                     badje5 = 1;
000150 940e 069b 	CALL SUBOPT_0x7
                 ; 0000 006F                     nobat1_5 += 1;
                 ; 0000 0070                     namayesh = 1;
000152 940e 0674 	CALL SUBOPT_0x3
                 ; 0000 0071                     LCD_namayesh_go_to_badje(nobat1_5, 5);
000154 e0a5      	LDI  R26,LOW(5)
000155 e0b0      	LDI  R27,0
000156 d1c7      	RCALL _LCD_namayesh_go_to_badje
                 ; 0000 0072                     namayesh = 0;
000157 c00e      	RJMP _0x65
                 ; 0000 0073                 }
                 ; 0000 0074                 else {
                 _0x1E:
                 ; 0000 0075                     namayesh = 1;
000158 940e 06a5 	CALL SUBOPT_0x8
                 ; 0000 0076                     entezar = totalcount1_5 - nobat1_5;
00015a 01f5      	MOVW R30,R10
00015b 19ec      	SUB  R30,R12
00015c 09fd      	SBC  R31,R13
00015d 93e0 0288 	STS  _entezar,R30
00015f 93f0 0289 	STS  _entezar+1,R31
                 ; 0000 0077                     LCD_namayesh_entezar(entezar);
000161 91a0 0288 	LDS  R26,_entezar
000163 91b0 0289 	LDS  R27,_entezar+1
000165 d1e4      	RCALL _LCD_namayesh_entezar
                 ; 0000 0078                     namayesh = 0;
                 _0x65:
000166 e0e0      	LDI  R30,LOW(0)
000167 940e 06ac 	CALL SUBOPT_0x9
                 ; 0000 0079                 }
                 ; 0000 007A             }
                 ; 0000 007B             break;
                 _0x15:
000169 c129      	RJMP _0x13
                 ; 0000 007C         case 2 :
                 _0x14:
00016a 30e2      	CPI  R30,LOW(0x2)
00016b e0a0      	LDI  R26,HIGH(0x2)
00016c 07fa      	CPC  R31,R26
00016d f561      	BRNE _0x20
                 ; 0000 007D             if(saat_yekonim){
00016e 940e 065a 	CALL SUBOPT_0x0
000170 f141      	BREQ _0x21
                 ; 0000 007E                 TotalCount += 1;
000171 940e 0660 	CALL SUBOPT_0x1
                 ; 0000 007F                 totalcount6 += 1;
000173 91e0 0260 	LDS  R30,_totalcount6
000175 91f0 0261 	LDS  R31,_totalcount6+1
000177 9631      	ADIW R30,1
000178 93e0 0260 	STS  _totalcount6,R30
00017a 93f0 0261 	STS  _totalcount6+1,R31
                 ; 0000 0080                 if(badje6 == 0){
00017c 91e0 0274 	LDS  R30,_badje6
00017e 91f0 0275 	LDS  R31,_badje6+1
000180 9730      	SBIW R30,0
000181 f461      	BRNE _0x22
                 ; 0000 0081                     badje6 = 1;
000182 940e 06b1 	CALL SUBOPT_0xA
                 ; 0000 0082                     nobat6 += 1;
                 ; 0000 0083                     namayesh = 1;
000184 940e 06a5 	CALL SUBOPT_0x8
                 ; 0000 0084                     LCD_namayesh_go_to_badje(nobat6, 6);
000186 940e 06c1 	CALL SUBOPT_0xB
000188 940e 06c6 	CALL SUBOPT_0xC
                 ; 0000 0085                     namayesh = 0;
00018a e0e0      	LDI  R30,LOW(0)
00018b 940e 06ac 	CALL SUBOPT_0x9
                 ; 0000 0086                 }
                 ; 0000 0087                 else {
00018d c00b      	RJMP _0x23
                 _0x22:
                 ; 0000 0088                     int entezar6 = totalcount6 - nobat6;
                 ; 0000 0089                     LCD_namayesh_entezar(entezar6);
00018e 9722      	SBIW R28,2
                 ;	entezar6 -> Y+0
00018f 91a0 0262 	LDS  R26,_nobat6
000191 91b0 0263 	LDS  R27,_nobat6+1
000193 91e0 0260 	LDS  R30,_totalcount6
000195 91f0 0261 	LDS  R31,_totalcount6+1
000197 940e 06cc 	CALL SUBOPT_0xD
                 ; 0000 008A                 }
                 _0x23:
                 ; 0000 008B             }
                 ; 0000 008C             break;
                 _0x21:
000199 c0f9      	RJMP _0x13
                 ; 0000 008D         case 3 :
                 _0x20:
00019a 30e3      	CPI  R30,LOW(0x3)
00019b e0a0      	LDI  R26,HIGH(0x3)
00019c 07fa      	CPC  R31,R26
00019d f561      	BRNE _0x24
                 ; 0000 008E             if(saat_yekonim){
00019e 940e 065a 	CALL SUBOPT_0x0
0001a0 f141      	BREQ _0x25
                 ; 0000 008F                 TotalCount += 1;
0001a1 940e 0660 	CALL SUBOPT_0x1
                 ; 0000 0090                 totalcount7 += 1;
0001a3 91e0 0264 	LDS  R30,_totalcount7
0001a5 91f0 0265 	LDS  R31,_totalcount7+1
0001a7 9631      	ADIW R30,1
0001a8 93e0 0264 	STS  _totalcount7,R30
0001aa 93f0 0265 	STS  _totalcount7+1,R31
                 ; 0000 0091                 if(badje7 == 0){
0001ac 91e0 0276 	LDS  R30,_badje7
0001ae 91f0 0277 	LDS  R31,_badje7+1
0001b0 9730      	SBIW R30,0
0001b1 f461      	BRNE _0x26
                 ; 0000 0092                     badje7 = 1;
0001b2 940e 06d6 	CALL SUBOPT_0xE
                 ; 0000 0093                     nobat7 += 1;
                 ; 0000 0094                     namayesh = 1;
0001b4 940e 06a5 	CALL SUBOPT_0x8
                 ; 0000 0095                     LCD_namayesh_go_to_badje(nobat7, 7) ;
0001b6 940e 06e6 	CALL SUBOPT_0xF
0001b8 940e 06eb 	CALL SUBOPT_0x10
                 ; 0000 0096                     namayesh = 0;
0001ba e0e0      	LDI  R30,LOW(0)
0001bb 940e 06ac 	CALL SUBOPT_0x9
                 ; 0000 0097                 }
                 ; 0000 0098                 else {
0001bd c00b      	RJMP _0x27
                 _0x26:
                 ; 0000 0099 
                 ; 0000 009A                     int entezar7 = totalcount7 - nobat7;
                 ; 0000 009B                     LCD_namayesh_entezar(entezar7);
0001be 9722      	SBIW R28,2
                 ;	entezar7 -> Y+0
0001bf 91a0 0266 	LDS  R26,_nobat7
0001c1 91b0 0267 	LDS  R27,_nobat7+1
0001c3 91e0 0264 	LDS  R30,_totalcount7
0001c5 91f0 0265 	LDS  R31,_totalcount7+1
0001c7 940e 06cc 	CALL SUBOPT_0xD
                 ; 0000 009C                 }
                 _0x27:
                 ; 0000 009D             }
                 ; 0000 009E             break;
                 _0x25:
0001c9 c0c9      	RJMP _0x13
                 ; 0000 009F         case 9 : //badje1
                 _0x24:
0001ca 30e9      	CPI  R30,LOW(0x9)
0001cb e0a0      	LDI  R26,HIGH(0x9)
0001cc 07fa      	CPC  R31,R26
0001cd f4c1      	BRNE _0x28
                 ; 0000 00A0             badje1 = 0;
0001ce 940e 06f1 	CALL SUBOPT_0x11
                 ; 0000 00A1             if (totalcount1_5 > nobat1_5){
                +
0001d0 14ca     +CP R12 , R10
0001d1 04db     +CPC R13 , R11
                 	__CPWRR 12,13,10,11
0001d2 f494      	BRGE _0x29
                 ; 0000 00A2                 namayesh = 1;
0001d3 940e 06a5 	CALL SUBOPT_0x8
                 ; 0000 00A3                 d1 = nobat1_5 + 1;
0001d5 01f6      	MOVW R30,R12
0001d6 9631      	ADIW R30,1
0001d7 93e0 027a 	STS  _d1,R30
0001d9 93f0 027b 	STS  _d1+1,R31
                 ; 0000 00A4                 LCD_namayesh_go_to_badje(d1, 1);
0001db 93fa      	ST   -Y,R31
0001dc 93ea      	ST   -Y,R30
0001dd e0a1      	LDI  R26,LOW(1)
0001de e0b0      	LDI  R27,0
0001df d13e      	RCALL _LCD_namayesh_go_to_badje
                 ; 0000 00A5                 badje1 = 1;
0001e0 940e 066a 	CALL SUBOPT_0x2
                 ; 0000 00A6                 nobat1_5 += 1;
                 ; 0000 00A7                 namayesh = 0;
0001e2 e0e0      	LDI  R30,LOW(0)
0001e3 940e 06ac 	CALL SUBOPT_0x9
                 ; 0000 00A8             }
                 ; 0000 00A9             break;
                 _0x29:
0001e5 c0ad      	RJMP _0x13
                 ; 0000 00AA         case 8 : //badje2
                 _0x28:
0001e6 30e8      	CPI  R30,LOW(0x8)
0001e7 e0a0      	LDI  R26,HIGH(0x8)
0001e8 07fa      	CPC  R31,R26
0001e9 f4c1      	BRNE _0x2A
                 ; 0000 00AB             badje2 = 0;
0001ea 940e 06f7 	CALL SUBOPT_0x12
                 ; 0000 00AC             if (totalcount1_5 > nobat1_5){
                +
0001ec 14ca     +CP R12 , R10
0001ed 04db     +CPC R13 , R11
                 	__CPWRR 12,13,10,11
0001ee f494      	BRGE _0x2B
                 ; 0000 00AD                 namayesh = 1;
0001ef 940e 06a5 	CALL SUBOPT_0x8
                 ; 0000 00AE                 d2 = nobat1_5 + 1;
0001f1 01f6      	MOVW R30,R12
0001f2 9631      	ADIW R30,1
0001f3 93e0 027c 	STS  _d2,R30
0001f5 93f0 027d 	STS  _d2+1,R31
                 ; 0000 00AF                 LCD_namayesh_go_to_badje(d2, 2);
0001f7 93fa      	ST   -Y,R31
0001f8 93ea      	ST   -Y,R30
0001f9 e0a2      	LDI  R26,LOW(2)
0001fa e0b0      	LDI  R27,0
0001fb d122      	RCALL _LCD_namayesh_go_to_badje
                 ; 0000 00B0                 badje2 = 1;
0001fc 940e 067d 	CALL SUBOPT_0x4
                 ; 0000 00B1                 nobat1_5 += 1;
                 ; 0000 00B2                 namayesh = 0;
0001fe e0e0      	LDI  R30,LOW(0)
0001ff 940e 06ac 	CALL SUBOPT_0x9
                 ; 0000 00B3             }
                 ; 0000 00B4             break;
                 _0x2B:
000201 c091      	RJMP _0x13
                 ; 0000 00B5         case 7 : //badje3
                 _0x2A:
000202 30e7      	CPI  R30,LOW(0x7)
000203 e0a0      	LDI  R26,HIGH(0x7)
000204 07fa      	CPC  R31,R26
000205 f4c1      	BRNE _0x2C
                 ; 0000 00B6             badje3 = 0;
000206 940e 06fd 	CALL SUBOPT_0x13
                 ; 0000 00B7             if (totalcount1_5 > nobat1_5){
                +
000208 14ca     +CP R12 , R10
000209 04db     +CPC R13 , R11
                 	__CPWRR 12,13,10,11
00020a f494      	BRGE _0x2D
                 ; 0000 00B8                 namayesh = 1;
00020b 940e 06a5 	CALL SUBOPT_0x8
                 ; 0000 00B9                 d3 = nobat1_5 + 1;
00020d 01f6      	MOVW R30,R12
00020e 9631      	ADIW R30,1
00020f 93e0 027e 	STS  _d3,R30
000211 93f0 027f 	STS  _d3+1,R31
                 ; 0000 00BA                 LCD_namayesh_go_to_badje(d3, 3);
000213 93fa      	ST   -Y,R31
000214 93ea      	ST   -Y,R30
000215 e0a3      	LDI  R26,LOW(3)
000216 e0b0      	LDI  R27,0
000217 d106      	RCALL _LCD_namayesh_go_to_badje
                 ; 0000 00BB                 badje3 = 1;
000218 940e 0687 	CALL SUBOPT_0x5
                 ; 0000 00BC                 nobat1_5 += 1;
                 ; 0000 00BD                 namayesh = 0;
00021a e0e0      	LDI  R30,LOW(0)
00021b 940e 06ac 	CALL SUBOPT_0x9
                 ; 0000 00BE             }
                 ; 0000 00BF             break;
                 _0x2D:
00021d c075      	RJMP _0x13
                 ; 0000 00C0         case 6 : //badje4
                 _0x2C:
00021e 30e6      	CPI  R30,LOW(0x6)
00021f e0a0      	LDI  R26,HIGH(0x6)
000220 07fa      	CPC  R31,R26
000221 f4c1      	BRNE _0x2E
                 ; 0000 00C1             badje4 = 0;
000222 940e 0703 	CALL SUBOPT_0x14
                 ; 0000 00C2             if (totalcount1_5 > nobat1_5){
                +
000224 14ca     +CP R12 , R10
000225 04db     +CPC R13 , R11
                 	__CPWRR 12,13,10,11
000226 f494      	BRGE _0x2F
                 ; 0000 00C3                 namayesh = 1;
000227 940e 06a5 	CALL SUBOPT_0x8
                 ; 0000 00C4                 d4 = nobat1_5 + 1;
000229 01f6      	MOVW R30,R12
00022a 9631      	ADIW R30,1
00022b 93e0 0280 	STS  _d4,R30
00022d 93f0 0281 	STS  _d4+1,R31
                 ; 0000 00C5                 LCD_namayesh_go_to_badje(d4, 4) ;
00022f 93fa      	ST   -Y,R31
000230 93ea      	ST   -Y,R30
000231 e0a4      	LDI  R26,LOW(4)
000232 e0b0      	LDI  R27,0
000233 d0ea      	RCALL _LCD_namayesh_go_to_badje
                 ; 0000 00C6                 badje4 = 1;
000234 940e 0691 	CALL SUBOPT_0x6
                 ; 0000 00C7                 nobat1_5 += 1;
                 ; 0000 00C8                 namayesh = 0;
000236 e0e0      	LDI  R30,LOW(0)
000237 940e 06ac 	CALL SUBOPT_0x9
                 ; 0000 00C9             }
                 ; 0000 00CA             break;
                 _0x2F:
000239 c059      	RJMP _0x13
                 ; 0000 00CB         case 5 : //badje5
                 _0x2E:
00023a 30e5      	CPI  R30,LOW(0x5)
00023b e0a0      	LDI  R26,HIGH(0x5)
00023c 07fa      	CPC  R31,R26
00023d f4c1      	BRNE _0x30
                 ; 0000 00CC             badje5 = 0;
00023e 940e 0709 	CALL SUBOPT_0x15
                 ; 0000 00CD             if (totalcount1_5 > nobat1_5){
                +
000240 14ca     +CP R12 , R10
000241 04db     +CPC R13 , R11
                 	__CPWRR 12,13,10,11
000242 f494      	BRGE _0x31
                 ; 0000 00CE                 namayesh = 1;
000243 940e 06a5 	CALL SUBOPT_0x8
                 ; 0000 00CF                 d5 = nobat1_5 + 1;
000245 01f6      	MOVW R30,R12
000246 9631      	ADIW R30,1
000247 93e0 0282 	STS  _d5,R30
000249 93f0 0283 	STS  _d5+1,R31
                 ; 0000 00D0                 LCD_namayesh_go_to_badje(d5, 5);
00024b 93fa      	ST   -Y,R31
00024c 93ea      	ST   -Y,R30
00024d e0a5      	LDI  R26,LOW(5)
00024e e0b0      	LDI  R27,0
00024f d0ce      	RCALL _LCD_namayesh_go_to_badje
                 ; 0000 00D1                 badje5 = 1;
000250 940e 069b 	CALL SUBOPT_0x7
                 ; 0000 00D2                 nobat1_5 += 1;
                 ; 0000 00D3                 namayesh = 0;
000252 e0e0      	LDI  R30,LOW(0)
000253 940e 06ac 	CALL SUBOPT_0x9
                 ; 0000 00D4             }
                 ; 0000 00D5             break;
                 _0x31:
000255 c03d      	RJMP _0x13
                 ; 0000 00D6         case 4 : //badje6
                 _0x30:
000256 30e4      	CPI  R30,LOW(0x4)
000257 e0a0      	LDI  R26,HIGH(0x4)
000258 07fa      	CPC  R31,R26
000259 f4e1      	BRNE _0x32
                 ; 0000 00D7             badje6 = 0;
00025a 940e 070f 	CALL SUBOPT_0x16
                 ; 0000 00D8             if (totalcount6 > nobat6){
00025c 940e 06c1 	CALL SUBOPT_0xB
00025e 91a0 0260 	LDS  R26,_totalcount6
000260 91b0 0261 	LDS  R27,_totalcount6+1
000262 17ea      	CP   R30,R26
000263 07fb      	CPC  R31,R27
000264 f484      	BRGE _0x33
                 ; 0000 00D9                 namayesh = 1;
000265 940e 06a5 	CALL SUBOPT_0x8
                 ; 0000 00DA                 d6 = nobat6 + 1;
000267 940e 06c1 	CALL SUBOPT_0xB
000269 9631      	ADIW R30,1
00026a 93e0 0284 	STS  _d6,R30
00026c 93f0 0285 	STS  _d6+1,R31
                 ; 0000 00DB                 LCD_namayesh_go_to_badje(d6, 6);
00026e 940e 06c6 	CALL SUBOPT_0xC
                 ; 0000 00DC                 badje6 = 1;
000270 940e 06b1 	CALL SUBOPT_0xA
                 ; 0000 00DD                 nobat6 += 1;
                 ; 0000 00DE                 namayesh = 0;
000272 e0e0      	LDI  R30,LOW(0)
000273 940e 06ac 	CALL SUBOPT_0x9
                 ; 0000 00DF             }
                 ; 0000 00E0             break;
                 _0x33:
000275 c01d      	RJMP _0x13
                 ; 0000 00E1         case 0 : //badje7
                 _0x32:
000276 9730      	SBIW R30,0
000277 f4d9      	BRNE _0x13
                 ; 0000 00E2             badje7 = 0;
000278 940e 0715 	CALL SUBOPT_0x17
                 ; 0000 00E3             if (totalcount7 > nobat7){
00027a 940e 06e6 	CALL SUBOPT_0xF
00027c 91a0 0264 	LDS  R26,_totalcount7
00027e 91b0 0265 	LDS  R27,_totalcount7+1
000280 17ea      	CP   R30,R26
000281 07fb      	CPC  R31,R27
000282 f484      	BRGE _0x35
                 ; 0000 00E4                 namayesh = 1;
000283 940e 06a5 	CALL SUBOPT_0x8
                 ; 0000 00E5                 d7 = nobat7 + 1;
000285 940e 06e6 	CALL SUBOPT_0xF
000287 9631      	ADIW R30,1
000288 93e0 0286 	STS  _d7,R30
00028a 93f0 0287 	STS  _d7+1,R31
                 ; 0000 00E6                 LCD_namayesh_go_to_badje(d7, 7);
00028c 940e 06eb 	CALL SUBOPT_0x10
                 ; 0000 00E7                 badje7 = 1;
00028e 940e 06d6 	CALL SUBOPT_0xE
                 ; 0000 00E8                 nobat7 += 1;
                 ; 0000 00E9                 namayesh = 0;
000290 e0e0      	LDI  R30,LOW(0)
000291 940e 06ac 	CALL SUBOPT_0x9
                 ; 0000 00EA             }
                 ; 0000 00EB             break;
                 _0x35:
                 ; 0000 00EC 
                 ; 0000 00ED         }
                 _0x13:
                 ; 0000 00EE       }
                 ; 0000 00EF 
                 ; 0000 00F0         }
                 _0xA:
                 ; 0000 00F1         else{
000293 c011      	RJMP _0x36
                 _0x9:
                 ; 0000 00F2             totalcount1_5 = 0, nobat1_5 = 0;
000294 940e 071b 	CALL SUBOPT_0x18
                 ; 0000 00F3             totalcount6 = 0, nobat6 = 0;
                 ; 0000 00F4             totalcount7 = 0, nobat7 = 0;
                 ; 0000 00F5             TotalCount = 0;
                 ; 0000 00F6             badje1 = 0, badje2 = 0, badje3 = 0, badje4 = 0, badje5 = 0, badje6 = 0, badje7 = 0;
000296 940e 06f7 	CALL SUBOPT_0x12
000298 940e 06fd 	CALL SUBOPT_0x13
00029a 940e 0703 	CALL SUBOPT_0x14
00029c 940e 0709 	CALL SUBOPT_0x15
00029e 940e 070f 	CALL SUBOPT_0x16
0002a0 940e 0715 	CALL SUBOPT_0x17
                 ; 0000 00F7             namayesh = 0;
0002a2 e0e0      	LDI  R30,LOW(0)
0002a3 940e 06ac 	CALL SUBOPT_0x9
                 ; 0000 00F8             //tanzimat saat
                 ; 0000 00F9         }
                 _0x36:
                 ; 0000 00FA     }
0002a5 9119      	LD   R17,Y+
0002a6 91e9      	LD   R30,Y+
0002a7 bfef      	OUT  SREG,R30
0002a8 91f9      	LD   R31,Y+
0002a9 91e9      	LD   R30,Y+
0002aa 91b9      	LD   R27,Y+
0002ab 91a9      	LD   R26,Y+
0002ac 9199      	LD   R25,Y+
0002ad 9189      	LD   R24,Y+
0002ae 9179      	LD   R23,Y+
0002af 9169      	LD   R22,Y+
0002b0 90f9      	LD   R15,Y+
0002b1 9019      	LD   R1,Y+
0002b2 9009      	LD   R0,Y+
0002b3 9518      	RETI
                 ; .FEND
                 ;
                 ;
                 ;//*************************************************************************************************
                 ;void main(void)
                 ; 0000 00FF {
                 _main:
                 ; .FSTART _main
                 ; 0000 0100 DDRB = 0xFF;
0002b4 efef      	LDI  R30,LOW(255)
0002b5 bbe7      	OUT  0x17,R30
                 ; 0000 0101 PORTB = 0x00;
0002b6 e0e0      	LDI  R30,LOW(0)
0002b7 bbe8      	OUT  0x18,R30
                 ; 0000 0102 DDRC = 0xF0;
0002b8 efe0      	LDI  R30,LOW(240)
0002b9 bbe4      	OUT  0x14,R30
                 ; 0000 0103 PORTC = 0x0F;
0002ba e0ef      	LDI  R30,LOW(15)
0002bb bbe5      	OUT  0x15,R30
                 ; 0000 0104 // External Interrupt(s) initialization
                 ; 0000 0105 // INT0: On
                 ; 0000 0106 // INT0 Mode: Falling Edge
                 ; 0000 0107 // INT1: Off
                 ; 0000 0108 // INT2: Off
                 ; 0000 0109 GICR|=(0<<INT1) | (1<<INT0) | (0<<INT2);
0002bc b7eb      	IN   R30,0x3B
0002bd 64e0      	ORI  R30,0x40
0002be bfeb      	OUT  0x3B,R30
                 ; 0000 010A MCUCR=(0<<ISC11) | (0<<ISC10) | (1<<ISC01) | (0<<ISC00);
0002bf e0e2      	LDI  R30,LOW(2)
0002c0 bfe5      	OUT  0x35,R30
                 ; 0000 010B MCUCSR=(0<<ISC2);
0002c1 e0e0      	LDI  R30,LOW(0)
0002c2 bfe4      	OUT  0x34,R30
                 ; 0000 010C GIFR=(0<<INTF1) | (1<<INTF0) | (0<<INTF2);
0002c3 e4e0      	LDI  R30,LOW(64)
0002c4 bfea      	OUT  0x3A,R30
                 ; 0000 010D ////==============================================timer initiallize
                 ; 0000 010E // Timer/Counter 1 initialization
                 ; 0000 010F // Clock source: System Clock
                 ; 0000 0110 // Clock value: 31/250 kHz
                 ; 0000 0111 // Mode: Normal top=0xFFFF
                 ; 0000 0112 // OC1A output: Disconnected
                 ; 0000 0113 // OC1B output: Disconnected
                 ; 0000 0114 // Noise Canceler: Off
                 ; 0000 0115 // Input Capture on Falling Edge
                 ; 0000 0116 // Timer Period: 1 s
                 ; 0000 0117 // Timer1 Overflow Interrupt: On
                 ; 0000 0118 // Input Capture Interrupt: Off
                 ; 0000 0119 // Compare A Match Interrupt: Off
                 ; 0000 011A // Compare B Match Interrupt: Off
                 ; 0000 011B TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
0002c5 e0e0      	LDI  R30,LOW(0)
0002c6 bdef      	OUT  0x2F,R30
                 ; 0000 011C TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (1<<CS12) | (0<<CS11) | (0<<CS10);
0002c7 e0e4      	LDI  R30,LOW(4)
0002c8 bdee      	OUT  0x2E,R30
                 ; 0000 011D TCNT1H=0x85;
0002c9 e8e5      	LDI  R30,LOW(133)
0002ca bded      	OUT  0x2D,R30
                 ; 0000 011E TCNT1L=0xEE;
0002cb eeee      	LDI  R30,LOW(238)
0002cc bdec      	OUT  0x2C,R30
                 ; 0000 011F ICR1H=0x00;
0002cd e0e0      	LDI  R30,LOW(0)
0002ce bde7      	OUT  0x27,R30
                 ; 0000 0120 ICR1L=0x00;
0002cf bde6      	OUT  0x26,R30
                 ; 0000 0121 OCR1AH=0x00;
0002d0 bdeb      	OUT  0x2B,R30
                 ; 0000 0122 OCR1AL=0x00;
0002d1 bdea      	OUT  0x2A,R30
                 ; 0000 0123 OCR1BH=0x00;
0002d2 bde9      	OUT  0x29,R30
                 ; 0000 0124 OCR1BL=0x00;
0002d3 bde8      	OUT  0x28,R30
                 ; 0000 0125 // Global enable interrupts
                 ; 0000 0126 #asm("sei")
0002d4 9478      	sei
                 ; 0000 0127 //============================================================
                 ; 0000 0128 totalcount1_5 = 0, nobat1_5 = 0;
0002d5 940e 071b 	CALL SUBOPT_0x18
                 ; 0000 0129 totalcount6 = 0, nobat6 = 0;
                 ; 0000 012A totalcount7 = 0, nobat7 = 0;
                 ; 0000 012B TotalCount = 0;
                 ; 0000 012C badje1 = 0, badje2 = 0, badje3 = 0, badje4 = 0, badje5 = 0, badje6 = 0, badje7 = 0;
0002d7 940e 06f7 	CALL SUBOPT_0x12
0002d9 940e 06fd 	CALL SUBOPT_0x13
0002db 940e 0703 	CALL SUBOPT_0x14
0002dd 940e 0709 	CALL SUBOPT_0x15
0002df 940e 070f 	CALL SUBOPT_0x16
0002e1 940e 0715 	CALL SUBOPT_0x17
                 ; 0000 012D namayesh = 0;
0002e3 e0e0      	LDI  R30,LOW(0)
0002e4 940e 06ac 	CALL SUBOPT_0x9
                 ; 0000 012E saat_yekonim = 0;
0002e6 e0e0      	LDI  R30,LOW(0)
0002e7 93e0 02a7 	STS  _saat_yekonim,R30
0002e9 93e0 02a8 	STS  _saat_yekonim+1,R30
                 ; 0000 012F lcd_init(16);
0002eb e1a0      	LDI  R26,LOW(16)
0002ec 940e 062b 	CALL _lcd_init
                 ; 0000 0130 second = 0 ;
0002ee 2444      	CLR  R4
0002ef 2455      	CLR  R5
                 ; 0000 0131 //======================================================================================
                 ; 0000 0132 while (1)
                 _0x37:
                 ; 0000 0133     {
                 ; 0000 0134         if (hour == 1 || hour == 12)
0002f0 e0e1      	LDI  R30,LOW(1)
0002f1 e0f0      	LDI  R31,HIGH(1)
0002f2 15e8      	CP   R30,R8
0002f3 05f9      	CPC  R31,R9
0002f4 f029      	BREQ _0x3B
0002f5 e0ec      	LDI  R30,LOW(12)
0002f6 e0f0      	LDI  R31,HIGH(12)
0002f7 15e8      	CP   R30,R8
0002f8 05f9      	CPC  R31,R9
0002f9 f439      	BRNE _0x3A
                 _0x3B:
                 ; 0000 0135             sprintf(lcd_buffer,"   %02d:%02d:%02d  PM", hour, minute,second);
0002fa ebe3      	LDI  R30,LOW(_lcd_buffer)
0002fb e0f2      	LDI  R31,HIGH(_lcd_buffer)
0002fc 93fa      	ST   -Y,R31
0002fd 93ea      	ST   -Y,R30
                +
0002fe e6ea     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0002ff e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000300 c006      	RJMP _0x66
                 ; 0000 0136         else
                 _0x3A:
                 ; 0000 0137             sprintf(lcd_buffer,"   %02d:%02d:%02d  AM", hour, minute,second);
000301 ebe3      	LDI  R30,LOW(_lcd_buffer)
000302 e0f2      	LDI  R31,HIGH(_lcd_buffer)
000303 93fa      	ST   -Y,R31
000304 93ea      	ST   -Y,R30
                +
000305 e8e0     +LDI R30 , LOW ( 2 * _0x0 + ( 22 ) )
000306 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 22 ) )
                 	__POINTW1FN _0x0,22
                 _0x66:
000307 93fa      	ST   -Y,R31
000308 93ea      	ST   -Y,R30
000309 01f4      	MOVW R30,R8
00030a 940e 0735 	CALL SUBOPT_0x19
00030c 01f3      	MOVW R30,R6
00030d 940e 0735 	CALL SUBOPT_0x19
00030f 01f2      	MOVW R30,R4
000310 940e 0735 	CALL SUBOPT_0x19
000312 e08c      	LDI  R24,12
000313 940e 052f 	CALL _sprintf
000315 9660      	ADIW R28,16
                 ; 0000 0138         lcd_gotoxy(0,0);
000316 940e 073a 	CALL SUBOPT_0x1A
                 ; 0000 0139         lcd_puts(lcd_buffer);
000318 eba3      	LDI  R26,LOW(_lcd_buffer)
000319 e0b2      	LDI  R27,HIGH(_lcd_buffer)
00031a 940e 073f 	CALL SUBOPT_0x1B
                 ; 0000 013A         delay_ms(1000);
                 ; 0000 013B         lcd_clear();
                 ; 0000 013C }
00031c cfd3      	RJMP _0x37
                 ; 0000 013D }
                 _0x3E:
00031d cfff      	RJMP _0x3E
                 ; .FEND
                 ;//========================================================================================
                 ;void LCD_namayesh_go_to_badje (int a, int b){
                 ; 0000 013F void LCD_namayesh_go_to_badje (int a, int b){
                 _LCD_namayesh_go_to_badje:
                 ; .FSTART _LCD_namayesh_go_to_badje
                 ; 0000 0140     lcd_clear();
00031e 93ba      	ST   -Y,R27
00031f 93aa      	ST   -Y,R26
                 ;	a -> Y+2
                 ;	b -> Y+0
000320 940e 05db 	CALL _lcd_clear
                 ; 0000 0141     str1[10];
                +
000322 91e0 02b3+LDS R30 , _str1 + ( 10 )
                 	__GETB1MN _str1,10
                 ; 0000 0142     itoa(a, str1);
000324 81ea      	LDD  R30,Y+2
000325 81fb      	LDD  R31,Y+2+1
000326 93fa      	ST   -Y,R31
000327 93ea      	ST   -Y,R30
000328 eaa9      	LDI  R26,LOW(_str1)
000329 e0b2      	LDI  R27,HIGH(_str1)
00032a 940e 057c 	CALL _itoa
                 ; 0000 0143     lcd_gotoxy(0, 0);
00032c 940e 073a 	CALL SUBOPT_0x1A
                 ; 0000 0144     lcd_puts(str1);
00032e eaa9      	LDI  R26,LOW(_str1)
00032f e0b2      	LDI  R27,HIGH(_str1)
000330 940e 0609 	CALL _lcd_puts
                 ; 0000 0145     lcd_gotoxy(5, 0);
000332 e0e5      	LDI  R30,LOW(5)
000333 940e 0747 	CALL SUBOPT_0x1C
                 ; 0000 0146     lcd_putsf("go to badje : ");
                +
000335 e9a6     +LDI R26 , LOW ( 2 * _0x0 + ( 44 ) )
000336 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 44 ) )
                 	__POINTW2FN _0x0,44
000337 940e 0618 	CALL _lcd_putsf
                 ; 0000 0147     itoa(b, str2);
000339 81e8      	LD   R30,Y
00033a 81f9      	LDD  R31,Y+1
00033b 93fa      	ST   -Y,R31
00033c 93ea      	ST   -Y,R30
00033d e8aa      	LDI  R26,LOW(_str2)
00033e e0b2      	LDI  R27,HIGH(_str2)
00033f 940e 057c 	CALL _itoa
                 ; 0000 0148     lcd_gotoxy(15, 0);
000341 e0ef      	LDI  R30,LOW(15)
000342 940e 0747 	CALL SUBOPT_0x1C
                 ; 0000 0149     lcd_puts(str2);
000344 e8aa      	LDI  R26,LOW(_str2)
000345 e0b2      	LDI  R27,HIGH(_str2)
000346 940e 073f 	CALL SUBOPT_0x1B
                 ; 0000 014A     delay_ms(1000);
                 ; 0000 014B     lcd_clear();
                 ; 0000 014C }
000348 9624      	ADIW R28,4
000349 9508      	RET
                 ; .FEND
                 ;//==========================================================================================
                 ;void LCD_namayesh_entezar (int a){
                 ; 0000 014E void LCD_namayesh_entezar (int a){
                 _LCD_namayesh_entezar:
                 ; .FSTART _LCD_namayesh_entezar
                 ; 0000 014F     lcd_clear();
00034a 93ba      	ST   -Y,R27
00034b 93aa      	ST   -Y,R26
                 ;	a -> Y+0
00034c 940e 05db 	CALL _lcd_clear
                 ; 0000 0150     str3[17];
                +
00034e 91e0 02a5+LDS R30 , _str3 + ( 17 )
                 	__GETB1MN _str3,17
                 ; 0000 0151     itoa(a, str3);
000350 81e8      	LD   R30,Y
000351 81f9      	LDD  R31,Y+1
000352 93fa      	ST   -Y,R31
000353 93ea      	ST   -Y,R30
000354 e9a4      	LDI  R26,LOW(_str3)
000355 e0b2      	LDI  R27,HIGH(_str3)
000356 940e 057c 	CALL _itoa
                 ; 0000 0152     lcd_gotoxy(0, 0);
000358 940e 073a 	CALL SUBOPT_0x1A
                 ; 0000 0153     lcd_puts(str1);
00035a eaa9      	LDI  R26,LOW(_str1)
00035b e0b2      	LDI  R27,HIGH(_str1)
00035c 940e 0609 	CALL _lcd_puts
                 ; 0000 0154     lcd_gotoxy(4, 0);
00035e e0e4      	LDI  R30,LOW(4)
00035f 940e 0747 	CALL SUBOPT_0x1C
                 ; 0000 0155     lcd_putsf(" nafar joloye shoma hastand");
                +
000361 eaa5     +LDI R26 , LOW ( 2 * _0x0 + ( 59 ) )
000362 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 59 ) )
                 	__POINTW2FN _0x0,59
000363 940e 0618 	CALL _lcd_putsf
                 ; 0000 0156     delay_ms(500);
000365 efa4      	LDI  R26,LOW(500)
000366 e0b1      	LDI  R27,HIGH(500)
000367 940e 0790 	CALL _delay_ms
                 ; 0000 0157     lcd_clear();
000369 940e 05db 	CALL _lcd_clear
                 ; 0000 0158 }
00036b 940c 05d9 	JMP  _0x20C0003
                 ; .FEND
                 ;//=========================================================================================
                 ;
                 ;
                 ;//=========================================================================================
                 ;char GetKey()
                 ; 0000 015E {
                 _GetKey:
                 ; .FSTART _GetKey
                 ; 0000 015F unsigned char key_code = 0xFF;
                 ; 0000 0160 unsigned char columns;
                 ; 0000 0161 
                 ; 0000 0162 PORTC = 0xFF;
00036d 931a      	ST   -Y,R17
00036e 930a      	ST   -Y,R16
                 ;	key_code -> R17
                 ;	columns -> R16
00036f ef1f      	LDI  R17,255
000370 efef      	LDI  R30,LOW(255)
000371 bbe5      	OUT  0x15,R30
                 ; 0000 0163 // first row
                 ; 0000 0164 PORTC.4 = 0;
000372 98ac      	CBI  0x15,4
                 ; 0000 0165 columns = PINC & 0x07;
000373 940e 074b 	CALL SUBOPT_0x1D
                 ; 0000 0166 if(columns != 0x07)
000375 f081      	BREQ _0x41
                 ; 0000 0167   {
                 ; 0000 0168   switch(columns)
000376 940e 0750 	CALL SUBOPT_0x1E
                 ; 0000 0169     {
                 ; 0000 016A     case 0b110 : key_code = 1; break;
000378 f411      	BRNE _0x45
000379 e011      	LDI  R17,LOW(1)
00037a c00b      	RJMP _0x44
                 ; 0000 016B     case 0b101 : key_code = 2; break;
                 _0x45:
00037b 30e5      	CPI  R30,LOW(0x5)
00037c e0a0      	LDI  R26,HIGH(0x5)
00037d 07fa      	CPC  R31,R26
00037e f411      	BRNE _0x46
00037f e012      	LDI  R17,LOW(2)
000380 c005      	RJMP _0x44
                 ; 0000 016C     case 0b011 : key_code = 3; break;
                 _0x46:
000381 30e3      	CPI  R30,LOW(0x3)
000382 e0a0      	LDI  R26,HIGH(0x3)
000383 07fa      	CPC  R31,R26
000384 f409      	BRNE _0x44
000385 e013      	LDI  R17,LOW(3)
                 ; 0000 016D     }
                 _0x44:
                 ; 0000 016E   }
                 ; 0000 016F PORTC.4 = 1;
                 _0x41:
000386 9aac      	SBI  0x15,4
                 ; 0000 0170 // second row
                 ; 0000 0171 PORTC.5 = 0;
000387 98ad      	CBI  0x15,5
                 ; 0000 0172 columns = PINC & 0x07;
000388 940e 074b 	CALL SUBOPT_0x1D
                 ; 0000 0173 if(columns != 0x07)
00038a f081      	BREQ _0x4C
                 ; 0000 0174   {
                 ; 0000 0175   switch(columns)
00038b 940e 0750 	CALL SUBOPT_0x1E
                 ; 0000 0176     {
                 ; 0000 0177     case 0b110 : key_code = 4; break;
00038d f411      	BRNE _0x50
00038e e014      	LDI  R17,LOW(4)
00038f c00b      	RJMP _0x4F
                 ; 0000 0178     case 0b101 : key_code = 5; break;
                 _0x50:
000390 30e5      	CPI  R30,LOW(0x5)
000391 e0a0      	LDI  R26,HIGH(0x5)
000392 07fa      	CPC  R31,R26
000393 f411      	BRNE _0x51
000394 e015      	LDI  R17,LOW(5)
000395 c005      	RJMP _0x4F
                 ; 0000 0179     case 0b011 : key_code = 6; break;
                 _0x51:
000396 30e3      	CPI  R30,LOW(0x3)
000397 e0a0      	LDI  R26,HIGH(0x3)
000398 07fa      	CPC  R31,R26
000399 f409      	BRNE _0x4F
00039a e016      	LDI  R17,LOW(6)
                 ; 0000 017A     }
                 _0x4F:
                 ; 0000 017B   }
                 ; 0000 017C PORTC.5 = 1;
                 _0x4C:
00039b 9aad      	SBI  0x15,5
                 ; 0000 017D // third row
                 ; 0000 017E PORTC.6 = 0;
00039c 98ae      	CBI  0x15,6
                 ; 0000 017F columns = PINC & 0x07;
00039d 940e 074b 	CALL SUBOPT_0x1D
                 ; 0000 0180 if(columns != 0x07)
00039f f081      	BREQ _0x57
                 ; 0000 0181   {
                 ; 0000 0182   switch(columns)
0003a0 940e 0750 	CALL SUBOPT_0x1E
                 ; 0000 0183     {
                 ; 0000 0184     case 0b110 : key_code = 7; break;
0003a2 f411      	BRNE _0x5B
0003a3 e017      	LDI  R17,LOW(7)
0003a4 c00b      	RJMP _0x5A
                 ; 0000 0185     case 0b101 : key_code = 8; break;
                 _0x5B:
0003a5 30e5      	CPI  R30,LOW(0x5)
0003a6 e0a0      	LDI  R26,HIGH(0x5)
0003a7 07fa      	CPC  R31,R26
0003a8 f411      	BRNE _0x5C
0003a9 e018      	LDI  R17,LOW(8)
0003aa c005      	RJMP _0x5A
                 ; 0000 0186     case 0b011 : key_code = 9; break;
                 _0x5C:
0003ab 30e3      	CPI  R30,LOW(0x3)
0003ac e0a0      	LDI  R26,HIGH(0x3)
0003ad 07fa      	CPC  R31,R26
0003ae f409      	BRNE _0x5A
0003af e019      	LDI  R17,LOW(9)
                 ; 0000 0187     }
                 _0x5A:
                 ; 0000 0188   }
                 ; 0000 0189 PORTC.6 = 1;
                 _0x57:
0003b0 9aae      	SBI  0x15,6
                 ; 0000 018A // fourth row
                 ; 0000 018B PORTC.7 = 0;
0003b1 98af      	CBI  0x15,7
                 ; 0000 018C if(!PINC.1) key_code = 0;
0003b2 9b99      	SBIS 0x13,1
0003b3 e010      	LDI  R17,LOW(0)
                 ; 0000 018D PORTC.7 = 1;
0003b4 9aaf      	SBI  0x15,7
                 ; 0000 018E 
                 ; 0000 018F PORTC = 0x0F;
0003b5 e0ef      	LDI  R30,LOW(15)
0003b6 bbe5      	OUT  0x15,R30
                 ; 0000 0190 return key_code;
0003b7 2fe1      	MOV  R30,R17
0003b8 9109      	LD   R16,Y+
0003b9 9119      	LD   R17,Y+
0003ba 9508      	RET
                 ; 0000 0191 }
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
0003bb 93ba      	ST   -Y,R27
0003bc 93aa      	ST   -Y,R26
0003bd 931a      	ST   -Y,R17
0003be 930a      	ST   -Y,R16
0003bf 81aa      	LDD  R26,Y+2
0003c0 81bb      	LDD  R27,Y+2+1
0003c1 9612      	ADIW R26,2
0003c2 940e 07a7 	CALL __GETW1P
0003c4 9730      	SBIW R30,0
0003c5 f159      	BREQ _0x2000010
0003c6 81aa      	LDD  R26,Y+2
0003c7 81bb      	LDD  R27,Y+2+1
0003c8 9614      	ADIW R26,4
0003c9 940e 07a7 	CALL __GETW1P
0003cb 018f      	MOVW R16,R30
0003cc 9730      	SBIW R30,0
0003cd f061      	BREQ _0x2000012
                +
0003ce 3002     +CPI R16 , LOW ( 2 )
0003cf e0e0     +LDI R30 , HIGH ( 2 )
0003d0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0003d1 f098      	BRLO _0x2000013
0003d2 01f8      	MOVW R30,R16
0003d3 9731      	SBIW R30,1
0003d4 018f      	MOVW R16,R30
                +
0003d5 81aa     +LDD R26 , Y + 2
0003d6 81bb     +LDD R27 , Y + 2 + 1
0003d7 9614     +ADIW R26 , 4
0003d8 93ed     +ST X + , R30
0003d9 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
0003da 81aa      	LDD  R26,Y+2
0003db 81bb      	LDD  R27,Y+2+1
0003dc 9612      	ADIW R26,2
0003dd 91ed      	LD   R30,X+
0003de 91fd      	LD   R31,X+
0003df 9631      	ADIW R30,1
0003e0 93fe      	ST   -X,R31
0003e1 93ee      	ST   -X,R30
0003e2 9731      	SBIW R30,1
0003e3 81ac      	LDD  R26,Y+4
0003e4 83a0      	STD  Z+0,R26
                 _0x2000013:
0003e5 81aa      	LDD  R26,Y+2
0003e6 81bb      	LDD  R27,Y+2+1
0003e7 940e 07a7 	CALL __GETW1P
0003e9 23ff      	TST  R31
0003ea f02a      	BRMI _0x2000014
0003eb 91ed      	LD   R30,X+
0003ec 91fd      	LD   R31,X+
0003ed 9631      	ADIW R30,1
0003ee 93fe      	ST   -X,R31
0003ef 93ee      	ST   -X,R30
                 _0x2000014:
0003f0 c006      	RJMP _0x2000015
                 _0x2000010:
0003f1 81aa      	LDD  R26,Y+2
0003f2 81bb      	LDD  R27,Y+2+1
0003f3 efef      	LDI  R30,LOW(65535)
0003f4 efff      	LDI  R31,HIGH(65535)
0003f5 93ed      	ST   X+,R30
0003f6 93fc      	ST   X,R31
                 _0x2000015:
0003f7 8119      	LDD  R17,Y+1
0003f8 8108      	LDD  R16,Y+0
0003f9 9625      	ADIW R28,5
0003fa 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0003fb 93ba      	ST   -Y,R27
0003fc 93aa      	ST   -Y,R26
0003fd 9726      	SBIW R28,6
0003fe 940e 07b4 	CALL __SAVELOCR6
000400 e010      	LDI  R17,0
000401 85ac      	LDD  R26,Y+12
000402 85bd      	LDD  R27,Y+12+1
000403 e0e0      	LDI  R30,LOW(0)
000404 e0f0      	LDI  R31,HIGH(0)
000405 93ed      	ST   X+,R30
000406 93fc      	ST   X,R31
                 _0x2000016:
000407 89ea      	LDD  R30,Y+18
000408 89fb      	LDD  R31,Y+18+1
000409 9631      	ADIW R30,1
00040a 8bea      	STD  Y+18,R30
00040b 8bfb      	STD  Y+18+1,R31
00040c 9731      	SBIW R30,1
00040d 91e4      	LPM  R30,Z
00040e 2f2e      	MOV  R18,R30
00040f 30e0      	CPI  R30,0
000410 f409      	BRNE PC+2
000411 c115      	RJMP _0x2000018
000412 2fe1      	MOV  R30,R17
000413 30e0      	CPI  R30,0
000414 f439      	BRNE _0x200001C
000415 3225      	CPI  R18,37
000416 f411      	BRNE _0x200001D
000417 e011      	LDI  R17,LOW(1)
000418 c002      	RJMP _0x200001E
                 _0x200001D:
000419 940e 0756 	CALL SUBOPT_0x1F
                 _0x200001E:
00041b c10a      	RJMP _0x200001B
                 _0x200001C:
00041c 30e1      	CPI  R30,LOW(0x1)
00041d f4a9      	BRNE _0x200001F
00041e 3225      	CPI  R18,37
00041f f419      	BRNE _0x2000020
000420 940e 0756 	CALL SUBOPT_0x1F
000422 c102      	RJMP _0x20000CC
                 _0x2000020:
000423 e012      	LDI  R17,LOW(2)
000424 e040      	LDI  R20,LOW(0)
000425 e000      	LDI  R16,LOW(0)
000426 322d      	CPI  R18,45
000427 f411      	BRNE _0x2000021
000428 e001      	LDI  R16,LOW(1)
000429 c0fc      	RJMP _0x200001B
                 _0x2000021:
00042a 322b      	CPI  R18,43
00042b f411      	BRNE _0x2000022
00042c e24b      	LDI  R20,LOW(43)
00042d c0f8      	RJMP _0x200001B
                 _0x2000022:
00042e 3220      	CPI  R18,32
00042f f411      	BRNE _0x2000023
000430 e240      	LDI  R20,LOW(32)
000431 c0f4      	RJMP _0x200001B
                 _0x2000023:
000432 c002      	RJMP _0x2000024
                 _0x200001F:
000433 30e2      	CPI  R30,LOW(0x2)
000434 f439      	BRNE _0x2000025
                 _0x2000024:
000435 e050      	LDI  R21,LOW(0)
000436 e013      	LDI  R17,LOW(3)
000437 3320      	CPI  R18,48
000438 f411      	BRNE _0x2000026
000439 6800      	ORI  R16,LOW(128)
00043a c0eb      	RJMP _0x200001B
                 _0x2000026:
00043b c003      	RJMP _0x2000027
                 _0x2000025:
00043c 30e3      	CPI  R30,LOW(0x3)
00043d f009      	BREQ PC+2
00043e c0e7      	RJMP _0x200001B
                 _0x2000027:
00043f 3320      	CPI  R18,48
000440 f010      	BRLO _0x200002A
000441 332a      	CPI  R18,58
000442 f008      	BRLO _0x200002B
                 _0x200002A:
000443 c007      	RJMP _0x2000029
                 _0x200002B:
000444 e0aa      	LDI  R26,LOW(10)
000445 9f5a      	MUL  R21,R26
000446 2d50      	MOV  R21,R0
000447 2fe2      	MOV  R30,R18
000448 53e0      	SUBI R30,LOW(48)
000449 0f5e      	ADD  R21,R30
00044a c0db      	RJMP _0x200001B
                 _0x2000029:
00044b 2fe2      	MOV  R30,R18
00044c 36e3      	CPI  R30,LOW(0x63)
00044d f449      	BRNE _0x200002F
00044e 940e 075d 	CALL SUBOPT_0x20
000450 89e8      	LDD  R30,Y+16
000451 89f9      	LDD  R31,Y+16+1
000452 81a4      	LDD  R26,Z+4
000453 93aa      	ST   -Y,R26
000454 940e 0763 	CALL SUBOPT_0x21
000456 c0ce      	RJMP _0x2000030
                 _0x200002F:
000457 37e3      	CPI  R30,LOW(0x73)
000458 f441      	BRNE _0x2000032
000459 940e 075d 	CALL SUBOPT_0x20
00045b 940e 0769 	CALL SUBOPT_0x22
00045d 940e 0563 	CALL _strlen
00045f 2f1e      	MOV  R17,R30
000460 c00a      	RJMP _0x2000033
                 _0x2000032:
000461 37e0      	CPI  R30,LOW(0x70)
000462 f461      	BRNE _0x2000035
000463 940e 075d 	CALL SUBOPT_0x20
000465 940e 0769 	CALL SUBOPT_0x22
000467 940e 056f 	CALL _strlenf
000469 2f1e      	MOV  R17,R30
00046a 6008      	ORI  R16,LOW(8)
                 _0x2000033:
00046b 6002      	ORI  R16,LOW(2)
00046c 770f      	ANDI R16,LOW(127)
00046d e030      	LDI  R19,LOW(0)
00046e c034      	RJMP _0x2000036
                 _0x2000035:
00046f 36e4      	CPI  R30,LOW(0x64)
000470 f011      	BREQ _0x2000039
000471 36e9      	CPI  R30,LOW(0x69)
000472 f411      	BRNE _0x200003A
                 _0x2000039:
000473 6004      	ORI  R16,LOW(4)
000474 c002      	RJMP _0x200003B
                 _0x200003A:
000475 37e5      	CPI  R30,LOW(0x75)
000476 f431      	BRNE _0x200003C
                 _0x200003B:
000477 e5e4      	LDI  R30,LOW(_tbl10_G100*2)
000478 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000479 83ee      	STD  Y+6,R30
00047a 83ff      	STD  Y+6+1,R31
00047b e015      	LDI  R17,LOW(5)
00047c c00c      	RJMP _0x200003D
                 _0x200003C:
00047d 35e8      	CPI  R30,LOW(0x58)
00047e f411      	BRNE _0x200003F
00047f 6008      	ORI  R16,LOW(8)
000480 c003      	RJMP _0x2000040
                 _0x200003F:
000481 37e8      	CPI  R30,LOW(0x78)
000482 f009      	BREQ PC+2
000483 c0a1      	RJMP _0x2000071
                 _0x2000040:
000484 e5ee      	LDI  R30,LOW(_tbl16_G100*2)
000485 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000486 83ee      	STD  Y+6,R30
000487 83ff      	STD  Y+6+1,R31
000488 e014      	LDI  R17,LOW(4)
                 _0x200003D:
000489 ff02      	SBRS R16,2
00048a c014      	RJMP _0x2000042
00048b 940e 075d 	CALL SUBOPT_0x20
00048d 940e 0773 	CALL SUBOPT_0x23
00048f 85ab      	LDD  R26,Y+11
000490 23aa      	TST  R26
000491 f43a      	BRPL _0x2000043
000492 85ea      	LDD  R30,Y+10
000493 85fb      	LDD  R31,Y+10+1
000494 940e 079e 	CALL __ANEGW1
000496 87ea      	STD  Y+10,R30
000497 87fb      	STD  Y+10+1,R31
000498 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
000499 3040      	CPI  R20,0
00049a f011      	BREQ _0x2000044
00049b 5f1f      	SUBI R17,-LOW(1)
00049c c001      	RJMP _0x2000045
                 _0x2000044:
00049d 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
00049e c004      	RJMP _0x2000046
                 _0x2000042:
00049f 940e 075d 	CALL SUBOPT_0x20
0004a1 940e 0773 	CALL SUBOPT_0x23
                 _0x2000046:
                 _0x2000036:
0004a3 fd00      	SBRC R16,0
0004a4 c011      	RJMP _0x2000047
                 _0x2000048:
0004a5 1715      	CP   R17,R21
0004a6 f478      	BRSH _0x200004A
0004a7 ff07      	SBRS R16,7
0004a8 c008      	RJMP _0x200004B
0004a9 ff02      	SBRS R16,2
0004aa c004      	RJMP _0x200004C
0004ab 7f0b      	ANDI R16,LOW(251)
0004ac 2f24      	MOV  R18,R20
0004ad 5011      	SUBI R17,LOW(1)
0004ae c001      	RJMP _0x200004D
                 _0x200004C:
0004af e320      	LDI  R18,LOW(48)
                 _0x200004D:
0004b0 c001      	RJMP _0x200004E
                 _0x200004B:
0004b1 e220      	LDI  R18,LOW(32)
                 _0x200004E:
0004b2 940e 0756 	CALL SUBOPT_0x1F
0004b4 5051      	SUBI R21,LOW(1)
0004b5 cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
0004b6 2f31      	MOV  R19,R17
0004b7 ff01      	SBRS R16,1
0004b8 c017      	RJMP _0x200004F
                 _0x2000050:
0004b9 3030      	CPI  R19,0
0004ba f0a1      	BREQ _0x2000052
0004bb ff03      	SBRS R16,3
0004bc c006      	RJMP _0x2000053
0004bd 81ee      	LDD  R30,Y+6
0004be 81ff      	LDD  R31,Y+6+1
0004bf 9125      	LPM  R18,Z+
0004c0 83ee      	STD  Y+6,R30
0004c1 83ff      	STD  Y+6+1,R31
0004c2 c005      	RJMP _0x2000054
                 _0x2000053:
0004c3 81ae      	LDD  R26,Y+6
0004c4 81bf      	LDD  R27,Y+6+1
0004c5 912d      	LD   R18,X+
0004c6 83ae      	STD  Y+6,R26
0004c7 83bf      	STD  Y+6+1,R27
                 _0x2000054:
0004c8 940e 0756 	CALL SUBOPT_0x1F
0004ca 3050      	CPI  R21,0
0004cb f009      	BREQ _0x2000055
0004cc 5051      	SUBI R21,LOW(1)
                 _0x2000055:
0004cd 5031      	SUBI R19,LOW(1)
0004ce cfea      	RJMP _0x2000050
                 _0x2000052:
0004cf c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
0004d0 e320      	LDI  R18,LOW(48)
0004d1 81ee      	LDD  R30,Y+6
0004d2 81ff      	LDD  R31,Y+6+1
0004d3 940e 07ab 	CALL __GETW1PF
0004d5 87e8      	STD  Y+8,R30
0004d6 87f9      	STD  Y+8+1,R31
0004d7 81ee      	LDD  R30,Y+6
0004d8 81ff      	LDD  R31,Y+6+1
0004d9 9632      	ADIW R30,2
0004da 83ee      	STD  Y+6,R30
0004db 83ff      	STD  Y+6+1,R31
                 _0x200005A:
0004dc 85e8      	LDD  R30,Y+8
0004dd 85f9      	LDD  R31,Y+8+1
0004de 85aa      	LDD  R26,Y+10
0004df 85bb      	LDD  R27,Y+10+1
0004e0 17ae      	CP   R26,R30
0004e1 07bf      	CPC  R27,R31
0004e2 f050      	BRLO _0x200005C
0004e3 5f2f      	SUBI R18,-LOW(1)
0004e4 85a8      	LDD  R26,Y+8
0004e5 85b9      	LDD  R27,Y+8+1
0004e6 85ea      	LDD  R30,Y+10
0004e7 85fb      	LDD  R31,Y+10+1
0004e8 1bea      	SUB  R30,R26
0004e9 0bfb      	SBC  R31,R27
0004ea 87ea      	STD  Y+10,R30
0004eb 87fb      	STD  Y+10+1,R31
0004ec cfef      	RJMP _0x200005A
                 _0x200005C:
0004ed 332a      	CPI  R18,58
0004ee f028      	BRLO _0x200005D
0004ef ff03      	SBRS R16,3
0004f0 c002      	RJMP _0x200005E
0004f1 5f29      	SUBI R18,-LOW(7)
0004f2 c001      	RJMP _0x200005F
                 _0x200005E:
0004f3 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
0004f4 fd04      	SBRC R16,4
0004f5 c01a      	RJMP _0x2000061
0004f6 3321      	CPI  R18,49
0004f7 f420      	BRSH _0x2000063
0004f8 85a8      	LDD  R26,Y+8
0004f9 85b9      	LDD  R27,Y+8+1
0004fa 9711      	SBIW R26,1
0004fb f409      	BRNE _0x2000062
                 _0x2000063:
0004fc c009      	RJMP _0x20000CD
                 _0x2000062:
0004fd 1753      	CP   R21,R19
0004fe f010      	BRLO _0x2000067
0004ff ff00      	SBRS R16,0
000500 c001      	RJMP _0x2000068
                 _0x2000067:
000501 c013      	RJMP _0x2000066
                 _0x2000068:
000502 e220      	LDI  R18,LOW(32)
000503 ff07      	SBRS R16,7
000504 c00b      	RJMP _0x2000069
000505 e320      	LDI  R18,LOW(48)
                 _0x20000CD:
000506 6100      	ORI  R16,LOW(16)
000507 ff02      	SBRS R16,2
000508 c007      	RJMP _0x200006A
000509 7f0b      	ANDI R16,LOW(251)
00050a 934a      	ST   -Y,R20
00050b 940e 0763 	CALL SUBOPT_0x21
00050d 3050      	CPI  R21,0
00050e f009      	BREQ _0x200006B
00050f 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
000510 940e 0756 	CALL SUBOPT_0x1F
000512 3050      	CPI  R21,0
000513 f009      	BREQ _0x200006C
000514 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
000515 5031      	SUBI R19,LOW(1)
000516 85a8      	LDD  R26,Y+8
000517 85b9      	LDD  R27,Y+8+1
000518 9712      	SBIW R26,2
000519 f008      	BRLO _0x2000059
00051a cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
00051b ff00      	SBRS R16,0
00051c c008      	RJMP _0x200006D
                 _0x200006E:
00051d 3050      	CPI  R21,0
00051e f031      	BREQ _0x2000070
00051f 5051      	SUBI R21,LOW(1)
000520 e2e0      	LDI  R30,LOW(32)
000521 93ea      	ST   -Y,R30
000522 940e 0763 	CALL SUBOPT_0x21
000524 cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
000525 e010      	LDI  R17,LOW(0)
                 _0x200001B:
000526 cee0      	RJMP _0x2000016
                 _0x2000018:
000527 85ac      	LDD  R26,Y+12
000528 85bd      	LDD  R27,Y+12+1
000529 940e 07a7 	CALL __GETW1P
00052b 940e 07bb 	CALL __LOADLOCR6
00052d 9664      	ADIW R28,20
00052e 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00052f 92ff      	PUSH R15
000530 2ef8      	MOV  R15,R24
000531 9726      	SBIW R28,6
000532 940e 07b6 	CALL __SAVELOCR4
000534 940e 077b 	CALL SUBOPT_0x24
000536 9730      	SBIW R30,0
000537 f419      	BRNE _0x2000072
000538 efef      	LDI  R30,LOW(65535)
000539 efff      	LDI  R31,HIGH(65535)
00053a c023      	RJMP _0x20C0004
                 _0x2000072:
00053b 01de      	MOVW R26,R28
00053c 9616      	ADIW R26,6
00053d 940e 079a 	CALL __ADDW2R15
00053f 018d      	MOVW R16,R26
000540 940e 077b 	CALL SUBOPT_0x24
000542 83ee      	STD  Y+6,R30
000543 83ff      	STD  Y+6+1,R31
000544 e0e0      	LDI  R30,LOW(0)
000545 87e8      	STD  Y+8,R30
000546 87e9      	STD  Y+8+1,R30
000547 01de      	MOVW R26,R28
000548 961a      	ADIW R26,10
000549 940e 079a 	CALL __ADDW2R15
00054b 940e 07a7 	CALL __GETW1P
00054d 93fa      	ST   -Y,R31
00054e 93ea      	ST   -Y,R30
00054f 931a      	ST   -Y,R17
000550 930a      	ST   -Y,R16
000551 ebeb      	LDI  R30,LOW(_put_buff_G100)
000552 e0f3      	LDI  R31,HIGH(_put_buff_G100)
000553 93fa      	ST   -Y,R31
000554 93ea      	ST   -Y,R30
000555 01de      	MOVW R26,R28
000556 961a      	ADIW R26,10
000557 dea3      	RCALL __print_G100
000558 019f      	MOVW R18,R30
000559 81ae      	LDD  R26,Y+6
00055a 81bf      	LDD  R27,Y+6+1
00055b e0e0      	LDI  R30,LOW(0)
00055c 93ec      	ST   X,R30
00055d 01f9      	MOVW R30,R18
                 _0x20C0004:
00055e 940e 07bd 	CALL __LOADLOCR4
000560 962a      	ADIW R28,10
000561 90ff      	POP  R15
000562 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000563 93ba      	ST   -Y,R27
000564 93aa      	ST   -Y,R26
000565 91a9          ld   r26,y+
000566 91b9          ld   r27,y+
000567 27ee          clr  r30
000568 27ff          clr  r31
                 strlen0:
000569 916d          ld   r22,x+
00056a 2366          tst  r22
00056b f011          breq strlen1
00056c 9631          adiw r30,1
00056d cffb          rjmp strlen0
                 strlen1:
00056e 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00056f 93ba      	ST   -Y,R27
000570 93aa      	ST   -Y,R26
000571 27aa          clr  r26
000572 27bb          clr  r27
000573 91e9          ld   r30,y+
000574 91f9          ld   r31,y+
                 strlenf0:
000575 9005      	lpm  r0,z+
000576 2000          tst  r0
000577 f011          breq strlenf1
000578 9611          adiw r26,1
000579 cffb          rjmp strlenf0
                 strlenf1:
00057a 01fd          movw r30,r26
00057b 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
00057c 93ba      	ST   -Y,R27
00057d 93aa      	ST   -Y,R26
00057e 91a9          ld   r26,y+
00057f 91b9          ld   r27,y+
000580 91e9          ld   r30,y+
000581 91f9          ld   r31,y+
000582 9630          adiw r30,0
000583 f42a          brpl __itoa0
000584 95e0          com  r30
000585 95f0          com  r31
000586 9631          adiw r30,1
000587 e26d          ldi  r22,'-'
000588 936d          st   x+,r22
                 __itoa0:
000589 94e8          clt
00058a e180          ldi  r24,low(10000)
00058b e297          ldi  r25,high(10000)
00058c d00d          rcall __itoa1
00058d ee88          ldi  r24,low(1000)
00058e e093          ldi  r25,high(1000)
00058f d00a          rcall __itoa1
000590 e684          ldi  r24,100
000591 2799          clr  r25
000592 d007          rcall __itoa1
000593 e08a          ldi  r24,10
000594 d005          rcall __itoa1
000595 2f6e          mov  r22,r30
000596 d010          rcall __itoa5
000597 2766          clr  r22
000598 936c          st   x,r22
000599 9508          ret
                 
                 __itoa1:
00059a 2766          clr	 r22
                 __itoa2:
00059b 17e8          cp   r30,r24
00059c 07f9          cpc  r31,r25
00059d f020          brlo __itoa3
00059e 9563          inc  r22
00059f 1be8          sub  r30,r24
0005a0 0bf9          sbc  r31,r25
0005a1 f7c9          brne __itoa2
                 __itoa3:
0005a2 2366          tst  r22
0005a3 f411          brne __itoa4
0005a4 f016          brts __itoa5
0005a5 9508          ret
                 __itoa4:
0005a6 9468          set
                 __itoa5:
0005a7 5d60          subi r22,-0x30
0005a8 936d          st   x+,r22
0005a9 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G103:
                 ; .FSTART __lcd_write_nibble_G103
0005aa 93aa      	ST   -Y,R26
0005ab b3e8      	IN   R30,0x18
0005ac 70ef      	ANDI R30,LOW(0xF)
0005ad 2fae      	MOV  R26,R30
0005ae 81e8      	LD   R30,Y
0005af 7fe0      	ANDI R30,LOW(0xF0)
0005b0 2bea      	OR   R30,R26
0005b1 bbe8      	OUT  0x18,R30
                +
0005b2 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0005b3 958a     +DEC R24
0005b4 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0005b5 9ac2      	SBI  0x18,2
                +
0005b6 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0005b7 958a     +DEC R24
0005b8 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0005b9 98c2      	CBI  0x18,2
                +
0005ba e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0005bb 958a     +DEC R24
0005bc f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0005bd c09a      	RJMP _0x20C0001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0005be 93aa      	ST   -Y,R26
0005bf 81a8      	LD   R26,Y
0005c0 dfe9      	RCALL __lcd_write_nibble_G103
0005c1 81e8          ld    r30,y
0005c2 95e2          swap  r30
0005c3 83e8          st    y,r30
0005c4 81a8      	LD   R26,Y
0005c5 dfe4      	RCALL __lcd_write_nibble_G103
                +
0005c6 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0005c7 958a     +DEC R24
0005c8 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0005c9 c08e      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0005ca 93aa      	ST   -Y,R26
0005cb 81e8      	LD   R30,Y
0005cc e0f0      	LDI  R31,0
0005cd 53e8      	SUBI R30,LOW(-__base_y_G103)
0005ce 4ffd      	SBCI R31,HIGH(-__base_y_G103)
0005cf 81e0      	LD   R30,Z
0005d0 81a9      	LDD  R26,Y+1
0005d1 0fae      	ADD  R26,R30
0005d2 dfeb      	RCALL __lcd_write_data
0005d3 81e9      	LDD  R30,Y+1
0005d4 93e0 02cc 	STS  __lcd_x,R30
0005d6 81e8      	LD   R30,Y
0005d7 93e0 02cd 	STS  __lcd_y,R30
                 _0x20C0003:
0005d9 9622      	ADIW R28,2
0005da 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0005db e0a2      	LDI  R26,LOW(2)
0005dc 940e 0782 	CALL SUBOPT_0x25
0005de e0ac      	LDI  R26,LOW(12)
0005df dfde      	RCALL __lcd_write_data
0005e0 e0a1      	LDI  R26,LOW(1)
0005e1 940e 0782 	CALL SUBOPT_0x25
0005e3 e0e0      	LDI  R30,LOW(0)
0005e4 93e0 02cd 	STS  __lcd_y,R30
0005e6 93e0 02cc 	STS  __lcd_x,R30
0005e8 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0005e9 93aa      	ST   -Y,R26
0005ea 81a8      	LD   R26,Y
0005eb 30aa      	CPI  R26,LOW(0xA)
0005ec f031      	BREQ _0x2060005
0005ed 91e0 02ce 	LDS  R30,__lcd_maxx
0005ef 91a0 02cc 	LDS  R26,__lcd_x
0005f1 17ae      	CP   R26,R30
0005f2 f060      	BRLO _0x2060004
                 _0x2060005:
0005f3 e0e0      	LDI  R30,LOW(0)
0005f4 93ea      	ST   -Y,R30
0005f5 91a0 02cd 	LDS  R26,__lcd_y
0005f7 5faf      	SUBI R26,-LOW(1)
0005f8 93a0 02cd 	STS  __lcd_y,R26
0005fa dfcf      	RCALL _lcd_gotoxy
0005fb 81a8      	LD   R26,Y
0005fc 30aa      	CPI  R26,LOW(0xA)
0005fd f409      	BRNE _0x2060007
0005fe c059      	RJMP _0x20C0001
                 _0x2060007:
                 _0x2060004:
0005ff 91e0 02cc 	LDS  R30,__lcd_x
000601 5fef      	SUBI R30,-LOW(1)
000602 93e0 02cc 	STS  __lcd_x,R30
000604 9ac0      	SBI  0x18,0
000605 81a8      	LD   R26,Y
000606 dfb7      	RCALL __lcd_write_data
000607 98c0      	CBI  0x18,0
000608 c04f      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000609 93ba      	ST   -Y,R27
00060a 93aa      	ST   -Y,R26
00060b 931a      	ST   -Y,R17
                 _0x2060008:
00060c 81a9      	LDD  R26,Y+1
00060d 81ba      	LDD  R27,Y+1+1
00060e 91ed      	LD   R30,X+
00060f 83a9      	STD  Y+1,R26
000610 83ba      	STD  Y+1+1,R27
000611 2f1e      	MOV  R17,R30
000612 30e0      	CPI  R30,0
000613 f019      	BREQ _0x206000A
000614 2fa1      	MOV  R26,R17
000615 dfd3      	RCALL _lcd_putchar
000616 cff5      	RJMP _0x2060008
                 _0x206000A:
000617 c010      	RJMP _0x20C0002
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
000618 93ba      	ST   -Y,R27
000619 93aa      	ST   -Y,R26
00061a 931a      	ST   -Y,R17
                 _0x206000B:
00061b 81e9      	LDD  R30,Y+1
00061c 81fa      	LDD  R31,Y+1+1
00061d 9631      	ADIW R30,1
00061e 83e9      	STD  Y+1,R30
00061f 83fa      	STD  Y+1+1,R31
000620 9731      	SBIW R30,1
000621 91e4      	LPM  R30,Z
000622 2f1e      	MOV  R17,R30
000623 30e0      	CPI  R30,0
000624 f019      	BREQ _0x206000D
000625 2fa1      	MOV  R26,R17
000626 dfc2      	RCALL _lcd_putchar
000627 cff3      	RJMP _0x206000B
                 _0x206000D:
                 _0x20C0002:
000628 8118      	LDD  R17,Y+0
000629 9623      	ADIW R28,3
00062a 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00062b 93aa      	ST   -Y,R26
00062c b3e7      	IN   R30,0x17
00062d 6fe0      	ORI  R30,LOW(0xF0)
00062e bbe7      	OUT  0x17,R30
00062f 9aba      	SBI  0x17,2
000630 9ab8      	SBI  0x17,0
000631 9ab9      	SBI  0x17,1
000632 98c2      	CBI  0x18,2
000633 98c0      	CBI  0x18,0
000634 98c1      	CBI  0x18,1
000635 81e8      	LD   R30,Y
000636 93e0 02ce 	STS  __lcd_maxx,R30
000638 58e0      	SUBI R30,-LOW(128)
                +
000639 93e0 02ca+STS __base_y_G103 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G103,2
00063b 81e8      	LD   R30,Y
00063c 54e0      	SUBI R30,-LOW(192)
                +
00063d 93e0 02cb+STS __base_y_G103 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G103,3
00063f e1a4      	LDI  R26,LOW(20)
000640 e0b0      	LDI  R27,0
000641 940e 0790 	CALL _delay_ms
000643 940e 0788 	CALL SUBOPT_0x26
000645 940e 0788 	CALL SUBOPT_0x26
000647 940e 0788 	CALL SUBOPT_0x26
000649 e2a0      	LDI  R26,LOW(32)
00064a df5f      	RCALL __lcd_write_nibble_G103
                +
00064b ec88     +LDI R24 , LOW ( 200 )
00064c e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00064d 9701     +SBIW R24 , 1
00064e f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00064f e2a8      	LDI  R26,LOW(40)
000650 df6d      	RCALL __lcd_write_data
000651 e0a4      	LDI  R26,LOW(4)
000652 df6b      	RCALL __lcd_write_data
000653 e8a5      	LDI  R26,LOW(133)
000654 df69      	RCALL __lcd_write_data
000655 e0a6      	LDI  R26,LOW(6)
000656 df67      	RCALL __lcd_write_data
000657 df83      	RCALL _lcd_clear
                 _0x20C0001:
000658 9621      	ADIW R28,1
000659 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _totalcount6:
000260           	.BYTE 0x2
                 _nobat6:
000262           	.BYTE 0x2
                 _totalcount7:
000264           	.BYTE 0x2
                 _nobat7:
000266           	.BYTE 0x2
                 _TotalCount:
000268           	.BYTE 0x2
                 _badje1:
00026a           	.BYTE 0x2
                 _badje2:
00026c           	.BYTE 0x2
                 _badje3:
00026e           	.BYTE 0x2
                 _badje4:
000270           	.BYTE 0x2
                 _badje5:
000272           	.BYTE 0x2
                 _badje6:
000274           	.BYTE 0x2
                 _badje7:
000276           	.BYTE 0x2
                 _namayesh:
000278           	.BYTE 0x2
                 _d1:
00027a           	.BYTE 0x2
                 _d2:
00027c           	.BYTE 0x2
                 _d3:
00027e           	.BYTE 0x2
                 _d4:
000280           	.BYTE 0x2
                 _d5:
000282           	.BYTE 0x2
                 _d6:
000284           	.BYTE 0x2
                 _d7:
000286           	.BYTE 0x2
                 _entezar:
000288           	.BYTE 0x2
                 _str2:
00028a           	.BYTE 0xA
                 _str3:
000294           	.BYTE 0x11
                 _reset:
0002a5           	.BYTE 0x2
                 _saat_yekonim:
0002a7           	.BYTE 0x2
                 _str1:
0002a9           	.BYTE 0xA
                 _lcd_buffer:
0002b3           	.BYTE 0x11
                 __seed_G102:
0002c4           	.BYTE 0x4
                 __base_y_G103:
0002c8           	.BYTE 0x4
                 __lcd_x:
0002cc           	.BYTE 0x1
                 __lcd_y:
0002cd           	.BYTE 0x1
                 __lcd_maxx:
0002ce           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
00065a 91e0 02a7 	LDS  R30,_saat_yekonim
00065c 91f0 02a8 	LDS  R31,_saat_yekonim+1
00065e 9730      	SBIW R30,0
00065f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1:
000660 91e0 0268 	LDS  R30,_TotalCount
000662 91f0 0269 	LDS  R31,_TotalCount+1
000664 9631      	ADIW R30,1
000665 93e0 0268 	STS  _TotalCount,R30
000667 93f0 0269 	STS  _TotalCount+1,R31
000669 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2:
00066a e0e1      	LDI  R30,LOW(1)
00066b e0f0      	LDI  R31,HIGH(1)
00066c 93e0 026a 	STS  _badje1,R30
00066e 93f0 026b 	STS  _badje1+1,R31
000670 01f6      	MOVW R30,R12
000671 9631      	ADIW R30,1
000672 016f      	MOVW R12,R30
000673 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3:
000674 e0e1      	LDI  R30,LOW(1)
000675 e0f0      	LDI  R31,HIGH(1)
000676 93e0 0278 	STS  _namayesh,R30
000678 93f0 0279 	STS  _namayesh+1,R31
00067a 92da      	ST   -Y,R13
00067b 92ca      	ST   -Y,R12
00067c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
00067d e0e1      	LDI  R30,LOW(1)
00067e e0f0      	LDI  R31,HIGH(1)
00067f 93e0 026c 	STS  _badje2,R30
000681 93f0 026d 	STS  _badje2+1,R31
000683 01f6      	MOVW R30,R12
000684 9631      	ADIW R30,1
000685 016f      	MOVW R12,R30
000686 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5:
000687 e0e1      	LDI  R30,LOW(1)
000688 e0f0      	LDI  R31,HIGH(1)
000689 93e0 026e 	STS  _badje3,R30
00068b 93f0 026f 	STS  _badje3+1,R31
00068d 01f6      	MOVW R30,R12
00068e 9631      	ADIW R30,1
00068f 016f      	MOVW R12,R30
000690 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x6:
000691 e0e1      	LDI  R30,LOW(1)
000692 e0f0      	LDI  R31,HIGH(1)
000693 93e0 0270 	STS  _badje4,R30
000695 93f0 0271 	STS  _badje4+1,R31
000697 01f6      	MOVW R30,R12
000698 9631      	ADIW R30,1
000699 016f      	MOVW R12,R30
00069a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x7:
00069b e0e1      	LDI  R30,LOW(1)
00069c e0f0      	LDI  R31,HIGH(1)
00069d 93e0 0272 	STS  _badje5,R30
00069f 93f0 0273 	STS  _badje5+1,R31
0006a1 01f6      	MOVW R30,R12
0006a2 9631      	ADIW R30,1
0006a3 016f      	MOVW R12,R30
0006a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x8:
0006a5 e0e1      	LDI  R30,LOW(1)
0006a6 e0f0      	LDI  R31,HIGH(1)
0006a7 93e0 0278 	STS  _namayesh,R30
0006a9 93f0 0279 	STS  _namayesh+1,R31
0006ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x9:
0006ac 93e0 0278 	STS  _namayesh,R30
0006ae 93e0 0279 	STS  _namayesh+1,R30
0006b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xA:
0006b1 e0e1      	LDI  R30,LOW(1)
0006b2 e0f0      	LDI  R31,HIGH(1)
0006b3 93e0 0274 	STS  _badje6,R30
0006b5 93f0 0275 	STS  _badje6+1,R31
0006b7 91e0 0262 	LDS  R30,_nobat6
0006b9 91f0 0263 	LDS  R31,_nobat6+1
0006bb 9631      	ADIW R30,1
0006bc 93e0 0262 	STS  _nobat6,R30
0006be 93f0 0263 	STS  _nobat6+1,R31
0006c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
0006c1 91e0 0262 	LDS  R30,_nobat6
0006c3 91f0 0263 	LDS  R31,_nobat6+1
0006c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
0006c6 93fa      	ST   -Y,R31
0006c7 93ea      	ST   -Y,R30
0006c8 e0a6      	LDI  R26,LOW(6)
0006c9 e0b0      	LDI  R27,0
0006ca 940c 031e 	JMP  _LCD_namayesh_go_to_badje
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xD:
0006cc 1bea      	SUB  R30,R26
0006cd 0bfb      	SBC  R31,R27
0006ce 83e8      	ST   Y,R30
0006cf 83f9      	STD  Y+1,R31
0006d0 81a8      	LD   R26,Y
0006d1 81b9      	LDD  R27,Y+1
0006d2 940e 034a 	CALL _LCD_namayesh_entezar
0006d4 9622      	ADIW R28,2
0006d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xE:
0006d6 e0e1      	LDI  R30,LOW(1)
0006d7 e0f0      	LDI  R31,HIGH(1)
0006d8 93e0 0276 	STS  _badje7,R30
0006da 93f0 0277 	STS  _badje7+1,R31
0006dc 91e0 0266 	LDS  R30,_nobat7
0006de 91f0 0267 	LDS  R31,_nobat7+1
0006e0 9631      	ADIW R30,1
0006e1 93e0 0266 	STS  _nobat7,R30
0006e3 93f0 0267 	STS  _nobat7+1,R31
0006e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
0006e6 91e0 0266 	LDS  R30,_nobat7
0006e8 91f0 0267 	LDS  R31,_nobat7+1
0006ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
0006eb 93fa      	ST   -Y,R31
0006ec 93ea      	ST   -Y,R30
0006ed e0a7      	LDI  R26,LOW(7)
0006ee e0b0      	LDI  R27,0
0006ef 940c 031e 	JMP  _LCD_namayesh_go_to_badje
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x11:
0006f1 e0e0      	LDI  R30,LOW(0)
0006f2 93e0 026a 	STS  _badje1,R30
0006f4 93e0 026b 	STS  _badje1+1,R30
0006f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12:
0006f7 e0e0      	LDI  R30,LOW(0)
0006f8 93e0 026c 	STS  _badje2,R30
0006fa 93e0 026d 	STS  _badje2+1,R30
0006fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
0006fd e0e0      	LDI  R30,LOW(0)
0006fe 93e0 026e 	STS  _badje3,R30
000700 93e0 026f 	STS  _badje3+1,R30
000702 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
000703 e0e0      	LDI  R30,LOW(0)
000704 93e0 0270 	STS  _badje4,R30
000706 93e0 0271 	STS  _badje4+1,R30
000708 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x15:
000709 e0e0      	LDI  R30,LOW(0)
00070a 93e0 0272 	STS  _badje5,R30
00070c 93e0 0273 	STS  _badje5+1,R30
00070e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16:
00070f e0e0      	LDI  R30,LOW(0)
000710 93e0 0274 	STS  _badje6,R30
000712 93e0 0275 	STS  _badje6+1,R30
000714 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17:
000715 e0e0      	LDI  R30,LOW(0)
000716 93e0 0276 	STS  _badje7,R30
000718 93e0 0277 	STS  _badje7+1,R30
00071a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:26 WORDS
                 SUBOPT_0x18:
00071b 24aa      	CLR  R10
00071c 24bb      	CLR  R11
00071d 24cc      	CLR  R12
00071e 24dd      	CLR  R13
00071f e0e0      	LDI  R30,LOW(0)
000720 93e0 0260 	STS  _totalcount6,R30
000722 93e0 0261 	STS  _totalcount6+1,R30
000724 93e0 0262 	STS  _nobat6,R30
000726 93e0 0263 	STS  _nobat6+1,R30
000728 93e0 0264 	STS  _totalcount7,R30
00072a 93e0 0265 	STS  _totalcount7+1,R30
00072c 93e0 0266 	STS  _nobat7,R30
00072e 93e0 0267 	STS  _nobat7+1,R30
000730 93e0 0268 	STS  _TotalCount,R30
000732 93e0 0269 	STS  _TotalCount+1,R30
000734 cfbc      	RJMP SUBOPT_0x11
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
000735 940e 07a2 	CALL __CWD1
000737 940e 07af 	CALL __PUTPARD1
000739 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A:
00073a e0e0      	LDI  R30,LOW(0)
00073b 93ea      	ST   -Y,R30
00073c e0a0      	LDI  R26,LOW(0)
00073d 940c 05ca 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B:
00073f 940e 0609 	CALL _lcd_puts
000741 eea8      	LDI  R26,LOW(1000)
000742 e0b3      	LDI  R27,HIGH(1000)
000743 940e 0790 	CALL _delay_ms
000745 940c 05db 	JMP  _lcd_clear
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
000747 93ea      	ST   -Y,R30
000748 e0a0      	LDI  R26,LOW(0)
000749 940c 05ca 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
00074b b3e3      	IN   R30,0x13
00074c 70e7      	ANDI R30,LOW(0x7)
00074d 2f0e      	MOV  R16,R30
00074e 3007      	CPI  R16,7
00074f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E:
000750 2fe0      	MOV  R30,R16
000751 e0f0      	LDI  R31,0
000752 30e6      	CPI  R30,LOW(0x6)
000753 e0a0      	LDI  R26,HIGH(0x6)
000754 07fa      	CPC  R31,R26
000755 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1F:
000756 932a      	ST   -Y,R18
000757 85ad      	LDD  R26,Y+13
000758 85be      	LDD  R27,Y+13+1
000759 85ef      	LDD  R30,Y+15
00075a 89f8      	LDD  R31,Y+15+1
00075b 9509      	ICALL
00075c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x20:
00075d 89e8      	LDD  R30,Y+16
00075e 89f9      	LDD  R31,Y+16+1
00075f 9734      	SBIW R30,4
000760 8be8      	STD  Y+16,R30
000761 8bf9      	STD  Y+16+1,R31
000762 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x21:
000763 85ad      	LDD  R26,Y+13
000764 85be      	LDD  R27,Y+13+1
000765 85ef      	LDD  R30,Y+15
000766 89f8      	LDD  R31,Y+15+1
000767 9509      	ICALL
000768 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x22:
000769 89a8      	LDD  R26,Y+16
00076a 89b9      	LDD  R27,Y+16+1
00076b 9614      	ADIW R26,4
00076c 940e 07a7 	CALL __GETW1P
00076e 83ee      	STD  Y+6,R30
00076f 83ff      	STD  Y+6+1,R31
000770 81ae      	LDD  R26,Y+6
000771 81bf      	LDD  R27,Y+6+1
000772 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x23:
000773 89a8      	LDD  R26,Y+16
000774 89b9      	LDD  R27,Y+16+1
000775 9614      	ADIW R26,4
000776 940e 07a7 	CALL __GETW1P
000778 87ea      	STD  Y+10,R30
000779 87fb      	STD  Y+10+1,R31
00077a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
00077b 01de      	MOVW R26,R28
00077c 961c      	ADIW R26,12
00077d 940e 079a 	CALL __ADDW2R15
00077f 940e 07a7 	CALL __GETW1P
000781 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
000782 940e 05be 	CALL __lcd_write_data
000784 e0a3      	LDI  R26,LOW(3)
000785 e0b0      	LDI  R27,0
000786 940c 0790 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x26:
000788 e3a0      	LDI  R26,LOW(48)
000789 940e 05aa 	CALL __lcd_write_nibble_G103
                +
00078b ec88     +LDI R24 , LOW ( 200 )
00078c e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00078d 9701     +SBIW R24 , 1
00078e f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00078f 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000790 9610      	adiw r26,0
000791 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000792 ed80     +LDI R24 , LOW ( 0x7D0 )
000793 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000794 9701     +SBIW R24 , 1
000795 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000796 95a8      	wdr
000797 9711      	sbiw r26,1
000798 f7c9      	brne __delay_ms0
                 __delay_ms1:
000799 9508      	ret
                 
                 __ADDW2R15:
00079a 2400      	CLR  R0
00079b 0daf      	ADD  R26,R15
00079c 1db0      	ADC  R27,R0
00079d 9508      	RET
                 
                 __ANEGW1:
00079e 95f1      	NEG  R31
00079f 95e1      	NEG  R30
0007a0 40f0      	SBCI R31,0
0007a1 9508      	RET
                 
                 __CWD1:
0007a2 2f6f      	MOV  R22,R31
0007a3 0f66      	ADD  R22,R22
0007a4 0b66      	SBC  R22,R22
0007a5 2f76      	MOV  R23,R22
0007a6 9508      	RET
                 
                 __GETW1P:
0007a7 91ed      	LD   R30,X+
0007a8 91fc      	LD   R31,X
0007a9 9711      	SBIW R26,1
0007aa 9508      	RET
                 
                 __GETW1PF:
0007ab 9005      	LPM  R0,Z+
0007ac 91f4      	LPM  R31,Z
0007ad 2de0      	MOV  R30,R0
0007ae 9508      	RET
                 
                 __PUTPARD1:
0007af 937a      	ST   -Y,R23
0007b0 936a      	ST   -Y,R22
0007b1 93fa      	ST   -Y,R31
0007b2 93ea      	ST   -Y,R30
0007b3 9508      	RET
                 
                 __SAVELOCR6:
0007b4 935a      	ST   -Y,R21
                 __SAVELOCR5:
0007b5 934a      	ST   -Y,R20
                 __SAVELOCR4:
0007b6 933a      	ST   -Y,R19
                 __SAVELOCR3:
0007b7 932a      	ST   -Y,R18
                 __SAVELOCR2:
0007b8 931a      	ST   -Y,R17
0007b9 930a      	ST   -Y,R16
0007ba 9508      	RET
                 
                 __LOADLOCR6:
0007bb 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0007bc 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0007bd 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0007be 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0007bf 8119      	LDD  R17,Y+1
0007c0 8108      	LD   R16,Y
0007c1 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  13 r1 :   3 r2 :   0 r3 :   0 r4 :   6 r5 :   3 r6 :   6 r7 :   3 
r8 :   9 r9 :   6 r10:   9 r11:   6 r12:  23 r13:   8 r14:   0 r15:   6 
r16:  39 r17:  46 r18:  29 r19:   8 r20:   9 r21:  17 r22:  23 r23:   4 
r24:  31 r25:  12 r26: 173 r27:  75 r28:  18 r29:   1 r30: 450 r31: 172 
x  :  26 y  : 253 z  :  16 
Registers used: 32 out of 35 (91.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   4 
adiw  :  50 and   :   0 andi  :   7 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  26 
brge  :   8 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   9 
brlt  :   1 brmi  :   1 brne  :  64 brpl  :   2 brsh  :   2 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 161 
cbi   :   9 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  22 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   2 
cp    :  20 cpc   :  34 cpi   :  52 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   7 inc   :   1 jmp   :  29 ld    :  51 ldd   :  82 ldi   : 243 
lds   :  52 lpm   :  16 lsl   :   0 lsr   :   0 mov   :  24 movw  :  41 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   9 out   :  33 pop   :   1 push  :   1 rcall :  32 ret   :  55 
reti  :   2 rjmp  :  95 rol   :   0 ror   :   0 sbc   :   5 sbci  :   2 
sbi   :   9 sbic  :   0 sbis  :   1 sbiw  :  32 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 115 std   :  34 sts   :  85 sub   :   4 subi  :  19 swap  :   1 
tst   :   5 wdr   :   1 
Instructions used: 62 out of 116 (53.4%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000f84   3828    144   3972   32768  12.1%
[.dseg] 0x000060 0x0002cf      0    111    111    2048   5.4%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 13 warnings
