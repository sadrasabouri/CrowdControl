
AVRASM ver. 2.1.30  C:\Users\Sun Media\Desktop\final part - Copy\Debug\List\final.asm Thu Feb 04 14:10:14 2021

C:\Users\Sun Media\Desktop\final part - Copy\Debug\List\final.asm(1088): warning: Register r4 already defined by the .DEF directive
C:\Users\Sun Media\Desktop\final part - Copy\Debug\List\final.asm(1089): warning: Register r5 already defined by the .DEF directive
C:\Users\Sun Media\Desktop\final part - Copy\Debug\List\final.asm(1090): warning: Register r6 already defined by the .DEF directive
C:\Users\Sun Media\Desktop\final part - Copy\Debug\List\final.asm(1091): warning: Register r7 already defined by the .DEF directive
C:\Users\Sun Media\Desktop\final part - Copy\Debug\List\final.asm(1092): warning: Register r8 already defined by the .DEF directive
C:\Users\Sun Media\Desktop\final part - Copy\Debug\List\final.asm(1093): warning: Register r9 already defined by the .DEF directive
C:\Users\Sun Media\Desktop\final part - Copy\Debug\List\final.asm(1094): warning: Register r10 already defined by the .DEF directive
C:\Users\Sun Media\Desktop\final part - Copy\Debug\List\final.asm(1095): warning: Register r11 already defined by the .DEF directive
C:\Users\Sun Media\Desktop\final part - Copy\Debug\List\final.asm(1096): warning: Register r12 already defined by the .DEF directive
C:\Users\Sun Media\Desktop\final part - Copy\Debug\List\final.asm(1097): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8/000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _second=R4
                 	.DEF _second_msb=R5
                 	.DEF _minute=R6
                 	.DEF _minute_msb=R7
                 	.DEF _hour=R8
                 	.DEF _hour_msb=R9
                 	.DEF _totalcount1_5=R10
                 	.DEF _totalcount1_5_msb=R11
                 	.DEF _nobat1_5=R12
                 	.DEF _nobat1_5_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0064 	JMP  __RESET
000002 940c 00bd 	JMP  _ext_int0_isr
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0091 	JMP  _timer1_ovf_isr
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000033 001e
000034 0007      	.DB  0x1E,0x0,0x7,0x0
                 
                 _0x0:
000035 6c43
000036 636f
000037 3a6b
000038 2520      	.DB  0x43,0x6C,0x6F,0x63,0x6B,0x3A,0x20,0x25
000039 3a64
00003a 6425
00003b 253a
00003c 0064      	.DB  0x64,0x3A,0x25,0x64,0x3A,0x25,0x64,0x0
00003d 6f67
00003e 7420
00003f 206f
000040 6162      	.DB  0x67,0x6F,0x20,0x74,0x6F,0x20,0x62,0x61
000041 6a64
000042 2065
000043 203a
000044 2000      	.DB  0x64,0x6A,0x65,0x20,0x3A,0x20,0x0,0x20
000045 616e
000046 6166
000047 2072
000048 6f6a      	.DB  0x6E,0x61,0x66,0x61,0x72,0x20,0x6A,0x6F
000049 6f6c
00004a 6579
00004b 7320
00004c 6f68      	.DB  0x6C,0x6F,0x79,0x65,0x20,0x73,0x68,0x6F
00004d 616d
00004e 6820
00004f 7361
000050 6174      	.DB  0x6D,0x61,0x20,0x68,0x61,0x73,0x74,0x61
000051 646e
C:\Users\Sun Media\Desktop\final part - Copy\Debug\List\final.asm(1146): warning: .cseg .db misalignment - padding zero byte
000052 0000      	.DB  0x6E,0x64,0x0
                 _0x2040060:
C:\Users\Sun Media\Desktop\final part - Copy\Debug\List\final.asm(1148): warning: .cseg .db misalignment - padding zero byte
000053 0001      	.DB  0x1
                 _0x2040000:
000054 4e2d
000055 4e41
000056 4900
000057 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\Sun Media\Desktop\final part - Copy\Debug\List\final.asm(1151): warning: .cseg .db misalignment - padding zero byte
000058 0000      	.DB  0x0
                 _0x2060003:
000059 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00005a 0004      	.DW  0x04
00005b 0006      	.DW  0x06
00005c 0066      	.DW  __REG_VARS*2
                 
00005d 0001      	.DW  0x01
00005e 02c4      	.DW  __seed_G102
00005f 00a6      	.DW  _0x2040060*2
                 
000060 0002      	.DW  0x02
000061 02c8      	.DW  __base_y_G103
000062 00b2      	.DW  _0x2060003*2
                 
                 _0xFFFFFFFF:
000063 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000064 94f8      	CLI
000065 27ee      	CLR  R30
000066 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000067 e0f1      	LDI  R31,1
000068 bffb      	OUT  GICR,R31
000069 bfeb      	OUT  GICR,R30
00006a bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00006b e08d      	LDI  R24,(14-2)+1
00006c e0a2      	LDI  R26,2
00006d 27bb      	CLR  R27
                 __CLEAR_REG:
00006e 93ed      	ST   X+,R30
00006f 958a      	DEC  R24
000070 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000071 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000072 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000073 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000074 93ed      	ST   X+,R30
000075 9701      	SBIW R24,1
000076 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000077 ebe4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000078 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000079 9185      	LPM  R24,Z+
00007a 9195      	LPM  R25,Z+
00007b 9700      	SBIW R24,0
00007c f061      	BREQ __GLOBAL_INI_END
00007d 91a5      	LPM  R26,Z+
00007e 91b5      	LPM  R27,Z+
00007f 9005      	LPM  R0,Z+
000080 9015      	LPM  R1,Z+
000081 01bf      	MOVW R22,R30
000082 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000083 9005      	LPM  R0,Z+
000084 920d      	ST   X+,R0
000085 9701      	SBIW R24,1
000086 f7e1      	BRNE __GLOBAL_INI_LOOP
000087 01fb      	MOVW R30,R22
000088 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000089 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00008a bfed      	OUT  SPL,R30
00008b e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00008c bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00008d e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00008e e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00008f 940c 02a6 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include <stdlib.h>
                 ;#include <alcd.h>
                 ;#include <mega32.h>
                 ;int second  ;
                 ;int minute = 30 ;
                 ;int hour = 7 ;
                 ;int totalcount1_5, nobat1_5 ;
                 ;int totalcount6, nobat6 ;
                 ;int totalcount7, nobat7;
                 ;int TotalCount ;
                 ;int badje1, badje2, badje3, badje4, badje5, badje6, badje7;
                 ;int namayesh = 0;
                 ;void LCD_namayesh_go_to_badje (int a, int b);
                 ;char GetKey();
                 ;int d1,d2,d3 ,d4,d5,d6 ,d7;
                 ;int entezar;
                 ;void LCD_namayesh_go_to_badje (int a, int b);
                 ;void LCD_namayesh_entezar (int a);
                 ;char str2[10];
                 ;char str3[17];
                 ;int reset = 0 ;
                 ;int saat_yekonim;
                 ;char str1[10];
                 ;int namayesh;
                 ;char lcd_buffer[17];
                 ;//=================================================================================================
                 ;// timer interrupt
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0000 0021 {
                 
                 	.CSEG
                 _timer1_ovf_isr:
                 ; .FSTART _timer1_ovf_isr
000091 93ea      	ST   -Y,R30
000092 93fa      	ST   -Y,R31
000093 b7ef      	IN   R30,SREG
000094 93ea      	ST   -Y,R30
                 ; 0000 0022 // Reinitialize Timer1 value
                 ; 0000 0023 TCNT1H=0x85EE >> 8;
000095 e8e5      	LDI  R30,LOW(133)
000096 bded      	OUT  0x2D,R30
                 ; 0000 0024 TCNT1L=0x85EE & 0xff;
000097 eeee      	LDI  R30,LOW(238)
000098 bdec      	OUT  0x2C,R30
                 ; 0000 0025 // Place your code here
                 ; 0000 0026 if(second==59){
000099 e3eb      	LDI  R30,LOW(59)
00009a e0f0      	LDI  R31,HIGH(59)
00009b 15e4      	CP   R30,R4
00009c 05f5      	CPC  R31,R5
00009d f4b9      	BRNE _0x3
                 ; 0000 0027 second=0;
00009e 2444      	CLR  R4
00009f 2455      	CLR  R5
                 ; 0000 0028 if(minute==59){
0000a0 15e6      	CP   R30,R6
0000a1 05f7      	CPC  R31,R7
0000a2 f471      	BRNE _0x4
                 ; 0000 0029 minute=0;
0000a3 2466      	CLR  R6
0000a4 2477      	CLR  R7
                 ; 0000 002A if(hour==23)
0000a5 e1e7      	LDI  R30,LOW(23)
0000a6 e0f0      	LDI  R31,HIGH(23)
0000a7 15e8      	CP   R30,R8
0000a8 05f9      	CPC  R31,R9
0000a9 f419      	BRNE _0x5
                 ; 0000 002B hour=0;
0000aa 2488      	CLR  R8
0000ab 2499      	CLR  R9
                 ; 0000 002C else
0000ac c003      	RJMP _0x6
                 _0x5:
                 ; 0000 002D hour++;
0000ad 01f4      	MOVW R30,R8
0000ae 9631      	ADIW R30,1
0000af 014f      	MOVW R8,R30
                 ; 0000 002E }
                 _0x6:
                 ; 0000 002F else
0000b0 c003      	RJMP _0x7
                 _0x4:
                 ; 0000 0030 minute++;
0000b1 01f3      	MOVW R30,R6
0000b2 9631      	ADIW R30,1
0000b3 013f      	MOVW R6,R30
                 ; 0000 0031 }
                 _0x7:
                 ; 0000 0032 else
0000b4 c003      	RJMP _0x8
                 _0x3:
                 ; 0000 0033 second++;
0000b5 01f2      	MOVW R30,R4
0000b6 9631      	ADIW R30,1
0000b7 012f      	MOVW R4,R30
                 ; 0000 0034 }
                 _0x8:
0000b8 91e9      	LD   R30,Y+
0000b9 bfef      	OUT  SREG,R30
0000ba 91f9      	LD   R31,Y+
0000bb 91e9      	LD   R30,Y+
0000bc 9518      	RETI
                 ; .FEND
                 ;//===================================================================================================
                 ;// External Interrupt 0 service routine
                 ;interrupt [EXT_INT0] void ext_int0_isr(void)
                 ; 0000 0038 {
                 _ext_int0_isr:
                 ; .FSTART _ext_int0_isr
0000bd 920a      	ST   -Y,R0
0000be 921a      	ST   -Y,R1
0000bf 92fa      	ST   -Y,R15
0000c0 936a      	ST   -Y,R22
0000c1 937a      	ST   -Y,R23
0000c2 938a      	ST   -Y,R24
0000c3 939a      	ST   -Y,R25
0000c4 93aa      	ST   -Y,R26
0000c5 93ba      	ST   -Y,R27
0000c6 93ea      	ST   -Y,R30
0000c7 93fa      	ST   -Y,R31
0000c8 b7ef      	IN   R30,SREG
0000c9 93ea      	ST   -Y,R30
                 ; 0000 0039 char k;
                 ; 0000 003A k = GetKey();
0000ca 931a      	ST   -Y,R17
                 ;	k -> R17
0000cb d282      	RCALL _GetKey
0000cc 2f1e      	MOV  R17,R30
                 ; 0000 003B GICR |= (1 << INTF0);
0000cd b7eb      	IN   R30,0x3B
0000ce 64e0      	ORI  R30,0x40
0000cf bfeb      	OUT  0x3B,R30
                 ; 0000 003C if(!reset){
0000d0 91e0 02a5 	LDS  R30,_reset
0000d2 91f0 02a6 	LDS  R31,_reset+1
0000d4 9730      	SBIW R30,0
0000d5 f009      	BREQ PC+2
0000d6 c1af      	RJMP _0x9
                 ; 0000 003D         if(k != 0xFF) // dokme feshorde shod
0000d7 3f1f      	CPI  R17,255
0000d8 f409      	BRNE PC+2
0000d9 c1ab      	RJMP _0xA
                 ; 0000 003E       {
                 ; 0000 003F         if (hour < 13 || (hour ==13 && minute<=30 )){
0000da e0ed      	LDI  R30,LOW(13)
0000db e0f0      	LDI  R31,HIGH(13)
0000dc 168e      	CP   R8,R30
0000dd 069f      	CPC  R9,R31
0000de f04c      	BRLT _0xC
0000df 15e8      	CP   R30,R8
0000e0 05f9      	CPC  R31,R9
0000e1 f429      	BRNE _0xD
0000e2 e1ee      	LDI  R30,LOW(30)
0000e3 e0f0      	LDI  R31,HIGH(30)
0000e4 15e6      	CP   R30,R6
0000e5 05f7      	CPC  R31,R7
0000e6 f40c      	BRGE _0xC
                 _0xD:
0000e7 c007      	RJMP _0xB
                 _0xC:
                 ; 0000 0040             saat_yekonim = 1;
0000e8 e0e1      	LDI  R30,LOW(1)
0000e9 e0f0      	LDI  R31,HIGH(1)
0000ea 93e0 02a7 	STS  _saat_yekonim,R30
0000ec 93f0 02a8 	STS  _saat_yekonim+1,R31
                 ; 0000 0041         }else{
0000ee c005      	RJMP _0x10
                 _0xB:
                 ; 0000 0042             saat_yekonim = 0 ;
0000ef e0e0      	LDI  R30,LOW(0)
0000f0 93e0 02a7 	STS  _saat_yekonim,R30
0000f2 93e0 02a8 	STS  _saat_yekonim+1,R30
                 ; 0000 0043         }
                 _0x10:
                 ; 0000 0044       switch(k)
0000f4 2fe1      	MOV  R30,R17
0000f5 e0f0      	LDI  R31,0
                 ; 0000 0045         {
                 ; 0000 0046         case 1 :
0000f6 30e1      	CPI  R30,LOW(0x1)
0000f7 e0a0      	LDI  R26,HIGH(0x1)
0000f8 07fa      	CPC  R31,R26
0000f9 f009      	BREQ PC+2
0000fa c061      	RJMP _0x14
                 ; 0000 0047             if (saat_yekonim) {
0000fb 940e 063b 	CALL SUBOPT_0x0
0000fd f409      	BRNE PC+2
0000fe c05c      	RJMP _0x15
                 ; 0000 0048                 TotalCount += 1;
0000ff 940e 0641 	CALL SUBOPT_0x1
                 ; 0000 0049                 totalcount1_5 += 1;
000101 01f5      	MOVW R30,R10
000102 9631      	ADIW R30,1
000103 015f      	MOVW R10,R30
                 ; 0000 004A                 if(badje1 == 0){
000104 91e0 026a 	LDS  R30,_badje1
000106 91f0 026b 	LDS  R31,_badje1+1
000108 9730      	SBIW R30,0
000109 f441      	BRNE _0x16
                 ; 0000 004B                     badje1 = 1;
00010a 940e 064b 	CALL SUBOPT_0x2
                 ; 0000 004C                     nobat1_5 += 1;
                 ; 0000 004D                     namayesh = 1;
00010c 940e 0655 	CALL SUBOPT_0x3
                 ; 0000 004E                     LCD_namayesh_go_to_badje(nobat1_5, 1);
00010e e0a1      	LDI  R26,LOW(1)
00010f e0b0      	LDI  R27,0
000110 d1ee      	RCALL _LCD_namayesh_go_to_badje
                 ; 0000 004F                     namayesh = 0;
000111 c046      	RJMP _0x61
                 ; 0000 0050 
                 ; 0000 0051                 }
                 ; 0000 0052                 else if (badje2 == 0){
                 _0x16:
000112 91e0 026c 	LDS  R30,_badje2
000114 91f0 026d 	LDS  R31,_badje2+1
000116 9730      	SBIW R30,0
000117 f441      	BRNE _0x18
                 ; 0000 0053                     badje2 = 1;
000118 940e 065e 	CALL SUBOPT_0x4
                 ; 0000 0054                     nobat1_5 += 1;
                 ; 0000 0055                     namayesh = 1;
00011a 940e 0655 	CALL SUBOPT_0x3
                 ; 0000 0056                     LCD_namayesh_go_to_badje(nobat1_5, 2);
00011c e0a2      	LDI  R26,LOW(2)
00011d e0b0      	LDI  R27,0
00011e d1e0      	RCALL _LCD_namayesh_go_to_badje
                 ; 0000 0057                     namayesh = 0;
00011f c038      	RJMP _0x61
                 ; 0000 0058                 }
                 ; 0000 0059                 else if (badje3 == 0){
                 _0x18:
000120 91e0 026e 	LDS  R30,_badje3
000122 91f0 026f 	LDS  R31,_badje3+1
000124 9730      	SBIW R30,0
000125 f441      	BRNE _0x1A
                 ; 0000 005A                     badje3 = 1;
000126 940e 0668 	CALL SUBOPT_0x5
                 ; 0000 005B                     nobat1_5 += 1;
                 ; 0000 005C                     namayesh = 1;
000128 940e 0655 	CALL SUBOPT_0x3
                 ; 0000 005D                     LCD_namayesh_go_to_badje(nobat1_5, 3);
00012a e0a3      	LDI  R26,LOW(3)
00012b e0b0      	LDI  R27,0
00012c d1d2      	RCALL _LCD_namayesh_go_to_badje
                 ; 0000 005E                     namayesh = 0;
00012d c02a      	RJMP _0x61
                 ; 0000 005F                 }
                 ; 0000 0060                 else if (badje4 == 0){
                 _0x1A:
00012e 91e0 0270 	LDS  R30,_badje4
000130 91f0 0271 	LDS  R31,_badje4+1
000132 9730      	SBIW R30,0
000133 f441      	BRNE _0x1C
                 ; 0000 0061                     badje4 = 1;
000134 940e 0672 	CALL SUBOPT_0x6
                 ; 0000 0062                     nobat1_5 += 1;
                 ; 0000 0063                     namayesh = 1;
000136 940e 0655 	CALL SUBOPT_0x3
                 ; 0000 0064                     LCD_namayesh_go_to_badje(nobat1_5, 4) ;
000138 e0a4      	LDI  R26,LOW(4)
000139 e0b0      	LDI  R27,0
00013a d1c4      	RCALL _LCD_namayesh_go_to_badje
                 ; 0000 0065                     namayesh = 0;
00013b c01c      	RJMP _0x61
                 ; 0000 0066                 }
                 ; 0000 0067                 else if (badje5 == 0){
                 _0x1C:
00013c 91e0 0272 	LDS  R30,_badje5
00013e 91f0 0273 	LDS  R31,_badje5+1
000140 9730      	SBIW R30,0
000141 f441      	BRNE _0x1E
                 ; 0000 0068                     badje5 = 1;
000142 940e 067c 	CALL SUBOPT_0x7
                 ; 0000 0069                     nobat1_5 += 1;
                 ; 0000 006A                     namayesh = 1;
000144 940e 0655 	CALL SUBOPT_0x3
                 ; 0000 006B                     LCD_namayesh_go_to_badje(nobat1_5, 5);
000146 e0a5      	LDI  R26,LOW(5)
000147 e0b0      	LDI  R27,0
000148 d1b6      	RCALL _LCD_namayesh_go_to_badje
                 ; 0000 006C                     namayesh = 0;
000149 c00e      	RJMP _0x61
                 ; 0000 006D                 }
                 ; 0000 006E                 else {
                 _0x1E:
                 ; 0000 006F                     namayesh = 1;
00014a 940e 0686 	CALL SUBOPT_0x8
                 ; 0000 0070                     entezar = totalcount1_5 - nobat1_5;
00014c 01f5      	MOVW R30,R10
00014d 19ec      	SUB  R30,R12
00014e 09fd      	SBC  R31,R13
00014f 93e0 0288 	STS  _entezar,R30
000151 93f0 0289 	STS  _entezar+1,R31
                 ; 0000 0071                     LCD_namayesh_entezar(entezar);
000153 91a0 0288 	LDS  R26,_entezar
000155 91b0 0289 	LDS  R27,_entezar+1
000157 d1d3      	RCALL _LCD_namayesh_entezar
                 ; 0000 0072                     namayesh = 0;
                 _0x61:
000158 e0e0      	LDI  R30,LOW(0)
000159 940e 068d 	CALL SUBOPT_0x9
                 ; 0000 0073                 }
                 ; 0000 0074             }
                 ; 0000 0075             break;
                 _0x15:
00015b c129      	RJMP _0x13
                 ; 0000 0076         case 2 :
                 _0x14:
00015c 30e2      	CPI  R30,LOW(0x2)
00015d e0a0      	LDI  R26,HIGH(0x2)
00015e 07fa      	CPC  R31,R26
00015f f561      	BRNE _0x20
                 ; 0000 0077             if(saat_yekonim){
000160 940e 063b 	CALL SUBOPT_0x0
000162 f141      	BREQ _0x21
                 ; 0000 0078                 TotalCount += 1;
000163 940e 0641 	CALL SUBOPT_0x1
                 ; 0000 0079                 totalcount6 += 1;
000165 91e0 0260 	LDS  R30,_totalcount6
000167 91f0 0261 	LDS  R31,_totalcount6+1
000169 9631      	ADIW R30,1
00016a 93e0 0260 	STS  _totalcount6,R30
00016c 93f0 0261 	STS  _totalcount6+1,R31
                 ; 0000 007A                 if(badje6 == 0){
00016e 91e0 0274 	LDS  R30,_badje6
000170 91f0 0275 	LDS  R31,_badje6+1
000172 9730      	SBIW R30,0
000173 f461      	BRNE _0x22
                 ; 0000 007B                     badje6 = 1;
000174 940e 0692 	CALL SUBOPT_0xA
                 ; 0000 007C                     nobat6 += 1;
                 ; 0000 007D                     namayesh = 1;
000176 940e 0686 	CALL SUBOPT_0x8
                 ; 0000 007E                     LCD_namayesh_go_to_badje(nobat6, 6);
000178 940e 06a2 	CALL SUBOPT_0xB
00017a 940e 06a7 	CALL SUBOPT_0xC
                 ; 0000 007F                     namayesh = 0;
00017c e0e0      	LDI  R30,LOW(0)
00017d 940e 068d 	CALL SUBOPT_0x9
                 ; 0000 0080                 }
                 ; 0000 0081                 else {
00017f c00b      	RJMP _0x23
                 _0x22:
                 ; 0000 0082                     int entezar6 = totalcount6 - nobat6;
                 ; 0000 0083                     LCD_namayesh_entezar(entezar6);
000180 9722      	SBIW R28,2
                 ;	entezar6 -> Y+0
000181 91a0 0262 	LDS  R26,_nobat6
000183 91b0 0263 	LDS  R27,_nobat6+1
000185 91e0 0260 	LDS  R30,_totalcount6
000187 91f0 0261 	LDS  R31,_totalcount6+1
000189 940e 06ad 	CALL SUBOPT_0xD
                 ; 0000 0084                 }
                 _0x23:
                 ; 0000 0085             }
                 ; 0000 0086             break;
                 _0x21:
00018b c0f9      	RJMP _0x13
                 ; 0000 0087         case 3 :
                 _0x20:
00018c 30e3      	CPI  R30,LOW(0x3)
00018d e0a0      	LDI  R26,HIGH(0x3)
00018e 07fa      	CPC  R31,R26
00018f f561      	BRNE _0x24
                 ; 0000 0088             if(saat_yekonim){
000190 940e 063b 	CALL SUBOPT_0x0
000192 f141      	BREQ _0x25
                 ; 0000 0089                 TotalCount += 1;
000193 940e 0641 	CALL SUBOPT_0x1
                 ; 0000 008A                 totalcount7 += 1;
000195 91e0 0264 	LDS  R30,_totalcount7
000197 91f0 0265 	LDS  R31,_totalcount7+1
000199 9631      	ADIW R30,1
00019a 93e0 0264 	STS  _totalcount7,R30
00019c 93f0 0265 	STS  _totalcount7+1,R31
                 ; 0000 008B                 if(badje7 == 0){
00019e 91e0 0276 	LDS  R30,_badje7
0001a0 91f0 0277 	LDS  R31,_badje7+1
0001a2 9730      	SBIW R30,0
0001a3 f461      	BRNE _0x26
                 ; 0000 008C                     badje7 = 1;
0001a4 940e 06b7 	CALL SUBOPT_0xE
                 ; 0000 008D                     nobat7 += 1;
                 ; 0000 008E                     namayesh = 1;
0001a6 940e 0686 	CALL SUBOPT_0x8
                 ; 0000 008F                     LCD_namayesh_go_to_badje(nobat7, 7) ;
0001a8 940e 06c7 	CALL SUBOPT_0xF
0001aa 940e 06cc 	CALL SUBOPT_0x10
                 ; 0000 0090                     namayesh = 0;
0001ac e0e0      	LDI  R30,LOW(0)
0001ad 940e 068d 	CALL SUBOPT_0x9
                 ; 0000 0091                 }
                 ; 0000 0092                 else {
0001af c00b      	RJMP _0x27
                 _0x26:
                 ; 0000 0093 
                 ; 0000 0094                     int entezar7 = totalcount7 - nobat7;
                 ; 0000 0095                     LCD_namayesh_entezar(entezar7);
0001b0 9722      	SBIW R28,2
                 ;	entezar7 -> Y+0
0001b1 91a0 0266 	LDS  R26,_nobat7
0001b3 91b0 0267 	LDS  R27,_nobat7+1
0001b5 91e0 0264 	LDS  R30,_totalcount7
0001b7 91f0 0265 	LDS  R31,_totalcount7+1
0001b9 940e 06ad 	CALL SUBOPT_0xD
                 ; 0000 0096                 }
                 _0x27:
                 ; 0000 0097             }
                 ; 0000 0098             break;
                 _0x25:
0001bb c0c9      	RJMP _0x13
                 ; 0000 0099         case 9 : //badje1
                 _0x24:
0001bc 30e9      	CPI  R30,LOW(0x9)
0001bd e0a0      	LDI  R26,HIGH(0x9)
0001be 07fa      	CPC  R31,R26
0001bf f4c1      	BRNE _0x28
                 ; 0000 009A             badje1 = 0;
0001c0 940e 06d2 	CALL SUBOPT_0x11
                 ; 0000 009B             if (totalcount1_5 > nobat1_5){
                +
0001c2 14ca     +CP R12 , R10
0001c3 04db     +CPC R13 , R11
                 	__CPWRR 12,13,10,11
0001c4 f494      	BRGE _0x29
                 ; 0000 009C                 namayesh = 1;
0001c5 940e 0686 	CALL SUBOPT_0x8
                 ; 0000 009D                 d1 = nobat1_5 + 1;
0001c7 01f6      	MOVW R30,R12
0001c8 9631      	ADIW R30,1
0001c9 93e0 027a 	STS  _d1,R30
0001cb 93f0 027b 	STS  _d1+1,R31
                 ; 0000 009E                 LCD_namayesh_go_to_badje(d1, 1);
0001cd 93fa      	ST   -Y,R31
0001ce 93ea      	ST   -Y,R30
0001cf e0a1      	LDI  R26,LOW(1)
0001d0 e0b0      	LDI  R27,0
0001d1 d12d      	RCALL _LCD_namayesh_go_to_badje
                 ; 0000 009F                 badje1 = 1;
0001d2 940e 064b 	CALL SUBOPT_0x2
                 ; 0000 00A0                 nobat1_5 += 1;
                 ; 0000 00A1                 namayesh = 0;
0001d4 e0e0      	LDI  R30,LOW(0)
0001d5 940e 068d 	CALL SUBOPT_0x9
                 ; 0000 00A2             }
                 ; 0000 00A3             break;
                 _0x29:
0001d7 c0ad      	RJMP _0x13
                 ; 0000 00A4         case 8 : //badje2
                 _0x28:
0001d8 30e8      	CPI  R30,LOW(0x8)
0001d9 e0a0      	LDI  R26,HIGH(0x8)
0001da 07fa      	CPC  R31,R26
0001db f4c1      	BRNE _0x2A
                 ; 0000 00A5             badje2 = 0;
0001dc 940e 06d8 	CALL SUBOPT_0x12
                 ; 0000 00A6             if (totalcount1_5 > nobat1_5){
                +
0001de 14ca     +CP R12 , R10
0001df 04db     +CPC R13 , R11
                 	__CPWRR 12,13,10,11
0001e0 f494      	BRGE _0x2B
                 ; 0000 00A7                 namayesh = 1;
0001e1 940e 0686 	CALL SUBOPT_0x8
                 ; 0000 00A8                 d2 = nobat1_5 + 1;
0001e3 01f6      	MOVW R30,R12
0001e4 9631      	ADIW R30,1
0001e5 93e0 027c 	STS  _d2,R30
0001e7 93f0 027d 	STS  _d2+1,R31
                 ; 0000 00A9                 LCD_namayesh_go_to_badje(d2, 2);
0001e9 93fa      	ST   -Y,R31
0001ea 93ea      	ST   -Y,R30
0001eb e0a2      	LDI  R26,LOW(2)
0001ec e0b0      	LDI  R27,0
0001ed d111      	RCALL _LCD_namayesh_go_to_badje
                 ; 0000 00AA                 badje2 = 1;
0001ee 940e 065e 	CALL SUBOPT_0x4
                 ; 0000 00AB                 nobat1_5 += 1;
                 ; 0000 00AC                 namayesh = 0;
0001f0 e0e0      	LDI  R30,LOW(0)
0001f1 940e 068d 	CALL SUBOPT_0x9
                 ; 0000 00AD             }
                 ; 0000 00AE             break;
                 _0x2B:
0001f3 c091      	RJMP _0x13
                 ; 0000 00AF         case 7 : //badje3
                 _0x2A:
0001f4 30e7      	CPI  R30,LOW(0x7)
0001f5 e0a0      	LDI  R26,HIGH(0x7)
0001f6 07fa      	CPC  R31,R26
0001f7 f4c1      	BRNE _0x2C
                 ; 0000 00B0             badje3 = 0;
0001f8 940e 06de 	CALL SUBOPT_0x13
                 ; 0000 00B1             if (totalcount1_5 > nobat1_5){
                +
0001fa 14ca     +CP R12 , R10
0001fb 04db     +CPC R13 , R11
                 	__CPWRR 12,13,10,11
0001fc f494      	BRGE _0x2D
                 ; 0000 00B2                 namayesh = 1;
0001fd 940e 0686 	CALL SUBOPT_0x8
                 ; 0000 00B3                 d3 = nobat1_5 + 1;
0001ff 01f6      	MOVW R30,R12
000200 9631      	ADIW R30,1
000201 93e0 027e 	STS  _d3,R30
000203 93f0 027f 	STS  _d3+1,R31
                 ; 0000 00B4                 LCD_namayesh_go_to_badje(d3, 3);
000205 93fa      	ST   -Y,R31
000206 93ea      	ST   -Y,R30
000207 e0a3      	LDI  R26,LOW(3)
000208 e0b0      	LDI  R27,0
000209 d0f5      	RCALL _LCD_namayesh_go_to_badje
                 ; 0000 00B5                 badje3 = 1;
00020a 940e 0668 	CALL SUBOPT_0x5
                 ; 0000 00B6                 nobat1_5 += 1;
                 ; 0000 00B7                 namayesh = 0;
00020c e0e0      	LDI  R30,LOW(0)
00020d 940e 068d 	CALL SUBOPT_0x9
                 ; 0000 00B8             }
                 ; 0000 00B9             break;
                 _0x2D:
00020f c075      	RJMP _0x13
                 ; 0000 00BA         case 6 : //badje4
                 _0x2C:
000210 30e6      	CPI  R30,LOW(0x6)
000211 e0a0      	LDI  R26,HIGH(0x6)
000212 07fa      	CPC  R31,R26
000213 f4c1      	BRNE _0x2E
                 ; 0000 00BB             badje4 = 0;
000214 940e 06e4 	CALL SUBOPT_0x14
                 ; 0000 00BC             if (totalcount1_5 > nobat1_5){
                +
000216 14ca     +CP R12 , R10
000217 04db     +CPC R13 , R11
                 	__CPWRR 12,13,10,11
000218 f494      	BRGE _0x2F
                 ; 0000 00BD                 namayesh = 1;
000219 940e 0686 	CALL SUBOPT_0x8
                 ; 0000 00BE                 d4 = nobat1_5 + 1;
00021b 01f6      	MOVW R30,R12
00021c 9631      	ADIW R30,1
00021d 93e0 0280 	STS  _d4,R30
00021f 93f0 0281 	STS  _d4+1,R31
                 ; 0000 00BF                 LCD_namayesh_go_to_badje(d4, 4) ;
000221 93fa      	ST   -Y,R31
000222 93ea      	ST   -Y,R30
000223 e0a4      	LDI  R26,LOW(4)
000224 e0b0      	LDI  R27,0
000225 d0d9      	RCALL _LCD_namayesh_go_to_badje
                 ; 0000 00C0                 badje4 = 1;
000226 940e 0672 	CALL SUBOPT_0x6
                 ; 0000 00C1                 nobat1_5 += 1;
                 ; 0000 00C2                 namayesh = 0;
000228 e0e0      	LDI  R30,LOW(0)
000229 940e 068d 	CALL SUBOPT_0x9
                 ; 0000 00C3             }
                 ; 0000 00C4             break;
                 _0x2F:
00022b c059      	RJMP _0x13
                 ; 0000 00C5         case 5 : //badje5
                 _0x2E:
00022c 30e5      	CPI  R30,LOW(0x5)
00022d e0a0      	LDI  R26,HIGH(0x5)
00022e 07fa      	CPC  R31,R26
00022f f4c1      	BRNE _0x30
                 ; 0000 00C6             badje5 = 0;
000230 940e 06ea 	CALL SUBOPT_0x15
                 ; 0000 00C7             if (totalcount1_5 > nobat1_5){
                +
000232 14ca     +CP R12 , R10
000233 04db     +CPC R13 , R11
                 	__CPWRR 12,13,10,11
000234 f494      	BRGE _0x31
                 ; 0000 00C8                 namayesh = 1;
000235 940e 0686 	CALL SUBOPT_0x8
                 ; 0000 00C9                 d5 = nobat1_5 + 1;
000237 01f6      	MOVW R30,R12
000238 9631      	ADIW R30,1
000239 93e0 0282 	STS  _d5,R30
00023b 93f0 0283 	STS  _d5+1,R31
                 ; 0000 00CA                 LCD_namayesh_go_to_badje(d5, 5);
00023d 93fa      	ST   -Y,R31
00023e 93ea      	ST   -Y,R30
00023f e0a5      	LDI  R26,LOW(5)
000240 e0b0      	LDI  R27,0
000241 d0bd      	RCALL _LCD_namayesh_go_to_badje
                 ; 0000 00CB                 badje5 = 1;
000242 940e 067c 	CALL SUBOPT_0x7
                 ; 0000 00CC                 nobat1_5 += 1;
                 ; 0000 00CD                 namayesh = 0;
000244 e0e0      	LDI  R30,LOW(0)
000245 940e 068d 	CALL SUBOPT_0x9
                 ; 0000 00CE             }
                 ; 0000 00CF             break;
                 _0x31:
000247 c03d      	RJMP _0x13
                 ; 0000 00D0         case 4 : //badje6
                 _0x30:
000248 30e4      	CPI  R30,LOW(0x4)
000249 e0a0      	LDI  R26,HIGH(0x4)
00024a 07fa      	CPC  R31,R26
00024b f4e1      	BRNE _0x32
                 ; 0000 00D1             badje6 = 0;
00024c 940e 06f0 	CALL SUBOPT_0x16
                 ; 0000 00D2             if (totalcount6 > nobat6){
00024e 940e 06a2 	CALL SUBOPT_0xB
000250 91a0 0260 	LDS  R26,_totalcount6
000252 91b0 0261 	LDS  R27,_totalcount6+1
000254 17ea      	CP   R30,R26
000255 07fb      	CPC  R31,R27
000256 f484      	BRGE _0x33
                 ; 0000 00D3                 namayesh = 1;
000257 940e 0686 	CALL SUBOPT_0x8
                 ; 0000 00D4                 d6 = nobat6 + 1;
000259 940e 06a2 	CALL SUBOPT_0xB
00025b 9631      	ADIW R30,1
00025c 93e0 0284 	STS  _d6,R30
00025e 93f0 0285 	STS  _d6+1,R31
                 ; 0000 00D5                 LCD_namayesh_go_to_badje(d6, 6);
000260 940e 06a7 	CALL SUBOPT_0xC
                 ; 0000 00D6                 badje6 = 1;
000262 940e 0692 	CALL SUBOPT_0xA
                 ; 0000 00D7                 nobat6 += 1;
                 ; 0000 00D8                 namayesh = 0;
000264 e0e0      	LDI  R30,LOW(0)
000265 940e 068d 	CALL SUBOPT_0x9
                 ; 0000 00D9             }
                 ; 0000 00DA             break;
                 _0x33:
000267 c01d      	RJMP _0x13
                 ; 0000 00DB         case 0 : //badje7
                 _0x32:
000268 9730      	SBIW R30,0
000269 f4d9      	BRNE _0x13
                 ; 0000 00DC             badje7 = 0;
00026a 940e 06f6 	CALL SUBOPT_0x17
                 ; 0000 00DD             if (totalcount7 > nobat7){
00026c 940e 06c7 	CALL SUBOPT_0xF
00026e 91a0 0264 	LDS  R26,_totalcount7
000270 91b0 0265 	LDS  R27,_totalcount7+1
000272 17ea      	CP   R30,R26
000273 07fb      	CPC  R31,R27
000274 f484      	BRGE _0x35
                 ; 0000 00DE                 namayesh = 1;
000275 940e 0686 	CALL SUBOPT_0x8
                 ; 0000 00DF                 d7 = nobat7 + 1;
000277 940e 06c7 	CALL SUBOPT_0xF
000279 9631      	ADIW R30,1
00027a 93e0 0286 	STS  _d7,R30
00027c 93f0 0287 	STS  _d7+1,R31
                 ; 0000 00E0                 LCD_namayesh_go_to_badje(d7, 7);
00027e 940e 06cc 	CALL SUBOPT_0x10
                 ; 0000 00E1                 badje7 = 1;
000280 940e 06b7 	CALL SUBOPT_0xE
                 ; 0000 00E2                 nobat7 += 1;
                 ; 0000 00E3                 namayesh = 0;
000282 e0e0      	LDI  R30,LOW(0)
000283 940e 068d 	CALL SUBOPT_0x9
                 ; 0000 00E4             }
                 ; 0000 00E5             break;
                 _0x35:
                 ; 0000 00E6 
                 ; 0000 00E7         }
                 _0x13:
                 ; 0000 00E8       }
                 ; 0000 00E9 
                 ; 0000 00EA         }
                 _0xA:
                 ; 0000 00EB         else{
000285 c011      	RJMP _0x36
                 _0x9:
                 ; 0000 00EC             totalcount1_5 = 0, nobat1_5 = 0;
000286 940e 06fc 	CALL SUBOPT_0x18
                 ; 0000 00ED             totalcount6 = 0, nobat6 = 0;
                 ; 0000 00EE             totalcount7 = 0, nobat7 = 0;
                 ; 0000 00EF             TotalCount = 0;
                 ; 0000 00F0             badje1 = 0, badje2 = 0, badje3 = 0, badje4 = 0, badje5 = 0, badje6 = 0, badje7 = 0;
000288 940e 06d8 	CALL SUBOPT_0x12
00028a 940e 06de 	CALL SUBOPT_0x13
00028c 940e 06e4 	CALL SUBOPT_0x14
00028e 940e 06ea 	CALL SUBOPT_0x15
000290 940e 06f0 	CALL SUBOPT_0x16
000292 940e 06f6 	CALL SUBOPT_0x17
                 ; 0000 00F1             namayesh = 0;
000294 e0e0      	LDI  R30,LOW(0)
000295 940e 068d 	CALL SUBOPT_0x9
                 ; 0000 00F2             //tanzimat saat
                 ; 0000 00F3         }
                 _0x36:
                 ; 0000 00F4     }
000297 9119      	LD   R17,Y+
000298 91e9      	LD   R30,Y+
000299 bfef      	OUT  SREG,R30
00029a 91f9      	LD   R31,Y+
00029b 91e9      	LD   R30,Y+
00029c 91b9      	LD   R27,Y+
00029d 91a9      	LD   R26,Y+
00029e 9199      	LD   R25,Y+
00029f 9189      	LD   R24,Y+
0002a0 9179      	LD   R23,Y+
0002a1 9169      	LD   R22,Y+
0002a2 90f9      	LD   R15,Y+
0002a3 9019      	LD   R1,Y+
0002a4 9009      	LD   R0,Y+
0002a5 9518      	RETI
                 ; .FEND
                 ;
                 ;
                 ;//*************************************************************************************************
                 ;void main(void)
                 ; 0000 00F9 {
                 _main:
                 ; .FSTART _main
                 ; 0000 00FA DDRB = 0xFF;
0002a6 efef      	LDI  R30,LOW(255)
0002a7 bbe7      	OUT  0x17,R30
                 ; 0000 00FB PORTB = 0x00;
0002a8 e0e0      	LDI  R30,LOW(0)
0002a9 bbe8      	OUT  0x18,R30
                 ; 0000 00FC DDRC = 0xF0;
0002aa efe0      	LDI  R30,LOW(240)
0002ab bbe4      	OUT  0x14,R30
                 ; 0000 00FD PORTC = 0x0F;
0002ac e0ef      	LDI  R30,LOW(15)
0002ad bbe5      	OUT  0x15,R30
                 ; 0000 00FE // External Interrupt(s) initialization
                 ; 0000 00FF // INT0: On
                 ; 0000 0100 // INT0 Mode: Falling Edge
                 ; 0000 0101 // INT1: Off
                 ; 0000 0102 // INT2: Off
                 ; 0000 0103 GICR|=(0<<INT1) | (1<<INT0) | (0<<INT2);
0002ae b7eb      	IN   R30,0x3B
0002af 64e0      	ORI  R30,0x40
0002b0 bfeb      	OUT  0x3B,R30
                 ; 0000 0104 MCUCR=(0<<ISC11) | (0<<ISC10) | (1<<ISC01) | (0<<ISC00);
0002b1 e0e2      	LDI  R30,LOW(2)
0002b2 bfe5      	OUT  0x35,R30
                 ; 0000 0105 MCUCSR=(0<<ISC2);
0002b3 e0e0      	LDI  R30,LOW(0)
0002b4 bfe4      	OUT  0x34,R30
                 ; 0000 0106 GIFR=(0<<INTF1) | (1<<INTF0) | (0<<INTF2);
0002b5 e4e0      	LDI  R30,LOW(64)
0002b6 bfea      	OUT  0x3A,R30
                 ; 0000 0107 ////==============================================timer initiallize
                 ; 0000 0108 // Timer/Counter 1 initialization
                 ; 0000 0109 // Clock source: System Clock
                 ; 0000 010A // Clock value: 31/250 kHz
                 ; 0000 010B // Mode: Normal top=0xFFFF
                 ; 0000 010C // OC1A output: Disconnected
                 ; 0000 010D // OC1B output: Disconnected
                 ; 0000 010E // Noise Canceler: Off
                 ; 0000 010F // Input Capture on Falling Edge
                 ; 0000 0110 // Timer Period: 1 s
                 ; 0000 0111 // Timer1 Overflow Interrupt: On
                 ; 0000 0112 // Input Capture Interrupt: Off
                 ; 0000 0113 // Compare A Match Interrupt: Off
                 ; 0000 0114 // Compare B Match Interrupt: Off
                 ; 0000 0115 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
0002b7 e0e0      	LDI  R30,LOW(0)
0002b8 bdef      	OUT  0x2F,R30
                 ; 0000 0116 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (1<<CS12) | (0<<CS11) | (0<<CS10);
0002b9 e0e4      	LDI  R30,LOW(4)
0002ba bdee      	OUT  0x2E,R30
                 ; 0000 0117 TCNT1H=0x85;
0002bb e8e5      	LDI  R30,LOW(133)
0002bc bded      	OUT  0x2D,R30
                 ; 0000 0118 TCNT1L=0xEE;
0002bd eeee      	LDI  R30,LOW(238)
0002be bdec      	OUT  0x2C,R30
                 ; 0000 0119 ICR1H=0x00;
0002bf e0e0      	LDI  R30,LOW(0)
0002c0 bde7      	OUT  0x27,R30
                 ; 0000 011A ICR1L=0x00;
0002c1 bde6      	OUT  0x26,R30
                 ; 0000 011B OCR1AH=0x00;
0002c2 bdeb      	OUT  0x2B,R30
                 ; 0000 011C OCR1AL=0x00;
0002c3 bdea      	OUT  0x2A,R30
                 ; 0000 011D OCR1BH=0x00;
0002c4 bde9      	OUT  0x29,R30
                 ; 0000 011E OCR1BL=0x00;
0002c5 bde8      	OUT  0x28,R30
                 ; 0000 011F // Global enable interrupts
                 ; 0000 0120 #asm("sei")
0002c6 9478      	sei
                 ; 0000 0121 //============================================================
                 ; 0000 0122 totalcount1_5 = 0, nobat1_5 = 0;
0002c7 940e 06fc 	CALL SUBOPT_0x18
                 ; 0000 0123 totalcount6 = 0, nobat6 = 0;
                 ; 0000 0124 totalcount7 = 0, nobat7 = 0;
                 ; 0000 0125 TotalCount = 0;
                 ; 0000 0126 badje1 = 0, badje2 = 0, badje3 = 0, badje4 = 0, badje5 = 0, badje6 = 0, badje7 = 0;
0002c9 940e 06d8 	CALL SUBOPT_0x12
0002cb 940e 06de 	CALL SUBOPT_0x13
0002cd 940e 06e4 	CALL SUBOPT_0x14
0002cf 940e 06ea 	CALL SUBOPT_0x15
0002d1 940e 06f0 	CALL SUBOPT_0x16
0002d3 940e 06f6 	CALL SUBOPT_0x17
                 ; 0000 0127 namayesh = 0;
0002d5 e0e0      	LDI  R30,LOW(0)
0002d6 940e 068d 	CALL SUBOPT_0x9
                 ; 0000 0128 saat_yekonim = 0;
0002d8 e0e0      	LDI  R30,LOW(0)
0002d9 93e0 02a7 	STS  _saat_yekonim,R30
0002db 93e0 02a8 	STS  _saat_yekonim+1,R30
                 ; 0000 0129 lcd_init(16);
0002dd e1a0      	LDI  R26,LOW(16)
0002de 940e 060c 	CALL _lcd_init
                 ; 0000 012A second = 0 ;
0002e0 2444      	CLR  R4
0002e1 2455      	CLR  R5
                 ; 0000 012B //======================================================================================
                 ; 0000 012C while (1)
                 _0x37:
                 ; 0000 012D     {
                 ; 0000 012E      sprintf(lcd_buffer,"Clock: %d:%d:%d",hour,minute,second);
0002e2 ebe3      	LDI  R30,LOW(_lcd_buffer)
0002e3 e0f2      	LDI  R31,HIGH(_lcd_buffer)
0002e4 93fa      	ST   -Y,R31
0002e5 93ea      	ST   -Y,R30
                +
0002e6 e6ea     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0002e7 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0002e8 93fa      	ST   -Y,R31
0002e9 93ea      	ST   -Y,R30
0002ea 01f4      	MOVW R30,R8
0002eb 940e 0716 	CALL SUBOPT_0x19
0002ed 01f3      	MOVW R30,R6
0002ee 940e 0716 	CALL SUBOPT_0x19
0002f0 01f2      	MOVW R30,R4
0002f1 940e 0716 	CALL SUBOPT_0x19
0002f3 e08c      	LDI  R24,12
0002f4 940e 0510 	CALL _sprintf
0002f6 9660      	ADIW R28,16
                 ; 0000 012F       lcd_gotoxy(0,0);
0002f7 940e 071b 	CALL SUBOPT_0x1A
                 ; 0000 0130       lcd_puts(lcd_buffer);
0002f9 eba3      	LDI  R26,LOW(_lcd_buffer)
0002fa e0b2      	LDI  R27,HIGH(_lcd_buffer)
0002fb 940e 0720 	CALL SUBOPT_0x1B
                 ; 0000 0131       delay_ms(1000);
                 ; 0000 0132       lcd_clear();
                 ; 0000 0133 }
0002fd cfe4      	RJMP _0x37
                 ; 0000 0134 }
                 _0x3A:
0002fe cfff      	RJMP _0x3A
                 ; .FEND
                 ;//========================================================================================
                 ;void LCD_namayesh_go_to_badje (int a, int b){
                 ; 0000 0136 void LCD_namayesh_go_to_badje (int a, int b){
                 _LCD_namayesh_go_to_badje:
                 ; .FSTART _LCD_namayesh_go_to_badje
                 ; 0000 0137     lcd_clear();
0002ff 93ba      	ST   -Y,R27
000300 93aa      	ST   -Y,R26
                 ;	a -> Y+2
                 ;	b -> Y+0
000301 940e 05bc 	CALL _lcd_clear
                 ; 0000 0138     str1[10];
                +
000303 91e0 02b3+LDS R30 , _str1 + ( 10 )
                 	__GETB1MN _str1,10
                 ; 0000 0139     itoa(a, str1);
000305 81ea      	LDD  R30,Y+2
000306 81fb      	LDD  R31,Y+2+1
000307 93fa      	ST   -Y,R31
000308 93ea      	ST   -Y,R30
000309 eaa9      	LDI  R26,LOW(_str1)
00030a e0b2      	LDI  R27,HIGH(_str1)
00030b 940e 055d 	CALL _itoa
                 ; 0000 013A     lcd_gotoxy(0, 0);
00030d 940e 071b 	CALL SUBOPT_0x1A
                 ; 0000 013B     lcd_puts(str1);
00030f eaa9      	LDI  R26,LOW(_str1)
000310 e0b2      	LDI  R27,HIGH(_str1)
000311 940e 05ea 	CALL _lcd_puts
                 ; 0000 013C     lcd_gotoxy(5, 0);
000313 e0e5      	LDI  R30,LOW(5)
000314 940e 0728 	CALL SUBOPT_0x1C
                 ; 0000 013D     lcd_putsf("go to badje : ");
                +
000316 e7aa     +LDI R26 , LOW ( 2 * _0x0 + ( 16 ) )
000317 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 16 ) )
                 	__POINTW2FN _0x0,16
000318 940e 05f9 	CALL _lcd_putsf
                 ; 0000 013E     itoa(b, str2);
00031a 81e8      	LD   R30,Y
00031b 81f9      	LDD  R31,Y+1
00031c 93fa      	ST   -Y,R31
00031d 93ea      	ST   -Y,R30
00031e e8aa      	LDI  R26,LOW(_str2)
00031f e0b2      	LDI  R27,HIGH(_str2)
000320 940e 055d 	CALL _itoa
                 ; 0000 013F     lcd_gotoxy(15, 0);
000322 e0ef      	LDI  R30,LOW(15)
000323 940e 0728 	CALL SUBOPT_0x1C
                 ; 0000 0140     lcd_puts(str2);
000325 e8aa      	LDI  R26,LOW(_str2)
000326 e0b2      	LDI  R27,HIGH(_str2)
000327 940e 0720 	CALL SUBOPT_0x1B
                 ; 0000 0141     delay_ms(1000);
                 ; 0000 0142     lcd_clear();
                 ; 0000 0143 }
000329 9624      	ADIW R28,4
00032a 9508      	RET
                 ; .FEND
                 ;//==========================================================================================
                 ;void LCD_namayesh_entezar (int a){
                 ; 0000 0145 void LCD_namayesh_entezar (int a){
                 _LCD_namayesh_entezar:
                 ; .FSTART _LCD_namayesh_entezar
                 ; 0000 0146     lcd_clear();
00032b 93ba      	ST   -Y,R27
00032c 93aa      	ST   -Y,R26
                 ;	a -> Y+0
00032d 940e 05bc 	CALL _lcd_clear
                 ; 0000 0147     str3[17];
                +
00032f 91e0 02a5+LDS R30 , _str3 + ( 17 )
                 	__GETB1MN _str3,17
                 ; 0000 0148     itoa(a, str3);
000331 81e8      	LD   R30,Y
000332 81f9      	LDD  R31,Y+1
000333 93fa      	ST   -Y,R31
000334 93ea      	ST   -Y,R30
000335 e9a4      	LDI  R26,LOW(_str3)
000336 e0b2      	LDI  R27,HIGH(_str3)
000337 940e 055d 	CALL _itoa
                 ; 0000 0149     lcd_gotoxy(0, 0);
000339 940e 071b 	CALL SUBOPT_0x1A
                 ; 0000 014A     lcd_puts(str1);
00033b eaa9      	LDI  R26,LOW(_str1)
00033c e0b2      	LDI  R27,HIGH(_str1)
00033d 940e 05ea 	CALL _lcd_puts
                 ; 0000 014B     lcd_gotoxy(4, 0);
00033f e0e4      	LDI  R30,LOW(4)
000340 940e 0728 	CALL SUBOPT_0x1C
                 ; 0000 014C     lcd_putsf(" nafar joloye shoma hastand");
                +
000342 e8a9     +LDI R26 , LOW ( 2 * _0x0 + ( 31 ) )
000343 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 31 ) )
                 	__POINTW2FN _0x0,31
000344 940e 05f9 	CALL _lcd_putsf
                 ; 0000 014D     delay_ms(500);
000346 efa4      	LDI  R26,LOW(500)
000347 e0b1      	LDI  R27,HIGH(500)
000348 940e 0771 	CALL _delay_ms
                 ; 0000 014E     lcd_clear();
00034a 940e 05bc 	CALL _lcd_clear
                 ; 0000 014F }
00034c 940c 05ba 	JMP  _0x20C0003
                 ; .FEND
                 ;//=========================================================================================
                 ;
                 ;
                 ;//=========================================================================================
                 ;char GetKey()
                 ; 0000 0155 {
                 _GetKey:
                 ; .FSTART _GetKey
                 ; 0000 0156 unsigned char key_code = 0xFF;
                 ; 0000 0157 unsigned char columns;
                 ; 0000 0158 
                 ; 0000 0159 PORTC = 0xFF;
00034e 931a      	ST   -Y,R17
00034f 930a      	ST   -Y,R16
                 ;	key_code -> R17
                 ;	columns -> R16
000350 ef1f      	LDI  R17,255
000351 efef      	LDI  R30,LOW(255)
000352 bbe5      	OUT  0x15,R30
                 ; 0000 015A // first row
                 ; 0000 015B PORTC.4 = 0;
000353 98ac      	CBI  0x15,4
                 ; 0000 015C columns = PINC & 0x07;
000354 940e 072c 	CALL SUBOPT_0x1D
                 ; 0000 015D if(columns != 0x07)
000356 f081      	BREQ _0x3D
                 ; 0000 015E   {
                 ; 0000 015F   switch(columns)
000357 940e 0731 	CALL SUBOPT_0x1E
                 ; 0000 0160     {
                 ; 0000 0161     case 0b110 : key_code = 1; break;
000359 f411      	BRNE _0x41
00035a e011      	LDI  R17,LOW(1)
00035b c00b      	RJMP _0x40
                 ; 0000 0162     case 0b101 : key_code = 2; break;
                 _0x41:
00035c 30e5      	CPI  R30,LOW(0x5)
00035d e0a0      	LDI  R26,HIGH(0x5)
00035e 07fa      	CPC  R31,R26
00035f f411      	BRNE _0x42
000360 e012      	LDI  R17,LOW(2)
000361 c005      	RJMP _0x40
                 ; 0000 0163     case 0b011 : key_code = 3; break;
                 _0x42:
000362 30e3      	CPI  R30,LOW(0x3)
000363 e0a0      	LDI  R26,HIGH(0x3)
000364 07fa      	CPC  R31,R26
000365 f409      	BRNE _0x40
000366 e013      	LDI  R17,LOW(3)
                 ; 0000 0164     }
                 _0x40:
                 ; 0000 0165   }
                 ; 0000 0166 PORTC.4 = 1;
                 _0x3D:
000367 9aac      	SBI  0x15,4
                 ; 0000 0167 // second row
                 ; 0000 0168 PORTC.5 = 0;
000368 98ad      	CBI  0x15,5
                 ; 0000 0169 columns = PINC & 0x07;
000369 940e 072c 	CALL SUBOPT_0x1D
                 ; 0000 016A if(columns != 0x07)
00036b f081      	BREQ _0x48
                 ; 0000 016B   {
                 ; 0000 016C   switch(columns)
00036c 940e 0731 	CALL SUBOPT_0x1E
                 ; 0000 016D     {
                 ; 0000 016E     case 0b110 : key_code = 4; break;
00036e f411      	BRNE _0x4C
00036f e014      	LDI  R17,LOW(4)
000370 c00b      	RJMP _0x4B
                 ; 0000 016F     case 0b101 : key_code = 5; break;
                 _0x4C:
000371 30e5      	CPI  R30,LOW(0x5)
000372 e0a0      	LDI  R26,HIGH(0x5)
000373 07fa      	CPC  R31,R26
000374 f411      	BRNE _0x4D
000375 e015      	LDI  R17,LOW(5)
000376 c005      	RJMP _0x4B
                 ; 0000 0170     case 0b011 : key_code = 6; break;
                 _0x4D:
000377 30e3      	CPI  R30,LOW(0x3)
000378 e0a0      	LDI  R26,HIGH(0x3)
000379 07fa      	CPC  R31,R26
00037a f409      	BRNE _0x4B
00037b e016      	LDI  R17,LOW(6)
                 ; 0000 0171     }
                 _0x4B:
                 ; 0000 0172   }
                 ; 0000 0173 PORTC.5 = 1;
                 _0x48:
00037c 9aad      	SBI  0x15,5
                 ; 0000 0174 // third row
                 ; 0000 0175 PORTC.6 = 0;
00037d 98ae      	CBI  0x15,6
                 ; 0000 0176 columns = PINC & 0x07;
00037e 940e 072c 	CALL SUBOPT_0x1D
                 ; 0000 0177 if(columns != 0x07)
000380 f081      	BREQ _0x53
                 ; 0000 0178   {
                 ; 0000 0179   switch(columns)
000381 940e 0731 	CALL SUBOPT_0x1E
                 ; 0000 017A     {
                 ; 0000 017B     case 0b110 : key_code = 7; break;
000383 f411      	BRNE _0x57
000384 e017      	LDI  R17,LOW(7)
000385 c00b      	RJMP _0x56
                 ; 0000 017C     case 0b101 : key_code = 8; break;
                 _0x57:
000386 30e5      	CPI  R30,LOW(0x5)
000387 e0a0      	LDI  R26,HIGH(0x5)
000388 07fa      	CPC  R31,R26
000389 f411      	BRNE _0x58
00038a e018      	LDI  R17,LOW(8)
00038b c005      	RJMP _0x56
                 ; 0000 017D     case 0b011 : key_code = 9; break;
                 _0x58:
00038c 30e3      	CPI  R30,LOW(0x3)
00038d e0a0      	LDI  R26,HIGH(0x3)
00038e 07fa      	CPC  R31,R26
00038f f409      	BRNE _0x56
000390 e019      	LDI  R17,LOW(9)
                 ; 0000 017E     }
                 _0x56:
                 ; 0000 017F   }
                 ; 0000 0180 PORTC.6 = 1;
                 _0x53:
000391 9aae      	SBI  0x15,6
                 ; 0000 0181 // fourth row
                 ; 0000 0182 PORTC.7 = 0;
000392 98af      	CBI  0x15,7
                 ; 0000 0183 if(!PINC.1) key_code = 0;
000393 9b99      	SBIS 0x13,1
000394 e010      	LDI  R17,LOW(0)
                 ; 0000 0184 PORTC.7 = 1;
000395 9aaf      	SBI  0x15,7
                 ; 0000 0185 
                 ; 0000 0186 PORTC = 0x0F;
000396 e0ef      	LDI  R30,LOW(15)
000397 bbe5      	OUT  0x15,R30
                 ; 0000 0187 return key_code;
000398 2fe1      	MOV  R30,R17
000399 9109      	LD   R16,Y+
00039a 9119      	LD   R17,Y+
00039b 9508      	RET
                 ; 0000 0188 }
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
00039c 93ba      	ST   -Y,R27
00039d 93aa      	ST   -Y,R26
00039e 931a      	ST   -Y,R17
00039f 930a      	ST   -Y,R16
0003a0 81aa      	LDD  R26,Y+2
0003a1 81bb      	LDD  R27,Y+2+1
0003a2 9612      	ADIW R26,2
0003a3 940e 0788 	CALL __GETW1P
0003a5 9730      	SBIW R30,0
0003a6 f159      	BREQ _0x2000010
0003a7 81aa      	LDD  R26,Y+2
0003a8 81bb      	LDD  R27,Y+2+1
0003a9 9614      	ADIW R26,4
0003aa 940e 0788 	CALL __GETW1P
0003ac 018f      	MOVW R16,R30
0003ad 9730      	SBIW R30,0
0003ae f061      	BREQ _0x2000012
                +
0003af 3002     +CPI R16 , LOW ( 2 )
0003b0 e0e0     +LDI R30 , HIGH ( 2 )
0003b1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0003b2 f098      	BRLO _0x2000013
0003b3 01f8      	MOVW R30,R16
0003b4 9731      	SBIW R30,1
0003b5 018f      	MOVW R16,R30
                +
0003b6 81aa     +LDD R26 , Y + 2
0003b7 81bb     +LDD R27 , Y + 2 + 1
0003b8 9614     +ADIW R26 , 4
0003b9 93ed     +ST X + , R30
0003ba 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
0003bb 81aa      	LDD  R26,Y+2
0003bc 81bb      	LDD  R27,Y+2+1
0003bd 9612      	ADIW R26,2
0003be 91ed      	LD   R30,X+
0003bf 91fd      	LD   R31,X+
0003c0 9631      	ADIW R30,1
0003c1 93fe      	ST   -X,R31
0003c2 93ee      	ST   -X,R30
0003c3 9731      	SBIW R30,1
0003c4 81ac      	LDD  R26,Y+4
0003c5 83a0      	STD  Z+0,R26
                 _0x2000013:
0003c6 81aa      	LDD  R26,Y+2
0003c7 81bb      	LDD  R27,Y+2+1
0003c8 940e 0788 	CALL __GETW1P
0003ca 23ff      	TST  R31
0003cb f02a      	BRMI _0x2000014
0003cc 91ed      	LD   R30,X+
0003cd 91fd      	LD   R31,X+
0003ce 9631      	ADIW R30,1
0003cf 93fe      	ST   -X,R31
0003d0 93ee      	ST   -X,R30
                 _0x2000014:
0003d1 c006      	RJMP _0x2000015
                 _0x2000010:
0003d2 81aa      	LDD  R26,Y+2
0003d3 81bb      	LDD  R27,Y+2+1
0003d4 efef      	LDI  R30,LOW(65535)
0003d5 efff      	LDI  R31,HIGH(65535)
0003d6 93ed      	ST   X+,R30
0003d7 93fc      	ST   X,R31
                 _0x2000015:
0003d8 8119      	LDD  R17,Y+1
0003d9 8108      	LDD  R16,Y+0
0003da 9625      	ADIW R28,5
0003db 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0003dc 93ba      	ST   -Y,R27
0003dd 93aa      	ST   -Y,R26
0003de 9726      	SBIW R28,6
0003df 940e 0795 	CALL __SAVELOCR6
0003e1 e010      	LDI  R17,0
0003e2 85ac      	LDD  R26,Y+12
0003e3 85bd      	LDD  R27,Y+12+1
0003e4 e0e0      	LDI  R30,LOW(0)
0003e5 e0f0      	LDI  R31,HIGH(0)
0003e6 93ed      	ST   X+,R30
0003e7 93fc      	ST   X,R31
                 _0x2000016:
0003e8 89ea      	LDD  R30,Y+18
0003e9 89fb      	LDD  R31,Y+18+1
0003ea 9631      	ADIW R30,1
0003eb 8bea      	STD  Y+18,R30
0003ec 8bfb      	STD  Y+18+1,R31
0003ed 9731      	SBIW R30,1
0003ee 91e4      	LPM  R30,Z
0003ef 2f2e      	MOV  R18,R30
0003f0 30e0      	CPI  R30,0
0003f1 f409      	BRNE PC+2
0003f2 c115      	RJMP _0x2000018
0003f3 2fe1      	MOV  R30,R17
0003f4 30e0      	CPI  R30,0
0003f5 f439      	BRNE _0x200001C
0003f6 3225      	CPI  R18,37
0003f7 f411      	BRNE _0x200001D
0003f8 e011      	LDI  R17,LOW(1)
0003f9 c002      	RJMP _0x200001E
                 _0x200001D:
0003fa 940e 0737 	CALL SUBOPT_0x1F
                 _0x200001E:
0003fc c10a      	RJMP _0x200001B
                 _0x200001C:
0003fd 30e1      	CPI  R30,LOW(0x1)
0003fe f4a9      	BRNE _0x200001F
0003ff 3225      	CPI  R18,37
000400 f419      	BRNE _0x2000020
000401 940e 0737 	CALL SUBOPT_0x1F
000403 c102      	RJMP _0x20000CC
                 _0x2000020:
000404 e012      	LDI  R17,LOW(2)
000405 e040      	LDI  R20,LOW(0)
000406 e000      	LDI  R16,LOW(0)
000407 322d      	CPI  R18,45
000408 f411      	BRNE _0x2000021
000409 e001      	LDI  R16,LOW(1)
00040a c0fc      	RJMP _0x200001B
                 _0x2000021:
00040b 322b      	CPI  R18,43
00040c f411      	BRNE _0x2000022
00040d e24b      	LDI  R20,LOW(43)
00040e c0f8      	RJMP _0x200001B
                 _0x2000022:
00040f 3220      	CPI  R18,32
000410 f411      	BRNE _0x2000023
000411 e240      	LDI  R20,LOW(32)
000412 c0f4      	RJMP _0x200001B
                 _0x2000023:
000413 c002      	RJMP _0x2000024
                 _0x200001F:
000414 30e2      	CPI  R30,LOW(0x2)
000415 f439      	BRNE _0x2000025
                 _0x2000024:
000416 e050      	LDI  R21,LOW(0)
000417 e013      	LDI  R17,LOW(3)
000418 3320      	CPI  R18,48
000419 f411      	BRNE _0x2000026
00041a 6800      	ORI  R16,LOW(128)
00041b c0eb      	RJMP _0x200001B
                 _0x2000026:
00041c c003      	RJMP _0x2000027
                 _0x2000025:
00041d 30e3      	CPI  R30,LOW(0x3)
00041e f009      	BREQ PC+2
00041f c0e7      	RJMP _0x200001B
                 _0x2000027:
000420 3320      	CPI  R18,48
000421 f010      	BRLO _0x200002A
000422 332a      	CPI  R18,58
000423 f008      	BRLO _0x200002B
                 _0x200002A:
000424 c007      	RJMP _0x2000029
                 _0x200002B:
000425 e0aa      	LDI  R26,LOW(10)
000426 9f5a      	MUL  R21,R26
000427 2d50      	MOV  R21,R0
000428 2fe2      	MOV  R30,R18
000429 53e0      	SUBI R30,LOW(48)
00042a 0f5e      	ADD  R21,R30
00042b c0db      	RJMP _0x200001B
                 _0x2000029:
00042c 2fe2      	MOV  R30,R18
00042d 36e3      	CPI  R30,LOW(0x63)
00042e f449      	BRNE _0x200002F
00042f 940e 073e 	CALL SUBOPT_0x20
000431 89e8      	LDD  R30,Y+16
000432 89f9      	LDD  R31,Y+16+1
000433 81a4      	LDD  R26,Z+4
000434 93aa      	ST   -Y,R26
000435 940e 0744 	CALL SUBOPT_0x21
000437 c0ce      	RJMP _0x2000030
                 _0x200002F:
000438 37e3      	CPI  R30,LOW(0x73)
000439 f441      	BRNE _0x2000032
00043a 940e 073e 	CALL SUBOPT_0x20
00043c 940e 074a 	CALL SUBOPT_0x22
00043e 940e 0544 	CALL _strlen
000440 2f1e      	MOV  R17,R30
000441 c00a      	RJMP _0x2000033
                 _0x2000032:
000442 37e0      	CPI  R30,LOW(0x70)
000443 f461      	BRNE _0x2000035
000444 940e 073e 	CALL SUBOPT_0x20
000446 940e 074a 	CALL SUBOPT_0x22
000448 940e 0550 	CALL _strlenf
00044a 2f1e      	MOV  R17,R30
00044b 6008      	ORI  R16,LOW(8)
                 _0x2000033:
00044c 6002      	ORI  R16,LOW(2)
00044d 770f      	ANDI R16,LOW(127)
00044e e030      	LDI  R19,LOW(0)
00044f c034      	RJMP _0x2000036
                 _0x2000035:
000450 36e4      	CPI  R30,LOW(0x64)
000451 f011      	BREQ _0x2000039
000452 36e9      	CPI  R30,LOW(0x69)
000453 f411      	BRNE _0x200003A
                 _0x2000039:
000454 6004      	ORI  R16,LOW(4)
000455 c002      	RJMP _0x200003B
                 _0x200003A:
000456 37e5      	CPI  R30,LOW(0x75)
000457 f431      	BRNE _0x200003C
                 _0x200003B:
000458 e5e4      	LDI  R30,LOW(_tbl10_G100*2)
000459 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
00045a 83ee      	STD  Y+6,R30
00045b 83ff      	STD  Y+6+1,R31
00045c e015      	LDI  R17,LOW(5)
00045d c00c      	RJMP _0x200003D
                 _0x200003C:
00045e 35e8      	CPI  R30,LOW(0x58)
00045f f411      	BRNE _0x200003F
000460 6008      	ORI  R16,LOW(8)
000461 c003      	RJMP _0x2000040
                 _0x200003F:
000462 37e8      	CPI  R30,LOW(0x78)
000463 f009      	BREQ PC+2
000464 c0a1      	RJMP _0x2000071
                 _0x2000040:
000465 e5ee      	LDI  R30,LOW(_tbl16_G100*2)
000466 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000467 83ee      	STD  Y+6,R30
000468 83ff      	STD  Y+6+1,R31
000469 e014      	LDI  R17,LOW(4)
                 _0x200003D:
00046a ff02      	SBRS R16,2
00046b c014      	RJMP _0x2000042
00046c 940e 073e 	CALL SUBOPT_0x20
00046e 940e 0754 	CALL SUBOPT_0x23
000470 85ab      	LDD  R26,Y+11
000471 23aa      	TST  R26
000472 f43a      	BRPL _0x2000043
000473 85ea      	LDD  R30,Y+10
000474 85fb      	LDD  R31,Y+10+1
000475 940e 077f 	CALL __ANEGW1
000477 87ea      	STD  Y+10,R30
000478 87fb      	STD  Y+10+1,R31
000479 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
00047a 3040      	CPI  R20,0
00047b f011      	BREQ _0x2000044
00047c 5f1f      	SUBI R17,-LOW(1)
00047d c001      	RJMP _0x2000045
                 _0x2000044:
00047e 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
00047f c004      	RJMP _0x2000046
                 _0x2000042:
000480 940e 073e 	CALL SUBOPT_0x20
000482 940e 0754 	CALL SUBOPT_0x23
                 _0x2000046:
                 _0x2000036:
000484 fd00      	SBRC R16,0
000485 c011      	RJMP _0x2000047
                 _0x2000048:
000486 1715      	CP   R17,R21
000487 f478      	BRSH _0x200004A
000488 ff07      	SBRS R16,7
000489 c008      	RJMP _0x200004B
00048a ff02      	SBRS R16,2
00048b c004      	RJMP _0x200004C
00048c 7f0b      	ANDI R16,LOW(251)
00048d 2f24      	MOV  R18,R20
00048e 5011      	SUBI R17,LOW(1)
00048f c001      	RJMP _0x200004D
                 _0x200004C:
000490 e320      	LDI  R18,LOW(48)
                 _0x200004D:
000491 c001      	RJMP _0x200004E
                 _0x200004B:
000492 e220      	LDI  R18,LOW(32)
                 _0x200004E:
000493 940e 0737 	CALL SUBOPT_0x1F
000495 5051      	SUBI R21,LOW(1)
000496 cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
000497 2f31      	MOV  R19,R17
000498 ff01      	SBRS R16,1
000499 c017      	RJMP _0x200004F
                 _0x2000050:
00049a 3030      	CPI  R19,0
00049b f0a1      	BREQ _0x2000052
00049c ff03      	SBRS R16,3
00049d c006      	RJMP _0x2000053
00049e 81ee      	LDD  R30,Y+6
00049f 81ff      	LDD  R31,Y+6+1
0004a0 9125      	LPM  R18,Z+
0004a1 83ee      	STD  Y+6,R30
0004a2 83ff      	STD  Y+6+1,R31
0004a3 c005      	RJMP _0x2000054
                 _0x2000053:
0004a4 81ae      	LDD  R26,Y+6
0004a5 81bf      	LDD  R27,Y+6+1
0004a6 912d      	LD   R18,X+
0004a7 83ae      	STD  Y+6,R26
0004a8 83bf      	STD  Y+6+1,R27
                 _0x2000054:
0004a9 940e 0737 	CALL SUBOPT_0x1F
0004ab 3050      	CPI  R21,0
0004ac f009      	BREQ _0x2000055
0004ad 5051      	SUBI R21,LOW(1)
                 _0x2000055:
0004ae 5031      	SUBI R19,LOW(1)
0004af cfea      	RJMP _0x2000050
                 _0x2000052:
0004b0 c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
0004b1 e320      	LDI  R18,LOW(48)
0004b2 81ee      	LDD  R30,Y+6
0004b3 81ff      	LDD  R31,Y+6+1
0004b4 940e 078c 	CALL __GETW1PF
0004b6 87e8      	STD  Y+8,R30
0004b7 87f9      	STD  Y+8+1,R31
0004b8 81ee      	LDD  R30,Y+6
0004b9 81ff      	LDD  R31,Y+6+1
0004ba 9632      	ADIW R30,2
0004bb 83ee      	STD  Y+6,R30
0004bc 83ff      	STD  Y+6+1,R31
                 _0x200005A:
0004bd 85e8      	LDD  R30,Y+8
0004be 85f9      	LDD  R31,Y+8+1
0004bf 85aa      	LDD  R26,Y+10
0004c0 85bb      	LDD  R27,Y+10+1
0004c1 17ae      	CP   R26,R30
0004c2 07bf      	CPC  R27,R31
0004c3 f050      	BRLO _0x200005C
0004c4 5f2f      	SUBI R18,-LOW(1)
0004c5 85a8      	LDD  R26,Y+8
0004c6 85b9      	LDD  R27,Y+8+1
0004c7 85ea      	LDD  R30,Y+10
0004c8 85fb      	LDD  R31,Y+10+1
0004c9 1bea      	SUB  R30,R26
0004ca 0bfb      	SBC  R31,R27
0004cb 87ea      	STD  Y+10,R30
0004cc 87fb      	STD  Y+10+1,R31
0004cd cfef      	RJMP _0x200005A
                 _0x200005C:
0004ce 332a      	CPI  R18,58
0004cf f028      	BRLO _0x200005D
0004d0 ff03      	SBRS R16,3
0004d1 c002      	RJMP _0x200005E
0004d2 5f29      	SUBI R18,-LOW(7)
0004d3 c001      	RJMP _0x200005F
                 _0x200005E:
0004d4 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
0004d5 fd04      	SBRC R16,4
0004d6 c01a      	RJMP _0x2000061
0004d7 3321      	CPI  R18,49
0004d8 f420      	BRSH _0x2000063
0004d9 85a8      	LDD  R26,Y+8
0004da 85b9      	LDD  R27,Y+8+1
0004db 9711      	SBIW R26,1
0004dc f409      	BRNE _0x2000062
                 _0x2000063:
0004dd c009      	RJMP _0x20000CD
                 _0x2000062:
0004de 1753      	CP   R21,R19
0004df f010      	BRLO _0x2000067
0004e0 ff00      	SBRS R16,0
0004e1 c001      	RJMP _0x2000068
                 _0x2000067:
0004e2 c013      	RJMP _0x2000066
                 _0x2000068:
0004e3 e220      	LDI  R18,LOW(32)
0004e4 ff07      	SBRS R16,7
0004e5 c00b      	RJMP _0x2000069
0004e6 e320      	LDI  R18,LOW(48)
                 _0x20000CD:
0004e7 6100      	ORI  R16,LOW(16)
0004e8 ff02      	SBRS R16,2
0004e9 c007      	RJMP _0x200006A
0004ea 7f0b      	ANDI R16,LOW(251)
0004eb 934a      	ST   -Y,R20
0004ec 940e 0744 	CALL SUBOPT_0x21
0004ee 3050      	CPI  R21,0
0004ef f009      	BREQ _0x200006B
0004f0 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
0004f1 940e 0737 	CALL SUBOPT_0x1F
0004f3 3050      	CPI  R21,0
0004f4 f009      	BREQ _0x200006C
0004f5 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
0004f6 5031      	SUBI R19,LOW(1)
0004f7 85a8      	LDD  R26,Y+8
0004f8 85b9      	LDD  R27,Y+8+1
0004f9 9712      	SBIW R26,2
0004fa f008      	BRLO _0x2000059
0004fb cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
0004fc ff00      	SBRS R16,0
0004fd c008      	RJMP _0x200006D
                 _0x200006E:
0004fe 3050      	CPI  R21,0
0004ff f031      	BREQ _0x2000070
000500 5051      	SUBI R21,LOW(1)
000501 e2e0      	LDI  R30,LOW(32)
000502 93ea      	ST   -Y,R30
000503 940e 0744 	CALL SUBOPT_0x21
000505 cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
000506 e010      	LDI  R17,LOW(0)
                 _0x200001B:
000507 cee0      	RJMP _0x2000016
                 _0x2000018:
000508 85ac      	LDD  R26,Y+12
000509 85bd      	LDD  R27,Y+12+1
00050a 940e 0788 	CALL __GETW1P
00050c 940e 079c 	CALL __LOADLOCR6
00050e 9664      	ADIW R28,20
00050f 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000510 92ff      	PUSH R15
000511 2ef8      	MOV  R15,R24
000512 9726      	SBIW R28,6
000513 940e 0797 	CALL __SAVELOCR4
000515 940e 075c 	CALL SUBOPT_0x24
000517 9730      	SBIW R30,0
000518 f419      	BRNE _0x2000072
000519 efef      	LDI  R30,LOW(65535)
00051a efff      	LDI  R31,HIGH(65535)
00051b c023      	RJMP _0x20C0004
                 _0x2000072:
00051c 01de      	MOVW R26,R28
00051d 9616      	ADIW R26,6
00051e 940e 077b 	CALL __ADDW2R15
000520 018d      	MOVW R16,R26
000521 940e 075c 	CALL SUBOPT_0x24
000523 83ee      	STD  Y+6,R30
000524 83ff      	STD  Y+6+1,R31
000525 e0e0      	LDI  R30,LOW(0)
000526 87e8      	STD  Y+8,R30
000527 87e9      	STD  Y+8+1,R30
000528 01de      	MOVW R26,R28
000529 961a      	ADIW R26,10
00052a 940e 077b 	CALL __ADDW2R15
00052c 940e 0788 	CALL __GETW1P
00052e 93fa      	ST   -Y,R31
00052f 93ea      	ST   -Y,R30
000530 931a      	ST   -Y,R17
000531 930a      	ST   -Y,R16
000532 e9ec      	LDI  R30,LOW(_put_buff_G100)
000533 e0f3      	LDI  R31,HIGH(_put_buff_G100)
000534 93fa      	ST   -Y,R31
000535 93ea      	ST   -Y,R30
000536 01de      	MOVW R26,R28
000537 961a      	ADIW R26,10
000538 dea3      	RCALL __print_G100
000539 019f      	MOVW R18,R30
00053a 81ae      	LDD  R26,Y+6
00053b 81bf      	LDD  R27,Y+6+1
00053c e0e0      	LDI  R30,LOW(0)
00053d 93ec      	ST   X,R30
00053e 01f9      	MOVW R30,R18
                 _0x20C0004:
00053f 940e 079e 	CALL __LOADLOCR4
000541 962a      	ADIW R28,10
000542 90ff      	POP  R15
000543 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000544 93ba      	ST   -Y,R27
000545 93aa      	ST   -Y,R26
000546 91a9          ld   r26,y+
000547 91b9          ld   r27,y+
000548 27ee          clr  r30
000549 27ff          clr  r31
                 strlen0:
00054a 916d          ld   r22,x+
00054b 2366          tst  r22
00054c f011          breq strlen1
00054d 9631          adiw r30,1
00054e cffb          rjmp strlen0
                 strlen1:
00054f 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000550 93ba      	ST   -Y,R27
000551 93aa      	ST   -Y,R26
000552 27aa          clr  r26
000553 27bb          clr  r27
000554 91e9          ld   r30,y+
000555 91f9          ld   r31,y+
                 strlenf0:
000556 9005      	lpm  r0,z+
000557 2000          tst  r0
000558 f011          breq strlenf1
000559 9611          adiw r26,1
00055a cffb          rjmp strlenf0
                 strlenf1:
00055b 01fd          movw r30,r26
00055c 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
00055d 93ba      	ST   -Y,R27
00055e 93aa      	ST   -Y,R26
00055f 91a9          ld   r26,y+
000560 91b9          ld   r27,y+
000561 91e9          ld   r30,y+
000562 91f9          ld   r31,y+
000563 9630          adiw r30,0
000564 f42a          brpl __itoa0
000565 95e0          com  r30
000566 95f0          com  r31
000567 9631          adiw r30,1
000568 e26d          ldi  r22,'-'
000569 936d          st   x+,r22
                 __itoa0:
00056a 94e8          clt
00056b e180          ldi  r24,low(10000)
00056c e297          ldi  r25,high(10000)
00056d d00d          rcall __itoa1
00056e ee88          ldi  r24,low(1000)
00056f e093          ldi  r25,high(1000)
000570 d00a          rcall __itoa1
000571 e684          ldi  r24,100
000572 2799          clr  r25
000573 d007          rcall __itoa1
000574 e08a          ldi  r24,10
000575 d005          rcall __itoa1
000576 2f6e          mov  r22,r30
000577 d010          rcall __itoa5
000578 2766          clr  r22
000579 936c          st   x,r22
00057a 9508          ret
                 
                 __itoa1:
00057b 2766          clr	 r22
                 __itoa2:
00057c 17e8          cp   r30,r24
00057d 07f9          cpc  r31,r25
00057e f020          brlo __itoa3
00057f 9563          inc  r22
000580 1be8          sub  r30,r24
000581 0bf9          sbc  r31,r25
000582 f7c9          brne __itoa2
                 __itoa3:
000583 2366          tst  r22
000584 f411          brne __itoa4
000585 f016          brts __itoa5
000586 9508          ret
                 __itoa4:
000587 9468          set
                 __itoa5:
000588 5d60          subi r22,-0x30
000589 936d          st   x+,r22
00058a 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G103:
                 ; .FSTART __lcd_write_nibble_G103
00058b 93aa      	ST   -Y,R26
00058c b3e8      	IN   R30,0x18
00058d 70ef      	ANDI R30,LOW(0xF)
00058e 2fae      	MOV  R26,R30
00058f 81e8      	LD   R30,Y
000590 7fe0      	ANDI R30,LOW(0xF0)
000591 2bea      	OR   R30,R26
000592 bbe8      	OUT  0x18,R30
                +
000593 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000594 958a     +DEC R24
000595 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000596 9ac2      	SBI  0x18,2
                +
000597 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000598 958a     +DEC R24
000599 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00059a 98c2      	CBI  0x18,2
                +
00059b e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00059c 958a     +DEC R24
00059d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00059e c09a      	RJMP _0x20C0001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
00059f 93aa      	ST   -Y,R26
0005a0 81a8      	LD   R26,Y
0005a1 dfe9      	RCALL __lcd_write_nibble_G103
0005a2 81e8          ld    r30,y
0005a3 95e2          swap  r30
0005a4 83e8          st    y,r30
0005a5 81a8      	LD   R26,Y
0005a6 dfe4      	RCALL __lcd_write_nibble_G103
                +
0005a7 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0005a8 958a     +DEC R24
0005a9 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0005aa c08e      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0005ab 93aa      	ST   -Y,R26
0005ac 81e8      	LD   R30,Y
0005ad e0f0      	LDI  R31,0
0005ae 53e8      	SUBI R30,LOW(-__base_y_G103)
0005af 4ffd      	SBCI R31,HIGH(-__base_y_G103)
0005b0 81e0      	LD   R30,Z
0005b1 81a9      	LDD  R26,Y+1
0005b2 0fae      	ADD  R26,R30
0005b3 dfeb      	RCALL __lcd_write_data
0005b4 81e9      	LDD  R30,Y+1
0005b5 93e0 02cc 	STS  __lcd_x,R30
0005b7 81e8      	LD   R30,Y
0005b8 93e0 02cd 	STS  __lcd_y,R30
                 _0x20C0003:
0005ba 9622      	ADIW R28,2
0005bb 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0005bc e0a2      	LDI  R26,LOW(2)
0005bd 940e 0763 	CALL SUBOPT_0x25
0005bf e0ac      	LDI  R26,LOW(12)
0005c0 dfde      	RCALL __lcd_write_data
0005c1 e0a1      	LDI  R26,LOW(1)
0005c2 940e 0763 	CALL SUBOPT_0x25
0005c4 e0e0      	LDI  R30,LOW(0)
0005c5 93e0 02cd 	STS  __lcd_y,R30
0005c7 93e0 02cc 	STS  __lcd_x,R30
0005c9 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0005ca 93aa      	ST   -Y,R26
0005cb 81a8      	LD   R26,Y
0005cc 30aa      	CPI  R26,LOW(0xA)
0005cd f031      	BREQ _0x2060005
0005ce 91e0 02ce 	LDS  R30,__lcd_maxx
0005d0 91a0 02cc 	LDS  R26,__lcd_x
0005d2 17ae      	CP   R26,R30
0005d3 f060      	BRLO _0x2060004
                 _0x2060005:
0005d4 e0e0      	LDI  R30,LOW(0)
0005d5 93ea      	ST   -Y,R30
0005d6 91a0 02cd 	LDS  R26,__lcd_y
0005d8 5faf      	SUBI R26,-LOW(1)
0005d9 93a0 02cd 	STS  __lcd_y,R26
0005db dfcf      	RCALL _lcd_gotoxy
0005dc 81a8      	LD   R26,Y
0005dd 30aa      	CPI  R26,LOW(0xA)
0005de f409      	BRNE _0x2060007
0005df c059      	RJMP _0x20C0001
                 _0x2060007:
                 _0x2060004:
0005e0 91e0 02cc 	LDS  R30,__lcd_x
0005e2 5fef      	SUBI R30,-LOW(1)
0005e3 93e0 02cc 	STS  __lcd_x,R30
0005e5 9ac0      	SBI  0x18,0
0005e6 81a8      	LD   R26,Y
0005e7 dfb7      	RCALL __lcd_write_data
0005e8 98c0      	CBI  0x18,0
0005e9 c04f      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0005ea 93ba      	ST   -Y,R27
0005eb 93aa      	ST   -Y,R26
0005ec 931a      	ST   -Y,R17
                 _0x2060008:
0005ed 81a9      	LDD  R26,Y+1
0005ee 81ba      	LDD  R27,Y+1+1
0005ef 91ed      	LD   R30,X+
0005f0 83a9      	STD  Y+1,R26
0005f1 83ba      	STD  Y+1+1,R27
0005f2 2f1e      	MOV  R17,R30
0005f3 30e0      	CPI  R30,0
0005f4 f019      	BREQ _0x206000A
0005f5 2fa1      	MOV  R26,R17
0005f6 dfd3      	RCALL _lcd_putchar
0005f7 cff5      	RJMP _0x2060008
                 _0x206000A:
0005f8 c010      	RJMP _0x20C0002
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
0005f9 93ba      	ST   -Y,R27
0005fa 93aa      	ST   -Y,R26
0005fb 931a      	ST   -Y,R17
                 _0x206000B:
0005fc 81e9      	LDD  R30,Y+1
0005fd 81fa      	LDD  R31,Y+1+1
0005fe 9631      	ADIW R30,1
0005ff 83e9      	STD  Y+1,R30
000600 83fa      	STD  Y+1+1,R31
000601 9731      	SBIW R30,1
000602 91e4      	LPM  R30,Z
000603 2f1e      	MOV  R17,R30
000604 30e0      	CPI  R30,0
000605 f019      	BREQ _0x206000D
000606 2fa1      	MOV  R26,R17
000607 dfc2      	RCALL _lcd_putchar
000608 cff3      	RJMP _0x206000B
                 _0x206000D:
                 _0x20C0002:
000609 8118      	LDD  R17,Y+0
00060a 9623      	ADIW R28,3
00060b 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00060c 93aa      	ST   -Y,R26
00060d b3e7      	IN   R30,0x17
00060e 6fe0      	ORI  R30,LOW(0xF0)
00060f bbe7      	OUT  0x17,R30
000610 9aba      	SBI  0x17,2
000611 9ab8      	SBI  0x17,0
000612 9ab9      	SBI  0x17,1
000613 98c2      	CBI  0x18,2
000614 98c0      	CBI  0x18,0
000615 98c1      	CBI  0x18,1
000616 81e8      	LD   R30,Y
000617 93e0 02ce 	STS  __lcd_maxx,R30
000619 58e0      	SUBI R30,-LOW(128)
                +
00061a 93e0 02ca+STS __base_y_G103 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G103,2
00061c 81e8      	LD   R30,Y
00061d 54e0      	SUBI R30,-LOW(192)
                +
00061e 93e0 02cb+STS __base_y_G103 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G103,3
000620 e1a4      	LDI  R26,LOW(20)
000621 e0b0      	LDI  R27,0
000622 940e 0771 	CALL _delay_ms
000624 940e 0769 	CALL SUBOPT_0x26
000626 940e 0769 	CALL SUBOPT_0x26
000628 940e 0769 	CALL SUBOPT_0x26
00062a e2a0      	LDI  R26,LOW(32)
00062b df5f      	RCALL __lcd_write_nibble_G103
                +
00062c ec88     +LDI R24 , LOW ( 200 )
00062d e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00062e 9701     +SBIW R24 , 1
00062f f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000630 e2a8      	LDI  R26,LOW(40)
000631 df6d      	RCALL __lcd_write_data
000632 e0a4      	LDI  R26,LOW(4)
000633 df6b      	RCALL __lcd_write_data
000634 e8a5      	LDI  R26,LOW(133)
000635 df69      	RCALL __lcd_write_data
000636 e0a6      	LDI  R26,LOW(6)
000637 df67      	RCALL __lcd_write_data
000638 df83      	RCALL _lcd_clear
                 _0x20C0001:
000639 9621      	ADIW R28,1
00063a 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _totalcount6:
000260           	.BYTE 0x2
                 _nobat6:
000262           	.BYTE 0x2
                 _totalcount7:
000264           	.BYTE 0x2
                 _nobat7:
000266           	.BYTE 0x2
                 _TotalCount:
000268           	.BYTE 0x2
                 _badje1:
00026a           	.BYTE 0x2
                 _badje2:
00026c           	.BYTE 0x2
                 _badje3:
00026e           	.BYTE 0x2
                 _badje4:
000270           	.BYTE 0x2
                 _badje5:
000272           	.BYTE 0x2
                 _badje6:
000274           	.BYTE 0x2
                 _badje7:
000276           	.BYTE 0x2
                 _namayesh:
000278           	.BYTE 0x2
                 _d1:
00027a           	.BYTE 0x2
                 _d2:
00027c           	.BYTE 0x2
                 _d3:
00027e           	.BYTE 0x2
                 _d4:
000280           	.BYTE 0x2
                 _d5:
000282           	.BYTE 0x2
                 _d6:
000284           	.BYTE 0x2
                 _d7:
000286           	.BYTE 0x2
                 _entezar:
000288           	.BYTE 0x2
                 _str2:
00028a           	.BYTE 0xA
                 _str3:
000294           	.BYTE 0x11
                 _reset:
0002a5           	.BYTE 0x2
                 _saat_yekonim:
0002a7           	.BYTE 0x2
                 _str1:
0002a9           	.BYTE 0xA
                 _lcd_buffer:
0002b3           	.BYTE 0x11
                 __seed_G102:
0002c4           	.BYTE 0x4
                 __base_y_G103:
0002c8           	.BYTE 0x4
                 __lcd_x:
0002cc           	.BYTE 0x1
                 __lcd_y:
0002cd           	.BYTE 0x1
                 __lcd_maxx:
0002ce           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
00063b 91e0 02a7 	LDS  R30,_saat_yekonim
00063d 91f0 02a8 	LDS  R31,_saat_yekonim+1
00063f 9730      	SBIW R30,0
000640 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1:
000641 91e0 0268 	LDS  R30,_TotalCount
000643 91f0 0269 	LDS  R31,_TotalCount+1
000645 9631      	ADIW R30,1
000646 93e0 0268 	STS  _TotalCount,R30
000648 93f0 0269 	STS  _TotalCount+1,R31
00064a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2:
00064b e0e1      	LDI  R30,LOW(1)
00064c e0f0      	LDI  R31,HIGH(1)
00064d 93e0 026a 	STS  _badje1,R30
00064f 93f0 026b 	STS  _badje1+1,R31
000651 01f6      	MOVW R30,R12
000652 9631      	ADIW R30,1
000653 016f      	MOVW R12,R30
000654 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3:
000655 e0e1      	LDI  R30,LOW(1)
000656 e0f0      	LDI  R31,HIGH(1)
000657 93e0 0278 	STS  _namayesh,R30
000659 93f0 0279 	STS  _namayesh+1,R31
00065b 92da      	ST   -Y,R13
00065c 92ca      	ST   -Y,R12
00065d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
00065e e0e1      	LDI  R30,LOW(1)
00065f e0f0      	LDI  R31,HIGH(1)
000660 93e0 026c 	STS  _badje2,R30
000662 93f0 026d 	STS  _badje2+1,R31
000664 01f6      	MOVW R30,R12
000665 9631      	ADIW R30,1
000666 016f      	MOVW R12,R30
000667 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5:
000668 e0e1      	LDI  R30,LOW(1)
000669 e0f0      	LDI  R31,HIGH(1)
00066a 93e0 026e 	STS  _badje3,R30
00066c 93f0 026f 	STS  _badje3+1,R31
00066e 01f6      	MOVW R30,R12
00066f 9631      	ADIW R30,1
000670 016f      	MOVW R12,R30
000671 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x6:
000672 e0e1      	LDI  R30,LOW(1)
000673 e0f0      	LDI  R31,HIGH(1)
000674 93e0 0270 	STS  _badje4,R30
000676 93f0 0271 	STS  _badje4+1,R31
000678 01f6      	MOVW R30,R12
000679 9631      	ADIW R30,1
00067a 016f      	MOVW R12,R30
00067b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x7:
00067c e0e1      	LDI  R30,LOW(1)
00067d e0f0      	LDI  R31,HIGH(1)
00067e 93e0 0272 	STS  _badje5,R30
000680 93f0 0273 	STS  _badje5+1,R31
000682 01f6      	MOVW R30,R12
000683 9631      	ADIW R30,1
000684 016f      	MOVW R12,R30
000685 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x8:
000686 e0e1      	LDI  R30,LOW(1)
000687 e0f0      	LDI  R31,HIGH(1)
000688 93e0 0278 	STS  _namayesh,R30
00068a 93f0 0279 	STS  _namayesh+1,R31
00068c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x9:
00068d 93e0 0278 	STS  _namayesh,R30
00068f 93e0 0279 	STS  _namayesh+1,R30
000691 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xA:
000692 e0e1      	LDI  R30,LOW(1)
000693 e0f0      	LDI  R31,HIGH(1)
000694 93e0 0274 	STS  _badje6,R30
000696 93f0 0275 	STS  _badje6+1,R31
000698 91e0 0262 	LDS  R30,_nobat6
00069a 91f0 0263 	LDS  R31,_nobat6+1
00069c 9631      	ADIW R30,1
00069d 93e0 0262 	STS  _nobat6,R30
00069f 93f0 0263 	STS  _nobat6+1,R31
0006a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
0006a2 91e0 0262 	LDS  R30,_nobat6
0006a4 91f0 0263 	LDS  R31,_nobat6+1
0006a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
0006a7 93fa      	ST   -Y,R31
0006a8 93ea      	ST   -Y,R30
0006a9 e0a6      	LDI  R26,LOW(6)
0006aa e0b0      	LDI  R27,0
0006ab 940c 02ff 	JMP  _LCD_namayesh_go_to_badje
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xD:
0006ad 1bea      	SUB  R30,R26
0006ae 0bfb      	SBC  R31,R27
0006af 83e8      	ST   Y,R30
0006b0 83f9      	STD  Y+1,R31
0006b1 81a8      	LD   R26,Y
0006b2 81b9      	LDD  R27,Y+1
0006b3 940e 032b 	CALL _LCD_namayesh_entezar
0006b5 9622      	ADIW R28,2
0006b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xE:
0006b7 e0e1      	LDI  R30,LOW(1)
0006b8 e0f0      	LDI  R31,HIGH(1)
0006b9 93e0 0276 	STS  _badje7,R30
0006bb 93f0 0277 	STS  _badje7+1,R31
0006bd 91e0 0266 	LDS  R30,_nobat7
0006bf 91f0 0267 	LDS  R31,_nobat7+1
0006c1 9631      	ADIW R30,1
0006c2 93e0 0266 	STS  _nobat7,R30
0006c4 93f0 0267 	STS  _nobat7+1,R31
0006c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
0006c7 91e0 0266 	LDS  R30,_nobat7
0006c9 91f0 0267 	LDS  R31,_nobat7+1
0006cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
0006cc 93fa      	ST   -Y,R31
0006cd 93ea      	ST   -Y,R30
0006ce e0a7      	LDI  R26,LOW(7)
0006cf e0b0      	LDI  R27,0
0006d0 940c 02ff 	JMP  _LCD_namayesh_go_to_badje
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x11:
0006d2 e0e0      	LDI  R30,LOW(0)
0006d3 93e0 026a 	STS  _badje1,R30
0006d5 93e0 026b 	STS  _badje1+1,R30
0006d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12:
0006d8 e0e0      	LDI  R30,LOW(0)
0006d9 93e0 026c 	STS  _badje2,R30
0006db 93e0 026d 	STS  _badje2+1,R30
0006dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
0006de e0e0      	LDI  R30,LOW(0)
0006df 93e0 026e 	STS  _badje3,R30
0006e1 93e0 026f 	STS  _badje3+1,R30
0006e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
0006e4 e0e0      	LDI  R30,LOW(0)
0006e5 93e0 0270 	STS  _badje4,R30
0006e7 93e0 0271 	STS  _badje4+1,R30
0006e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x15:
0006ea e0e0      	LDI  R30,LOW(0)
0006eb 93e0 0272 	STS  _badje5,R30
0006ed 93e0 0273 	STS  _badje5+1,R30
0006ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16:
0006f0 e0e0      	LDI  R30,LOW(0)
0006f1 93e0 0274 	STS  _badje6,R30
0006f3 93e0 0275 	STS  _badje6+1,R30
0006f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17:
0006f6 e0e0      	LDI  R30,LOW(0)
0006f7 93e0 0276 	STS  _badje7,R30
0006f9 93e0 0277 	STS  _badje7+1,R30
0006fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:26 WORDS
                 SUBOPT_0x18:
0006fc 24aa      	CLR  R10
0006fd 24bb      	CLR  R11
0006fe 24cc      	CLR  R12
0006ff 24dd      	CLR  R13
000700 e0e0      	LDI  R30,LOW(0)
000701 93e0 0260 	STS  _totalcount6,R30
000703 93e0 0261 	STS  _totalcount6+1,R30
000705 93e0 0262 	STS  _nobat6,R30
000707 93e0 0263 	STS  _nobat6+1,R30
000709 93e0 0264 	STS  _totalcount7,R30
00070b 93e0 0265 	STS  _totalcount7+1,R30
00070d 93e0 0266 	STS  _nobat7,R30
00070f 93e0 0267 	STS  _nobat7+1,R30
000711 93e0 0268 	STS  _TotalCount,R30
000713 93e0 0269 	STS  _TotalCount+1,R30
000715 cfbc      	RJMP SUBOPT_0x11
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
000716 940e 0783 	CALL __CWD1
000718 940e 0790 	CALL __PUTPARD1
00071a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A:
00071b e0e0      	LDI  R30,LOW(0)
00071c 93ea      	ST   -Y,R30
00071d e0a0      	LDI  R26,LOW(0)
00071e 940c 05ab 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B:
000720 940e 05ea 	CALL _lcd_puts
000722 eea8      	LDI  R26,LOW(1000)
000723 e0b3      	LDI  R27,HIGH(1000)
000724 940e 0771 	CALL _delay_ms
000726 940c 05bc 	JMP  _lcd_clear
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
000728 93ea      	ST   -Y,R30
000729 e0a0      	LDI  R26,LOW(0)
00072a 940c 05ab 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
00072c b3e3      	IN   R30,0x13
00072d 70e7      	ANDI R30,LOW(0x7)
00072e 2f0e      	MOV  R16,R30
00072f 3007      	CPI  R16,7
000730 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E:
000731 2fe0      	MOV  R30,R16
000732 e0f0      	LDI  R31,0
000733 30e6      	CPI  R30,LOW(0x6)
000734 e0a0      	LDI  R26,HIGH(0x6)
000735 07fa      	CPC  R31,R26
000736 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1F:
000737 932a      	ST   -Y,R18
000738 85ad      	LDD  R26,Y+13
000739 85be      	LDD  R27,Y+13+1
00073a 85ef      	LDD  R30,Y+15
00073b 89f8      	LDD  R31,Y+15+1
00073c 9509      	ICALL
00073d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x20:
00073e 89e8      	LDD  R30,Y+16
00073f 89f9      	LDD  R31,Y+16+1
000740 9734      	SBIW R30,4
000741 8be8      	STD  Y+16,R30
000742 8bf9      	STD  Y+16+1,R31
000743 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x21:
000744 85ad      	LDD  R26,Y+13
000745 85be      	LDD  R27,Y+13+1
000746 85ef      	LDD  R30,Y+15
000747 89f8      	LDD  R31,Y+15+1
000748 9509      	ICALL
000749 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x22:
00074a 89a8      	LDD  R26,Y+16
00074b 89b9      	LDD  R27,Y+16+1
00074c 9614      	ADIW R26,4
00074d 940e 0788 	CALL __GETW1P
00074f 83ee      	STD  Y+6,R30
000750 83ff      	STD  Y+6+1,R31
000751 81ae      	LDD  R26,Y+6
000752 81bf      	LDD  R27,Y+6+1
000753 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x23:
000754 89a8      	LDD  R26,Y+16
000755 89b9      	LDD  R27,Y+16+1
000756 9614      	ADIW R26,4
000757 940e 0788 	CALL __GETW1P
000759 87ea      	STD  Y+10,R30
00075a 87fb      	STD  Y+10+1,R31
00075b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
00075c 01de      	MOVW R26,R28
00075d 961c      	ADIW R26,12
00075e 940e 077b 	CALL __ADDW2R15
000760 940e 0788 	CALL __GETW1P
000762 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
000763 940e 059f 	CALL __lcd_write_data
000765 e0a3      	LDI  R26,LOW(3)
000766 e0b0      	LDI  R27,0
000767 940c 0771 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x26:
000769 e3a0      	LDI  R26,LOW(48)
00076a 940e 058b 	CALL __lcd_write_nibble_G103
                +
00076c ec88     +LDI R24 , LOW ( 200 )
00076d e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00076e 9701     +SBIW R24 , 1
00076f f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000770 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000771 9610      	adiw r26,0
000772 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000773 ed80     +LDI R24 , LOW ( 0x7D0 )
000774 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000775 9701     +SBIW R24 , 1
000776 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000777 95a8      	wdr
000778 9711      	sbiw r26,1
000779 f7c9      	brne __delay_ms0
                 __delay_ms1:
00077a 9508      	ret
                 
                 __ADDW2R15:
00077b 2400      	CLR  R0
00077c 0daf      	ADD  R26,R15
00077d 1db0      	ADC  R27,R0
00077e 9508      	RET
                 
                 __ANEGW1:
00077f 95f1      	NEG  R31
000780 95e1      	NEG  R30
000781 40f0      	SBCI R31,0
000782 9508      	RET
                 
                 __CWD1:
000783 2f6f      	MOV  R22,R31
000784 0f66      	ADD  R22,R22
000785 0b66      	SBC  R22,R22
000786 2f76      	MOV  R23,R22
000787 9508      	RET
                 
                 __GETW1P:
000788 91ed      	LD   R30,X+
000789 91fc      	LD   R31,X
00078a 9711      	SBIW R26,1
00078b 9508      	RET
                 
                 __GETW1PF:
00078c 9005      	LPM  R0,Z+
00078d 91f4      	LPM  R31,Z
00078e 2de0      	MOV  R30,R0
00078f 9508      	RET
                 
                 __PUTPARD1:
000790 937a      	ST   -Y,R23
000791 936a      	ST   -Y,R22
000792 93fa      	ST   -Y,R31
000793 93ea      	ST   -Y,R30
000794 9508      	RET
                 
                 __SAVELOCR6:
000795 935a      	ST   -Y,R21
                 __SAVELOCR5:
000796 934a      	ST   -Y,R20
                 __SAVELOCR4:
000797 933a      	ST   -Y,R19
                 __SAVELOCR3:
000798 932a      	ST   -Y,R18
                 __SAVELOCR2:
000799 931a      	ST   -Y,R17
00079a 930a      	ST   -Y,R16
00079b 9508      	RET
                 
                 __LOADLOCR6:
00079c 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00079d 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00079e 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00079f 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0007a0 8119      	LDD  R17,Y+1
0007a1 8108      	LD   R16,Y
0007a2 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  13 r1 :   3 r2 :   0 r3 :   0 r4 :   6 r5 :   3 r6 :   6 r7 :   3 
r8 :   7 r9 :   4 r10:   9 r11:   6 r12:  23 r13:   8 r14:   0 r15:   6 
r16:  39 r17:  46 r18:  29 r19:   8 r20:   9 r21:  17 r22:  23 r23:   4 
r24:  31 r25:  12 r26: 173 r27:  75 r28:  18 r29:   1 r30: 443 r31: 165 
x  :  26 y  : 251 z  :  16 
Registers used: 32 out of 35 (91.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   4 
adiw  :  50 and   :   0 andi  :   7 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  25 
brge  :   8 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   9 
brlt  :   1 brmi  :   1 brne  :  63 brpl  :   2 brsh  :   2 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 161 
cbi   :   9 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  22 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   2 
cp    :  18 cpc   :  32 cpi   :  52 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   7 inc   :   1 jmp   :  29 ld    :  51 ldd   :  82 ldi   : 235 
lds   :  52 lpm   :  16 lsl   :   0 lsr   :   0 mov   :  24 movw  :  41 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   9 out   :  33 pop   :   1 push  :   1 rcall :  32 ret   :  55 
reti  :   2 rjmp  :  94 rol   :   0 ror   :   0 sbc   :   5 sbci  :   2 
sbi   :   9 sbic  :   0 sbis  :   1 sbiw  :  32 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 113 std   :  34 sts   :  85 sub   :   4 subi  :  19 swap  :   1 
tst   :   5 wdr   :   1 
Instructions used: 62 out of 116 (53.4%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000f46   3794    116   3910   32768  11.9%
[.dseg] 0x000060 0x0002cf      0    111    111    2048   5.4%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 13 warnings
